{"id":"../node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js","dependencies":[{"name":"/home/azbang/Mottion/node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/azbang/Mottion/package.json","includedInParent":true,"mtime":1573228017989},{"name":"/home/azbang/Mottion/node_modules/@pixi/filter-cross-hatch/package.json","includedInParent":true,"mtime":1573228016353},{"name":"@pixi/core","loc":{"line":8,"column":23},"parent":"/home/azbang/Mottion/node_modules/@pixi/filter-cross-hatch/lib/filter-cross-hatch.esm.js","resolved":"/home/azbang/Mottion/node_modules/@pixi/core/lib/core.es.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CrossHatchFilter = void 0;\n\nvar _core = require(\"@pixi/core\");\n\n/*!\n * @pixi/filter-cross-hatch - v3.0.3\n * Compiled Wed, 29 May 2019 03:04:05 UTC\n *\n * @pixi/filter-cross-hatch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\nvar fragment = \"precision mediump float;\\n\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\\n\\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n    if (lum < 1.00)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.75)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.50)\\n    {\\n        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n\\n    if (lum < 0.3)\\n    {\\n        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0)\\n        {\\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\n        }\\n    }\\n}\\n\";\n/**\n * A Cross Hatch effect filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/cross-hatch.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-cross-hatch|@pixi/filter-cross-hatch}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\n\nvar CrossHatchFilter =\n/*@__PURE__*/\nfunction (Filter) {\n  function CrossHatchFilter() {\n    Filter.call(this, vertex, fragment);\n  }\n\n  if (Filter) CrossHatchFilter.__proto__ = Filter;\n  CrossHatchFilter.prototype = Object.create(Filter && Filter.prototype);\n  CrossHatchFilter.prototype.constructor = CrossHatchFilter;\n  return CrossHatchFilter;\n}(_core.Filter);\n\nexports.CrossHatchFilter = CrossHatchFilter;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":0},"generated":{"line":30,"column":0}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":6},"generated":{"line":30,"column":4}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":30,"column":20}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":31,"column":0}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":32,"column":0}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":32,"column":10}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":32,"column":16}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":32,"column":18}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":16,"column":4},"generated":{"line":33,"column":0}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":16,"column":4},"generated":{"line":33,"column":11}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":16,"column":4},"generated":{"line":33,"column":27}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":16,"column":18},"generated":{"line":33,"column":30}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":0}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":4}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":10}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":11}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":15}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":17,"column":13},"generated":{"line":34,"column":16}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":20}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":17,"column":14},"generated":{"line":34,"column":22}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":28}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":17,"column":22},"generated":{"line":34,"column":30}},{"source":"../src/CrossHatchFilter.js","name":"super","original":{"line":17,"column":8},"generated":{"line":34,"column":38}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":41,"column":1}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":31},"generated":{"line":41,"column":2}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":22},"generated":{"line":41,"column":14}},{"source":"../src/CrossHatchFilter.js","name":null,"original":{"line":15,"column":0},"generated":{"line":41,"column":15}}],"sources":{"../src/CrossHatchFilter.js":"import {vertex} from '@tools/fragments';\nimport fragment from './crosshatch.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * A Cross Hatch effect filter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/cross-hatch.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-cross-hatch|@pixi/filter-cross-hatch}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n */\nclass CrossHatchFilter extends Filter {\n    constructor() {\n        super(vertex, fragment);\n    }\n}\n\nexport { CrossHatchFilter };\n"},"lineCount":null}},"error":null,"hash":"0e1ce9a224302704dae9c856482e2476","cacheData":{"env":{}}}