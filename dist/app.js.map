{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/pixi-projection/dist/pixi-projection.js","node_modules/pixi-sound/dist/pixi-sound.js","node_modules/pixi-tween/build/pixi-tween.js","node_modules/screenfull/dist/screenfull.js","node_modules/webfontloader/webfontloader.js","src/Game.js","src/content/blocks.json","src/content/history.json","src/content/map.json","src/content/scripts.js","src/content/triggers.json","src/content/types.json","src/core/Debugger.js","src/core/Loader.js","src/core/Mouse.js","src/core/Music.js","src/core/Scenes.js","src/core/Scripts.js","src/core/Settings.js","src/core/Splash.js","src/core/Store.js","src/index.js","src/managers/FxManager.js","src/managers/GameplayManager.js","src/managers/HistoryManager.js","src/managers/InterfaceManager.js","src/managers/MapManager.js","src/managers/ParalaxManager.js","src/managers/TiledManager.js","src/scenes/Final.js","src/scenes/Menu.js","src/scenes/Playground.js","src/scenes/Settings.js","src/scenes/index.js","src/subjects/Block.js","src/subjects/Player.js","src/subjects/Tile.js"],"names":[],"mappingstnxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrazlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACplEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACljDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","var pixi_projection;\r\n(function (pixi_projection) {\r\n    var utils;\r\n    (function (utils) {\r\n        function createIndicesForQuads(size) {\r\n            var totalIndices = size * 6;\r\n            var indices = new Uint16Array(totalIndices);\r\n            for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\r\n                indices[i + 0] = j + 0;\r\n                indices[i + 1] = j + 1;\r\n                indices[i + 2] = j + 2;\r\n                indices[i + 3] = j + 0;\r\n                indices[i + 4] = j + 2;\r\n                indices[i + 5] = j + 3;\r\n            }\r\n            return indices;\r\n        }\r\n        utils.createIndicesForQuads = createIndicesForQuads;\r\n        function isPow2(v) {\r\n            return !(v & (v - 1)) && (!!v);\r\n        }\r\n        utils.isPow2 = isPow2;\r\n        function nextPow2(v) {\r\n            v += +(v === 0);\r\n            --v;\r\n            v |= v >>> 1;\r\n            v |= v >>> 2;\r\n            v |= v >>> 4;\r\n            v |= v >>> 8;\r\n            v |= v >>> 16;\r\n            return v + 1;\r\n        }\r\n        utils.nextPow2 = nextPow2;\r\n        function log2(v) {\r\n            var r, shift;\r\n            r = +(v > 0xFFFF) << 4;\r\n            v >>>= r;\r\n            shift = +(v > 0xFF) << 3;\r\n            v >>>= shift;\r\n            r |= shift;\r\n            shift = +(v > 0xF) << 2;\r\n            v >>>= shift;\r\n            r |= shift;\r\n            shift = +(v > 0x3) << 1;\r\n            v >>>= shift;\r\n            r |= shift;\r\n            return r | (v >> 1);\r\n        }\r\n        utils.log2 = log2;\r\n        function getIntersectionFactor(p1, p2, p3, p4, out) {\r\n            var A1 = p2.x - p1.x, B1 = p3.x - p4.x, C1 = p3.x - p1.x;\r\n            var A2 = p2.y - p1.y, B2 = p3.y - p4.y, C2 = p3.y - p1.y;\r\n            var D = A1 * B2 - A2 * B1;\r\n            if (Math.abs(D) < 1e-7) {\r\n                out.x = A1;\r\n                out.y = A2;\r\n                return 0;\r\n            }\r\n            var T = C1 * B2 - C2 * B1;\r\n            var U = A1 * C2 - A2 * C1;\r\n            var t = T / D, u = U / D;\r\n            if (u < (1e-6) || u - 1 > -1e-6) {\r\n                return -1;\r\n            }\r\n            out.x = p1.x + t * (p2.x - p1.x);\r\n            out.y = p1.y + t * (p2.y - p1.y);\r\n            return 1;\r\n        }\r\n        utils.getIntersectionFactor = getIntersectionFactor;\r\n        function getPositionFromQuad(p, anchor, out) {\r\n            out = out || new PIXI.Point();\r\n            var a1 = 1.0 - anchor.x, a2 = 1.0 - a1;\r\n            var b1 = 1.0 - anchor.y, b2 = 1.0 - b1;\r\n            out.x = (p[0].x * a1 + p[1].x * a2) * b1 + (p[3].x * a1 + p[2].x * a2) * b2;\r\n            out.y = (p[0].y * a1 + p[1].y * a2) * b1 + (p[3].y * a1 + p[2].y * a2) * b2;\r\n            return out;\r\n        }\r\n        utils.getPositionFromQuad = getPositionFromQuad;\r\n    })(utils = pixi_projection.utils || (pixi_projection.utils = {}));\r\n})(pixi_projection || (pixi_projection = {}));\r\nPIXI.projection = pixi_projection;\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Projection = (function () {\r\n        function Projection(legacy, enable) {\r\n            if (enable === void 0) { enable = true; }\r\n            this._enabled = false;\r\n            this.legacy = legacy;\r\n            if (enable) {\r\n                this.enabled = true;\r\n            }\r\n            this.legacy.proj = this;\r\n        }\r\n        Object.defineProperty(Projection.prototype, \"enabled\", {\r\n            get: function () {\r\n                return this._enabled;\r\n            },\r\n            set: function (value) {\r\n                this._enabled = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Projection.prototype.clear = function () {\r\n        };\r\n        return Projection;\r\n    }());\r\n    pixi_projection.Projection = Projection;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var webgl;\r\n    (function (webgl) {\r\n        var BatchBuffer = (function () {\r\n            function BatchBuffer(size) {\r\n                this.vertices = new ArrayBuffer(size);\r\n                this.float32View = new Float32Array(this.vertices);\r\n                this.uint32View = new Uint32Array(this.vertices);\r\n            }\r\n            BatchBuffer.prototype.destroy = function () {\r\n                this.vertices = null;\r\n            };\r\n            return BatchBuffer;\r\n        }());\r\n        webgl.BatchBuffer = BatchBuffer;\r\n    })(webgl = pixi_projection.webgl || (pixi_projection.webgl = {}));\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var webgl;\r\n    (function (webgl) {\r\n        function generateMultiTextureShader(vertexSrc, fragmentSrc, gl, maxTextures) {\r\n            fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures + '');\r\n            fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\r\n            var shader = new PIXI.Shader(gl, vertexSrc, fragmentSrc);\r\n            var sampleValues = new Int32Array(maxTextures);\r\n            for (var i = 0; i < maxTextures; i++) {\r\n                sampleValues[i] = i;\r\n            }\r\n            shader.bind();\r\n            shader.uniforms.uSamplers = sampleValues;\r\n            return shader;\r\n        }\r\n        webgl.generateMultiTextureShader = generateMultiTextureShader;\r\n        function generateSampleSrc(maxTextures) {\r\n            var src = '';\r\n            src += '\\n';\r\n            src += '\\n';\r\n            for (var i = 0; i < maxTextures; i++) {\r\n                if (i > 0) {\r\n                    src += '\\nelse ';\r\n                }\r\n                if (i < maxTextures - 1) {\r\n                    src += \"if(textureId == \" + i + \".0)\";\r\n                }\r\n                src += '\\n{';\r\n                src += \"\\n\\tcolor = texture2D(uSamplers[\" + i + \"], textureCoord);\";\r\n                src += '\\n}';\r\n            }\r\n            src += '\\n';\r\n            src += '\\n';\r\n            return src;\r\n        }\r\n    })(webgl = pixi_projection.webgl || (pixi_projection.webgl = {}));\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var webgl;\r\n    (function (webgl) {\r\n        var ObjectRenderer = PIXI.ObjectRenderer;\r\n        var settings = PIXI.settings;\r\n        var GLBuffer = PIXI.glCore.GLBuffer;\r\n        var premultiplyTint = PIXI.utils.premultiplyTint;\r\n        var premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\r\n        var TICK = 0;\r\n        var BatchGroup = (function () {\r\n            function BatchGroup() {\r\n                this.textures = [];\r\n                this.textureCount = 0;\r\n                this.ids = [];\r\n                this.size = 0;\r\n                this.start = 0;\r\n                this.blend = PIXI.BLEND_MODES.NORMAL;\r\n                this.uniforms = null;\r\n            }\r\n            return BatchGroup;\r\n        }());\r\n        webgl.BatchGroup = BatchGroup;\r\n        var MultiTextureSpriteRenderer = (function (_super) {\r\n            __extends(MultiTextureSpriteRenderer, _super);\r\n            function MultiTextureSpriteRenderer(renderer) {\r\n                var _this = _super.call(this, renderer) || this;\r\n                _this.shaderVert = '';\r\n                _this.shaderFrag = '';\r\n                _this.MAX_TEXTURES_LOCAL = 32;\r\n                _this.vertSize = 5;\r\n                _this.vertByteSize = _this.vertSize * 4;\r\n                _this.size = settings.SPRITE_BATCH_SIZE;\r\n                _this.currentIndex = 0;\r\n                _this.sprites = [];\r\n                _this.vertexBuffers = [];\r\n                _this.vaos = [];\r\n                _this.vaoMax = 2;\r\n                _this.vertexCount = 0;\r\n                _this.MAX_TEXTURES = 1;\r\n                _this.indices = pixi_projection.utils.createIndicesForQuads(_this.size);\r\n                _this.groups = [];\r\n                for (var k = 0; k < _this.size; k++) {\r\n                    _this.groups[k] = new BatchGroup();\r\n                }\r\n                _this.vaoMax = 2;\r\n                _this.vertexCount = 0;\r\n                _this.renderer.on('prerender', _this.onPrerender, _this);\r\n                return _this;\r\n            }\r\n            MultiTextureSpriteRenderer.prototype.getUniforms = function (spr) {\r\n                return null;\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.syncUniforms = function (obj) {\r\n                if (!obj)\r\n                    return;\r\n                var sh = this.shader;\r\n                for (var key in obj) {\r\n                    sh.uniforms[key] = obj[key];\r\n                }\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.onContextChange = function () {\r\n                var gl = this.renderer.gl;\r\n                this.MAX_TEXTURES = Math.min(this.MAX_TEXTURES_LOCAL, this.renderer.plugins['sprite'].MAX_TEXTURES);\r\n                this.shader = webgl.generateMultiTextureShader(this.shaderVert, this.shaderFrag, gl, this.MAX_TEXTURES);\r\n                this.indexBuffer = GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\r\n                this.renderer.bindVao(null);\r\n                var attrs = this.shader.attributes;\r\n                for (var i = 0; i < this.vaoMax; i++) {\r\n                    var vertexBuffer = this.vertexBuffers[i] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n                    this.vaos[i] = this.createVao(vertexBuffer);\r\n                }\r\n                if (!this.buffers) {\r\n                    this.buffers = [];\r\n                    for (var i = 1; i <= pixi_projection.utils.nextPow2(this.size); i *= 2) {\r\n                        this.buffers.push(new webgl.BatchBuffer(i * 4 * this.vertByteSize));\r\n                    }\r\n                }\r\n                this.vao = this.vaos[0];\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.onPrerender = function () {\r\n                this.vertexCount = 0;\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.render = function (sprite) {\r\n                if (this.currentIndex >= this.size) {\r\n                    this.flush();\r\n                }\r\n                if (!sprite._texture._uvs) {\r\n                    return;\r\n                }\r\n                if (!sprite._texture.baseTexture) {\r\n                    return;\r\n                }\r\n                this.sprites[this.currentIndex++] = sprite;\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.flush = function () {\r\n                if (this.currentIndex === 0) {\r\n                    return;\r\n                }\r\n                var gl = this.renderer.gl;\r\n                var MAX_TEXTURES = this.MAX_TEXTURES;\r\n                var np2 = pixi_projection.utils.nextPow2(this.currentIndex);\r\n                var log2 = pixi_projection.utils.log2(np2);\r\n                var buffer = this.buffers[log2];\r\n                var sprites = this.sprites;\r\n                var groups = this.groups;\r\n                var float32View = buffer.float32View;\r\n                var uint32View = buffer.uint32View;\r\n                var index = 0;\r\n                var nextTexture;\r\n                var currentTexture;\r\n                var currentUniforms = null;\r\n                var groupCount = 1;\r\n                var textureCount = 0;\r\n                var currentGroup = groups[0];\r\n                var vertexData;\r\n                var uvs;\r\n                var blendMode = premultiplyBlendMode[sprites[0]._texture.baseTexture.premultipliedAlpha ? 1 : 0][sprites[0].blendMode];\r\n                currentGroup.textureCount = 0;\r\n                currentGroup.start = 0;\r\n                currentGroup.blend = blendMode;\r\n                TICK++;\r\n                var i;\r\n                for (i = 0; i < this.currentIndex; ++i) {\r\n                    var sprite = sprites[i];\r\n                    nextTexture = sprite._texture.baseTexture;\r\n                    var spriteBlendMode = premultiplyBlendMode[Number(nextTexture.premultipliedAlpha)][sprite.blendMode];\r\n                    if (blendMode !== spriteBlendMode) {\r\n                        blendMode = spriteBlendMode;\r\n                        currentTexture = null;\r\n                        textureCount = MAX_TEXTURES;\r\n                        TICK++;\r\n                    }\r\n                    var uniforms = this.getUniforms(sprite);\r\n                    if (currentUniforms !== uniforms) {\r\n                        currentUniforms = uniforms;\r\n                        currentTexture = null;\r\n                        textureCount = MAX_TEXTURES;\r\n                        TICK++;\r\n                    }\r\n                    if (currentTexture !== nextTexture) {\r\n                        currentTexture = nextTexture;\r\n                        if (nextTexture._enabled !== TICK) {\r\n                            if (textureCount === MAX_TEXTURES) {\r\n                                TICK++;\r\n                                textureCount = 0;\r\n                                currentGroup.size = i - currentGroup.start;\r\n                                currentGroup = groups[groupCount++];\r\n                                currentGroup.textureCount = 0;\r\n                                currentGroup.blend = blendMode;\r\n                                currentGroup.start = i;\r\n                                currentGroup.uniforms = currentUniforms;\r\n                            }\r\n                            nextTexture._enabled = TICK;\r\n                            nextTexture._virtalBoundId = textureCount;\r\n                            currentGroup.textures[currentGroup.textureCount++] = nextTexture;\r\n                            textureCount++;\r\n                        }\r\n                    }\r\n                    var alpha = Math.min(sprite.worldAlpha, 1.0);\r\n                    var argb = alpha < 1.0 && nextTexture.premultipliedAlpha ? premultiplyTint(sprite._tintRGB, alpha)\r\n                        : sprite._tintRGB + (alpha * 255 << 24);\r\n                    this.fillVertices(float32View, uint32View, index, sprite, argb, nextTexture._virtalBoundId);\r\n                    index += this.vertSize * 4;\r\n                }\r\n                currentGroup.size = i - currentGroup.start;\r\n                if (!settings.CAN_UPLOAD_SAME_BUFFER) {\r\n                    if (this.vaoMax <= this.vertexCount) {\r\n                        this.vaoMax++;\r\n                        var attrs = this.shader.attributes;\r\n                        var vertexBuffer = this.vertexBuffers[this.vertexCount] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n                        this.vaos[this.vertexCount] = this.createVao(vertexBuffer);\r\n                    }\r\n                    this.renderer.bindVao(this.vaos[this.vertexCount]);\r\n                    this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\r\n                    this.vertexCount++;\r\n                }\r\n                else {\r\n                    this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\r\n                }\r\n                currentUniforms = null;\r\n                for (i = 0; i < groupCount; i++) {\r\n                    var group = groups[i];\r\n                    var groupTextureCount = group.textureCount;\r\n                    if (group.uniforms !== currentUniforms) {\r\n                        this.syncUniforms(group.uniforms);\r\n                    }\r\n                    for (var j = 0; j < groupTextureCount; j++) {\r\n                        this.renderer.bindTexture(group.textures[j], j, true);\r\n                        group.textures[j]._virtalBoundId = -1;\r\n                        var v = this.shader.uniforms.samplerSize;\r\n                        if (v) {\r\n                            v[0] = group.textures[j].realWidth;\r\n                            v[1] = group.textures[j].realHeight;\r\n                            this.shader.uniforms.samplerSize = v;\r\n                        }\r\n                    }\r\n                    this.renderer.state.setBlendMode(group.blend);\r\n                    gl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\r\n                }\r\n                this.currentIndex = 0;\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.start = function () {\r\n                this.renderer.bindShader(this.shader);\r\n                if (settings.CAN_UPLOAD_SAME_BUFFER) {\r\n                    this.renderer.bindVao(this.vaos[this.vertexCount]);\r\n                    this.vertexBuffers[this.vertexCount].bind();\r\n                }\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.stop = function () {\r\n                this.flush();\r\n            };\r\n            MultiTextureSpriteRenderer.prototype.destroy = function () {\r\n                for (var i = 0; i < this.vaoMax; i++) {\r\n                    if (this.vertexBuffers[i]) {\r\n                        this.vertexBuffers[i].destroy();\r\n                    }\r\n                    if (this.vaos[i]) {\r\n                        this.vaos[i].destroy();\r\n                    }\r\n                }\r\n                if (this.indexBuffer) {\r\n                    this.indexBuffer.destroy();\r\n                }\r\n                this.renderer.off('prerender', this.onPrerender, this);\r\n                _super.prototype.destroy.call(this);\r\n                if (this.shader) {\r\n                    this.shader.destroy();\r\n                    this.shader = null;\r\n                }\r\n                this.vertexBuffers = null;\r\n                this.vaos = null;\r\n                this.indexBuffer = null;\r\n                this.indices = null;\r\n                this.sprites = null;\r\n                for (var i = 0; i < this.buffers.length; ++i) {\r\n                    this.buffers[i].destroy();\r\n                }\r\n            };\r\n            return MultiTextureSpriteRenderer;\r\n        }(ObjectRenderer));\r\n        webgl.MultiTextureSpriteRenderer = MultiTextureSpriteRenderer;\r\n    })(webgl = pixi_projection.webgl || (pixi_projection.webgl = {}));\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var p = [new PIXI.Point(), new PIXI.Point(), new PIXI.Point(), new PIXI.Point()];\r\n    var a = [0, 0, 0, 0];\r\n    var Surface = (function () {\r\n        function Surface() {\r\n            this.surfaceID = \"default\";\r\n            this._updateID = 0;\r\n            this.vertexSrc = \"\";\r\n            this.fragmentSrc = \"\";\r\n        }\r\n        Surface.prototype.fillUniforms = function (uniforms) {\r\n        };\r\n        Surface.prototype.clear = function () {\r\n        };\r\n        Surface.prototype.boundsQuad = function (v, out, after) {\r\n            var minX = out[0], minY = out[1];\r\n            var maxX = out[0], maxY = out[1];\r\n            for (var i = 2; i < 8; i += 2) {\r\n                if (minX > out[i])\r\n                    minX = out[i];\r\n                if (maxX < out[i])\r\n                    maxX = out[i];\r\n                if (minY > out[i + 1])\r\n                    minY = out[i + 1];\r\n                if (maxY < out[i + 1])\r\n                    maxY = out[i + 1];\r\n            }\r\n            p[0].set(minX, minY);\r\n            this.apply(p[0], p[0]);\r\n            p[1].set(maxX, minY);\r\n            this.apply(p[1], p[1]);\r\n            p[2].set(maxX, maxY);\r\n            this.apply(p[2], p[2]);\r\n            p[3].set(minX, maxY);\r\n            this.apply(p[3], p[3]);\r\n            if (after) {\r\n                after.apply(p[0], p[0]);\r\n                after.apply(p[1], p[1]);\r\n                after.apply(p[2], p[2]);\r\n                after.apply(p[3], p[3]);\r\n                out[0] = p[0].x;\r\n                out[1] = p[0].y;\r\n                out[2] = p[1].x;\r\n                out[3] = p[1].y;\r\n                out[4] = p[2].x;\r\n                out[5] = p[2].y;\r\n                out[6] = p[3].x;\r\n                out[7] = p[3].y;\r\n            }\r\n            else {\r\n                for (var i = 1; i <= 3; i++) {\r\n                    if (p[i].y < p[0].y || p[i].y == p[0].y && p[i].x < p[0].x) {\r\n                        var t = p[0];\r\n                        p[0] = p[i];\r\n                        p[i] = t;\r\n                    }\r\n                }\r\n                for (var i = 1; i <= 3; i++) {\r\n                    a[i] = Math.atan2(p[i].y - p[0].y, p[i].x - p[0].x);\r\n                }\r\n                for (var i = 1; i <= 3; i++) {\r\n                    for (var j = i + 1; j <= 3; j++) {\r\n                        if (a[i] > a[j]) {\r\n                            var t = p[i];\r\n                            p[i] = p[j];\r\n                            p[j] = t;\r\n                            var t2 = a[i];\r\n                            a[i] = a[j];\r\n                            a[j] = t2;\r\n                        }\r\n                    }\r\n                }\r\n                out[0] = p[0].x;\r\n                out[1] = p[0].y;\r\n                out[2] = p[1].x;\r\n                out[3] = p[1].y;\r\n                out[4] = p[2].x;\r\n                out[5] = p[2].y;\r\n                out[6] = p[3].x;\r\n                out[7] = p[3].y;\r\n                if ((p[3].x - p[2].x) * (p[1].y - p[2].y) - (p[1].x - p[2].x) * (p[3].y - p[2].y) < 0) {\r\n                    out[4] = p[3].x;\r\n                    out[5] = p[3].y;\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n        return Surface;\r\n    }());\r\n    pixi_projection.Surface = Surface;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var tempMat = new PIXI.Matrix();\r\n    var tempRect = new PIXI.Rectangle();\r\n    var tempPoint = new PIXI.Point();\r\n    var BilinearSurface = (function (_super) {\r\n        __extends(BilinearSurface, _super);\r\n        function BilinearSurface() {\r\n            var _this = _super.call(this) || this;\r\n            _this.distortion = new PIXI.Point();\r\n            return _this;\r\n        }\r\n        BilinearSurface.prototype.clear = function () {\r\n            this.distortion.set(0, 0);\r\n        };\r\n        BilinearSurface.prototype.apply = function (pos, newPos) {\r\n            newPos = newPos || new PIXI.Point();\r\n            var d = this.distortion;\r\n            var m = pos.x * pos.y;\r\n            newPos.x = pos.x + d.x * m;\r\n            newPos.y = pos.y + d.y * m;\r\n            return newPos;\r\n        };\r\n        BilinearSurface.prototype.applyInverse = function (pos, newPos) {\r\n            newPos = newPos || new PIXI.Point();\r\n            var vx = pos.x, vy = pos.y;\r\n            var dx = this.distortion.x, dy = this.distortion.y;\r\n            if (dx == 0.0) {\r\n                newPos.x = vx;\r\n                newPos.y = vy / (1.0 + dy * vx);\r\n            }\r\n            else if (dy == 0.0) {\r\n                newPos.y = vy;\r\n                newPos.x = vx / (1.0 + dx * vy);\r\n            }\r\n            else {\r\n                var b = (vy * dx - vx * dy + 1.0) * 0.5 / dy;\r\n                var d = b * b + vx / dy;\r\n                if (d <= 0.00001) {\r\n                    newPos.set(NaN, NaN);\r\n                    return;\r\n                }\r\n                if (dy > 0.0) {\r\n                    newPos.x = -b + Math.sqrt(d);\r\n                }\r\n                else {\r\n                    newPos.x = -b - Math.sqrt(d);\r\n                }\r\n                newPos.y = (vx / newPos.x - 1.0) / dx;\r\n            }\r\n            return newPos;\r\n        };\r\n        BilinearSurface.prototype.mapSprite = function (sprite, quad, outTransform) {\r\n            var tex = sprite.texture;\r\n            tempRect.x = -sprite.anchor.x * tex.orig.width;\r\n            tempRect.y = -sprite.anchor.y * tex.orig.height;\r\n            tempRect.width = tex.orig.width;\r\n            tempRect.height = tex.orig.height;\r\n            return this.mapQuad(tempRect, quad, outTransform || sprite.transform);\r\n        };\r\n        BilinearSurface.prototype.mapQuad = function (rect, quad, outTransform) {\r\n            var ax = -rect.x / rect.width;\r\n            var ay = -rect.y / rect.height;\r\n            var ax2 = (1.0 - rect.x) / rect.width;\r\n            var ay2 = (1.0 - rect.y) / rect.height;\r\n            var up1x = (quad[0].x * (1.0 - ax) + quad[1].x * ax);\r\n            var up1y = (quad[0].y * (1.0 - ax) + quad[1].y * ax);\r\n            var up2x = (quad[0].x * (1.0 - ax2) + quad[1].x * ax2);\r\n            var up2y = (quad[0].y * (1.0 - ax2) + quad[1].y * ax2);\r\n            var down1x = (quad[3].x * (1.0 - ax) + quad[2].x * ax);\r\n            var down1y = (quad[3].y * (1.0 - ax) + quad[2].y * ax);\r\n            var down2x = (quad[3].x * (1.0 - ax2) + quad[2].x * ax2);\r\n            var down2y = (quad[3].y * (1.0 - ax2) + quad[2].y * ax2);\r\n            var x00 = up1x * (1.0 - ay) + down1x * ay;\r\n            var y00 = up1y * (1.0 - ay) + down1y * ay;\r\n            var x10 = up2x * (1.0 - ay) + down2x * ay;\r\n            var y10 = up2y * (1.0 - ay) + down2y * ay;\r\n            var x01 = up1x * (1.0 - ay2) + down1x * ay2;\r\n            var y01 = up1y * (1.0 - ay2) + down1y * ay2;\r\n            var x11 = up2x * (1.0 - ay2) + down2x * ay2;\r\n            var y11 = up2y * (1.0 - ay2) + down2y * ay2;\r\n            var mat = tempMat;\r\n            mat.tx = x00;\r\n            mat.ty = y00;\r\n            mat.a = x10 - x00;\r\n            mat.b = y10 - y00;\r\n            mat.c = x01 - x00;\r\n            mat.d = y01 - y00;\r\n            tempPoint.set(x11, y11);\r\n            mat.applyInverse(tempPoint, tempPoint);\r\n            this.distortion.set(tempPoint.x - 1, tempPoint.y - 1);\r\n            outTransform.setFromMatrix(mat);\r\n            return this;\r\n        };\r\n        BilinearSurface.prototype.fillUniforms = function (uniforms) {\r\n            uniforms.distortion = uniforms.distortion || new Float32Array([0, 0, 0, 0]);\r\n            var ax = Math.abs(this.distortion.x);\r\n            var ay = Math.abs(this.distortion.y);\r\n            uniforms.distortion[0] = ax * 10000 <= ay ? 0 : this.distortion.x;\r\n            uniforms.distortion[1] = ay * 10000 <= ax ? 0 : this.distortion.y;\r\n            uniforms.distortion[2] = 1.0 / uniforms.distortion[0];\r\n            uniforms.distortion[3] = 1.0 / uniforms.distortion[1];\r\n        };\r\n        return BilinearSurface;\r\n    }(pixi_projection.Surface));\r\n    pixi_projection.BilinearSurface = BilinearSurface;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Container2s = (function (_super) {\r\n        __extends(Container2s, _super);\r\n        function Container2s() {\r\n            var _this = _super.call(this) || this;\r\n            _this.proj = new pixi_projection.ProjectionSurface(_this.transform);\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Container2s.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Container2s;\r\n    }(PIXI.Container));\r\n    pixi_projection.Container2s = Container2s;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var fun = PIXI.TransformStatic.prototype.updateTransform;\r\n    function transformHack(parentTransform) {\r\n        var proj = this.proj;\r\n        var pp = parentTransform.proj;\r\n        var ta = this;\r\n        if (!pp) {\r\n            fun.call(this, parentTransform);\r\n            proj._activeProjection = null;\r\n            return;\r\n        }\r\n        if (pp._surface) {\r\n            proj._activeProjection = pp;\r\n            this.updateLocalTransform();\r\n            this.localTransform.copy(this.worldTransform);\r\n            if (ta._parentID < 0) {\r\n                ++ta._worldID;\r\n            }\r\n            return;\r\n        }\r\n        fun.call(this, parentTransform);\r\n        proj._activeProjection = pp._activeProjection;\r\n    }\r\n    var ProjectionSurface = (function (_super) {\r\n        __extends(ProjectionSurface, _super);\r\n        function ProjectionSurface(legacy, enable) {\r\n            var _this = _super.call(this, legacy, enable) || this;\r\n            _this._surface = null;\r\n            _this._activeProjection = null;\r\n            _this._currentSurfaceID = -1;\r\n            _this._currentLegacyID = -1;\r\n            _this._lastUniforms = null;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(ProjectionSurface.prototype, \"enabled\", {\r\n            set: function (value) {\r\n                if (value === this._enabled) {\r\n                    return;\r\n                }\r\n                this._enabled = value;\r\n                if (value) {\r\n                    this.legacy.updateTransform = transformHack;\r\n                    this.legacy._parentID = -1;\r\n                }\r\n                else {\r\n                    this.legacy.updateTransform = PIXI.TransformStatic.prototype.updateTransform;\r\n                    this.legacy._parentID = -1;\r\n                }\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(ProjectionSurface.prototype, \"surface\", {\r\n            get: function () {\r\n                return this._surface;\r\n            },\r\n            set: function (value) {\r\n                if (this._surface == value) {\r\n                    return;\r\n                }\r\n                this._surface = value || null;\r\n                this.legacy._parentID = -1;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ProjectionSurface.prototype.applyPartial = function (pos, newPos) {\r\n            if (this._activeProjection !== null) {\r\n                newPos = this.legacy.worldTransform.apply(pos, newPos);\r\n                return this._activeProjection.surface.apply(newPos, newPos);\r\n            }\r\n            if (this._surface !== null) {\r\n                return this.surface.apply(pos, newPos);\r\n            }\r\n            return this.legacy.worldTransform.apply(pos, newPos);\r\n        };\r\n        ProjectionSurface.prototype.apply = function (pos, newPos) {\r\n            if (this._activeProjection !== null) {\r\n                newPos = this.legacy.worldTransform.apply(pos, newPos);\r\n                this._activeProjection.surface.apply(newPos, newPos);\r\n                return this._activeProjection.legacy.worldTransform.apply(newPos, newPos);\r\n            }\r\n            if (this._surface !== null) {\r\n                newPos = this.surface.apply(pos, newPos);\r\n                return this.legacy.worldTransform.apply(newPos, newPos);\r\n            }\r\n            return this.legacy.worldTransform.apply(pos, newPos);\r\n        };\r\n        ProjectionSurface.prototype.applyInverse = function (pos, newPos) {\r\n            if (this._activeProjection !== null) {\r\n                newPos = this._activeProjection.legacy.worldTransform.applyInverse(pos, newPos);\r\n                this._activeProjection._surface.applyInverse(newPos, newPos);\r\n                return this.legacy.worldTransform.applyInverse(newPos, newPos);\r\n            }\r\n            if (this._surface !== null) {\r\n                newPos = this.legacy.worldTransform.applyInverse(pos, newPos);\r\n                return this._surface.applyInverse(newPos, newPos);\r\n            }\r\n            return this.legacy.worldTransform.applyInverse(pos, newPos);\r\n        };\r\n        ProjectionSurface.prototype.mapBilinearSprite = function (sprite, quad) {\r\n            if (!(this._surface instanceof pixi_projection.BilinearSurface)) {\r\n                this.surface = new pixi_projection.BilinearSurface();\r\n            }\r\n            this.surface.mapSprite(sprite, quad, this.legacy);\r\n        };\r\n        ProjectionSurface.prototype.clear = function () {\r\n            if (this.surface) {\r\n                this.surface.clear();\r\n            }\r\n        };\r\n        Object.defineProperty(ProjectionSurface.prototype, \"uniforms\", {\r\n            get: function () {\r\n                if (this._currentLegacyID === this.legacy._worldID &&\r\n                    this._currentSurfaceID === this.surface._updateID) {\r\n                    return this._lastUniforms;\r\n                }\r\n                this._lastUniforms = this._lastUniforms || {};\r\n                this._lastUniforms.worldTransform = this.legacy.worldTransform.toArray(true);\r\n                this._surface.fillUniforms(this._lastUniforms);\r\n                return this._lastUniforms;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return ProjectionSurface;\r\n    }(pixi_projection.Projection));\r\n    pixi_projection.ProjectionSurface = ProjectionSurface;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var MultiTextureSpriteRenderer = pixi_projection.webgl.MultiTextureSpriteRenderer;\r\n    var SpriteBilinearRenderer = (function (_super) {\r\n        __extends(SpriteBilinearRenderer, _super);\r\n        function SpriteBilinearRenderer() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.size = 100;\r\n            _this.MAX_TEXTURES_LOCAL = 1;\r\n            _this.shaderVert = \"precision highp float;\\nattribute vec2 aVertexPosition;\\nattribute vec3 aTrans1;\\nattribute vec3 aTrans2;\\nattribute vec4 aFrame;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 worldTransform;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec3 vTrans1;\\nvarying vec3 vTrans2;\\nvarying vec4 vFrame;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n    gl_Position.xyw = projectionMatrix * worldTransform * vec3(aVertexPosition, 1.0);\\n    gl_Position.z = 0.0;\\n    \\n    vTextureCoord = aVertexPosition;\\n    vTrans1 = aTrans1;\\n    vTrans2 = aTrans2;\\n    vTextureId = aTextureId;\\n    vColor = aColor;\\n    vFrame = aFrame;\\n}\\n\";\r\n            _this.shaderFrag = \"precision highp float;\\nvarying vec2 vTextureCoord;\\nvarying vec3 vTrans1;\\nvarying vec3 vTrans2;\\nvarying vec4 vFrame;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 samplerSize[%count%]; \\nuniform vec4 distortion;\\n\\nvoid main(void){\\nvec2 surface;\\nvec2 surface2;\\n\\nfloat vx = vTextureCoord.x;\\nfloat vy = vTextureCoord.y;\\nfloat dx = distortion.x;\\nfloat dy = distortion.y;\\nfloat revx = distortion.z;\\nfloat revy = distortion.w;\\n\\nif (distortion.x == 0.0) {\\n    surface.x = vx;\\n    surface.y = vy / (1.0 + dy * vx);\\n    surface2 = surface;\\n} else\\nif (distortion.y == 0.0) {\\n    surface.y = vy;\\n    surface.x = vx/ (1.0 + dx * vy);\\n    surface2 = surface;\\n} else {\\n    float c = vy * dx - vx * dy;\\n    float b = (c + 1.0) * 0.5;\\n    float b2 = (-c + 1.0) * 0.5;\\n    float d = b * b + vx * dy;\\n    if (d < -0.00001) {\\n        discard;\\n    }\\n    d = sqrt(max(d, 0.0));\\n    surface.x = (- b + d) * revy;\\n    surface2.x = (- b - d) * revy;\\n    surface.y = (- b2 + d) * revx;\\n    surface2.y = (- b2 - d) * revx;\\n}\\n\\nvec2 uv;\\nuv.x = vTrans1.x * surface.x + vTrans1.y * surface.y + vTrans1.z;\\nuv.y = vTrans2.x * surface.x + vTrans2.y * surface.y + vTrans2.z;\\n\\nvec2 pixels = uv * samplerSize[0];\\n\\nif (pixels.x < vFrame.x || pixels.x > vFrame.z ||\\n    pixels.y < vFrame.y || pixels.y > vFrame.w) {\\n    uv.x = vTrans1.x * surface2.x + vTrans1.y * surface2.y + vTrans1.z;\\n    uv.y = vTrans2.x * surface2.x + vTrans2.y * surface2.y + vTrans2.z;\\n    pixels = uv * samplerSize[0];\\n    \\n    if (pixels.x < vFrame.x || pixels.x > vFrame.z ||\\n        pixels.y < vFrame.y || pixels.y > vFrame.w) {\\n        discard;\\n    }\\n}\\n\\nvec4 edge;\\nedge.xy = clamp(pixels - vFrame.xy + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\\nedge.zw = clamp(vFrame.zw - pixels + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\\n\\nfloat alpha = 1.0; //edge.x * edge.y * edge.z * edge.w;\\nvec4 rColor = vColor * alpha;\\n\\nfloat textureId = floor(vTextureId+0.5);\\nvec4 color;\\nvec2 textureCoord = uv;\\n%forloop%\\ngl_FragColor = color * rColor;\\n}\";\r\n            _this.defUniforms = {\r\n                worldTransform: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),\r\n                distortion: new Float32Array([0, 0])\r\n            };\r\n            return _this;\r\n        }\r\n        SpriteBilinearRenderer.prototype.getUniforms = function (sprite) {\r\n            var proj = sprite.proj;\r\n            var shader = this.shader;\r\n            if (proj.surface !== null) {\r\n                return proj.uniforms;\r\n            }\r\n            if (proj._activeProjection !== null) {\r\n                return proj._activeProjection.uniforms;\r\n            }\r\n            return this.defUniforms;\r\n        };\r\n        SpriteBilinearRenderer.prototype.createVao = function (vertexBuffer) {\r\n            var attrs = this.shader.attributes;\r\n            this.vertSize = 14;\r\n            this.vertByteSize = this.vertSize * 4;\r\n            var gl = this.renderer.gl;\r\n            var vao = this.renderer.createVao()\r\n                .addIndex(this.indexBuffer)\r\n                .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n                .addAttribute(vertexBuffer, attrs.aTrans1, gl.FLOAT, false, this.vertByteSize, 2 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aTrans2, gl.FLOAT, false, this.vertByteSize, 5 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aFrame, gl.FLOAT, false, this.vertByteSize, 8 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 12 * 4);\r\n            if (attrs.aTextureId) {\r\n                vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 13 * 4);\r\n            }\r\n            return vao;\r\n        };\r\n        SpriteBilinearRenderer.prototype.fillVertices = function (float32View, uint32View, index, sprite, argb, textureId) {\r\n            var vertexData = sprite.vertexData;\r\n            var tex = sprite._texture;\r\n            var w = tex.orig.width;\r\n            var h = tex.orig.height;\r\n            var ax = sprite._anchor._x;\r\n            var ay = sprite._anchor._y;\r\n            var frame = tex._frame;\r\n            var aTrans = sprite.aTrans;\r\n            for (var i = 0; i < 4; i++) {\r\n                float32View[index] = vertexData[i * 2];\r\n                float32View[index + 1] = vertexData[i * 2 + 1];\r\n                float32View[index + 2] = aTrans.a;\r\n                float32View[index + 3] = aTrans.c;\r\n                float32View[index + 4] = aTrans.tx;\r\n                float32View[index + 5] = aTrans.b;\r\n                float32View[index + 6] = aTrans.d;\r\n                float32View[index + 7] = aTrans.ty;\r\n                float32View[index + 8] = frame.x;\r\n                float32View[index + 9] = frame.y;\r\n                float32View[index + 10] = frame.x + frame.width;\r\n                float32View[index + 11] = frame.y + frame.height;\r\n                uint32View[index + 12] = argb;\r\n                float32View[index + 13] = textureId;\r\n                index += 14;\r\n            }\r\n        };\r\n        return SpriteBilinearRenderer;\r\n    }(MultiTextureSpriteRenderer));\r\n    PIXI.WebGLRenderer.registerPlugin('sprite_bilinear', SpriteBilinearRenderer);\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var MultiTextureSpriteRenderer = pixi_projection.webgl.MultiTextureSpriteRenderer;\r\n    var SpriteStrangeRenderer = (function (_super) {\r\n        __extends(SpriteStrangeRenderer, _super);\r\n        function SpriteStrangeRenderer() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.size = 100;\r\n            _this.MAX_TEXTURES_LOCAL = 1;\r\n            _this.shaderVert = \"precision highp float;\\nattribute vec2 aVertexPosition;\\nattribute vec3 aTrans1;\\nattribute vec3 aTrans2;\\nattribute vec4 aFrame;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 worldTransform;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec3 vTrans1;\\nvarying vec3 vTrans2;\\nvarying vec4 vFrame;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n    gl_Position.xyw = projectionMatrix * worldTransform * vec3(aVertexPosition, 1.0);\\n    gl_Position.z = 0.0;\\n    \\n    vTextureCoord = aVertexPosition;\\n    vTrans1 = aTrans1;\\n    vTrans2 = aTrans2;\\n    vTextureId = aTextureId;\\n    vColor = aColor;\\n    vFrame = aFrame;\\n}\\n\";\r\n            _this.shaderFrag = \"precision highp float;\\nvarying vec2 vTextureCoord;\\nvarying vec3 vTrans1;\\nvarying vec3 vTrans2;\\nvarying vec4 vFrame;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 samplerSize[%count%]; \\nuniform vec4 params;\\n\\nvoid main(void){\\nvec2 surface;\\n\\nfloat vx = vTextureCoord.x;\\nfloat vy = vTextureCoord.y;\\nfloat aleph = params.x;\\nfloat bet = params.y;\\nfloat A = params.z;\\nfloat B = params.w;\\n\\nif (aleph == 0.0) {\\n\\tsurface.y = vy / (1.0 + vx * bet);\\n\\tsurface.x = vx;\\n}\\nelse if (bet == 0.0) {\\n\\tsurface.x = vx / (1.0 + vy * aleph);\\n\\tsurface.y = vy;\\n} else {\\n\\tsurface.x = vx * (bet + 1.0) / (bet + 1.0 + vy * aleph);\\n\\tsurface.y = vy * (aleph + 1.0) / (aleph + 1.0 + vx * bet);\\n}\\n\\nvec2 uv;\\nuv.x = vTrans1.x * surface.x + vTrans1.y * surface.y + vTrans1.z;\\nuv.y = vTrans2.x * surface.x + vTrans2.y * surface.y + vTrans2.z;\\n\\nvec2 pixels = uv * samplerSize[0];\\n\\nvec4 edge;\\nedge.xy = clamp(pixels - vFrame.xy + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\\nedge.zw = clamp(vFrame.zw - pixels + 0.5, vec2(0.0, 0.0), vec2(1.0, 1.0));\\n\\nfloat alpha = edge.x * edge.y * edge.z * edge.w;\\nvec4 rColor = vColor * alpha;\\n\\nfloat textureId = floor(vTextureId+0.5);\\nvec4 color;\\nvec2 textureCoord = uv;\\n%forloop%\\ngl_FragColor = color * rColor;\\n}\";\r\n            _this.defUniforms = {\r\n                worldTransform: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),\r\n                distortion: new Float32Array([0, 0])\r\n            };\r\n            return _this;\r\n        }\r\n        SpriteStrangeRenderer.prototype.getUniforms = function (sprite) {\r\n            var proj = sprite.proj;\r\n            var shader = this.shader;\r\n            if (proj.surface !== null) {\r\n                return proj.uniforms;\r\n            }\r\n            if (proj._activeProjection !== null) {\r\n                return proj._activeProjection.uniforms;\r\n            }\r\n            return this.defUniforms;\r\n        };\r\n        SpriteStrangeRenderer.prototype.createVao = function (vertexBuffer) {\r\n            var attrs = this.shader.attributes;\r\n            this.vertSize = 14;\r\n            this.vertByteSize = this.vertSize * 4;\r\n            var gl = this.renderer.gl;\r\n            var vao = this.renderer.createVao()\r\n                .addIndex(this.indexBuffer)\r\n                .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n                .addAttribute(vertexBuffer, attrs.aTrans1, gl.FLOAT, false, this.vertByteSize, 2 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aTrans2, gl.FLOAT, false, this.vertByteSize, 5 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aFrame, gl.FLOAT, false, this.vertByteSize, 8 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 12 * 4);\r\n            if (attrs.aTextureId) {\r\n                vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 13 * 4);\r\n            }\r\n            return vao;\r\n        };\r\n        SpriteStrangeRenderer.prototype.fillVertices = function (float32View, uint32View, index, sprite, argb, textureId) {\r\n            var vertexData = sprite.vertexData;\r\n            var tex = sprite._texture;\r\n            var w = tex.orig.width;\r\n            var h = tex.orig.height;\r\n            var ax = sprite._anchor._x;\r\n            var ay = sprite._anchor._y;\r\n            var frame = tex._frame;\r\n            var aTrans = sprite.aTrans;\r\n            for (var i = 0; i < 4; i++) {\r\n                float32View[index] = vertexData[i * 2];\r\n                float32View[index + 1] = vertexData[i * 2 + 1];\r\n                float32View[index + 2] = aTrans.a;\r\n                float32View[index + 3] = aTrans.c;\r\n                float32View[index + 4] = aTrans.tx;\r\n                float32View[index + 5] = aTrans.b;\r\n                float32View[index + 6] = aTrans.d;\r\n                float32View[index + 7] = aTrans.ty;\r\n                float32View[index + 8] = frame.x;\r\n                float32View[index + 9] = frame.y;\r\n                float32View[index + 10] = frame.x + frame.width;\r\n                float32View[index + 11] = frame.y + frame.height;\r\n                uint32View[index + 12] = argb;\r\n                float32View[index + 13] = textureId;\r\n                index += 14;\r\n            }\r\n        };\r\n        return SpriteStrangeRenderer;\r\n    }(MultiTextureSpriteRenderer));\r\n    PIXI.WebGLRenderer.registerPlugin('sprite_strange', SpriteStrangeRenderer);\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var tempMat = new PIXI.Matrix();\r\n    var tempRect = new PIXI.Rectangle();\r\n    var tempPoint = new PIXI.Point();\r\n    var StrangeSurface = (function (_super) {\r\n        __extends(StrangeSurface, _super);\r\n        function StrangeSurface() {\r\n            var _this = _super.call(this) || this;\r\n            _this.params = [0, 0, NaN, NaN];\r\n            return _this;\r\n        }\r\n        StrangeSurface.prototype.clear = function () {\r\n            var p = this.params;\r\n            p[0] = 0;\r\n            p[1] = 0;\r\n            p[2] = NaN;\r\n            p[3] = NaN;\r\n        };\r\n        StrangeSurface.prototype.setAxisX = function (pos, factor, outTransform) {\r\n            var x = pos.x, y = pos.y;\r\n            var d = Math.sqrt(x * x + y * y);\r\n            var rot = outTransform.rotation;\r\n            if (rot !== 0) {\r\n                outTransform.skew._x -= rot;\r\n                outTransform.skew._y += rot;\r\n                outTransform.rotation = 0;\r\n            }\r\n            outTransform.skew.y = Math.atan2(y, x);\r\n            var p = this.params;\r\n            if (factor !== 0) {\r\n                p[2] = -d * factor;\r\n            }\r\n            else {\r\n                p[2] = NaN;\r\n            }\r\n            this._calc01();\r\n        };\r\n        StrangeSurface.prototype.setAxisY = function (pos, factor, outTransform) {\r\n            var x = pos.x, y = pos.y;\r\n            var d = Math.sqrt(x * x + y * y);\r\n            var rot = outTransform.rotation;\r\n            if (rot !== 0) {\r\n                outTransform.skew._x -= rot;\r\n                outTransform.skew._y += rot;\r\n                outTransform.rotation = 0;\r\n            }\r\n            outTransform.skew.x = -Math.atan2(y, x) + Math.PI / 2;\r\n            var p = this.params;\r\n            if (factor !== 0) {\r\n                p[3] = -d * factor;\r\n            }\r\n            else {\r\n                p[3] = NaN;\r\n            }\r\n            this._calc01();\r\n        };\r\n        StrangeSurface.prototype._calc01 = function () {\r\n            var p = this.params;\r\n            if (isNaN(p[2])) {\r\n                p[1] = 0;\r\n                if (isNaN(p[3])) {\r\n                    p[0] = 0;\r\n                }\r\n                else {\r\n                    p[0] = 1.0 / p[3];\r\n                }\r\n            }\r\n            else {\r\n                if (isNaN(p[3])) {\r\n                    p[0] = 0;\r\n                    p[1] = 1.0 / p[2];\r\n                }\r\n                else {\r\n                    var d = 1.0 - p[2] * p[3];\r\n                    p[0] = (1.0 - p[2]) / d;\r\n                    p[1] = (1.0 - p[3]) / d;\r\n                }\r\n            }\r\n        };\r\n        StrangeSurface.prototype.apply = function (pos, newPos) {\r\n            newPos = newPos || new PIXI.Point();\r\n            var aleph = this.params[0], bet = this.params[1], A = this.params[2], B = this.params[3];\r\n            var u = pos.x, v = pos.y;\r\n            if (aleph === 0.0) {\r\n                newPos.y = v * (1 + u * bet);\r\n                newPos.x = u;\r\n            }\r\n            else if (bet === 0.0) {\r\n                newPos.x = u * (1 + v * aleph);\r\n                newPos.y = v;\r\n            }\r\n            else {\r\n                var D = A * B - v * u;\r\n                newPos.x = A * u * (B + v) / D;\r\n                newPos.y = B * v * (A + u) / D;\r\n            }\r\n            return newPos;\r\n        };\r\n        StrangeSurface.prototype.applyInverse = function (pos, newPos) {\r\n            newPos = newPos || new PIXI.Point();\r\n            var aleph = this.params[0], bet = this.params[1], A = this.params[2], B = this.params[3];\r\n            var x = pos.x, y = pos.y;\r\n            if (aleph === 0.0) {\r\n                newPos.y = y / (1 + x * bet);\r\n                newPos.x = x;\r\n            }\r\n            else if (bet === 0.0) {\r\n                newPos.x = x * (1 + y * aleph);\r\n                newPos.y = y;\r\n            }\r\n            else {\r\n                newPos.x = x * (bet + 1) / (bet + 1 + y * aleph);\r\n                newPos.y = y * (aleph + 1) / (aleph + 1 + x * bet);\r\n            }\r\n            return newPos;\r\n        };\r\n        StrangeSurface.prototype.mapSprite = function (sprite, quad, outTransform) {\r\n            var tex = sprite.texture;\r\n            tempRect.x = -sprite.anchor.x * tex.orig.width;\r\n            tempRect.y = -sprite.anchor.y * tex.orig.height;\r\n            tempRect.width = tex.orig.width;\r\n            tempRect.height = tex.orig.height;\r\n            return this.mapQuad(tempRect, quad, outTransform || sprite.transform);\r\n        };\r\n        StrangeSurface.prototype.mapQuad = function (rect, quad, outTransform) {\r\n            var ax = -rect.x / rect.width;\r\n            var ay = -rect.y / rect.height;\r\n            var ax2 = (1.0 - rect.x) / rect.width;\r\n            var ay2 = (1.0 - rect.y) / rect.height;\r\n            var up1x = (quad[0].x * (1.0 - ax) + quad[1].x * ax);\r\n            var up1y = (quad[0].y * (1.0 - ax) + quad[1].y * ax);\r\n            var up2x = (quad[0].x * (1.0 - ax2) + quad[1].x * ax2);\r\n            var up2y = (quad[0].y * (1.0 - ax2) + quad[1].y * ax2);\r\n            var down1x = (quad[3].x * (1.0 - ax) + quad[2].x * ax);\r\n            var down1y = (quad[3].y * (1.0 - ax) + quad[2].y * ax);\r\n            var down2x = (quad[3].x * (1.0 - ax2) + quad[2].x * ax2);\r\n            var down2y = (quad[3].y * (1.0 - ax2) + quad[2].y * ax2);\r\n            var x00 = up1x * (1.0 - ay) + down1x * ay;\r\n            var y00 = up1y * (1.0 - ay) + down1y * ay;\r\n            var x10 = up2x * (1.0 - ay) + down2x * ay;\r\n            var y10 = up2y * (1.0 - ay) + down2y * ay;\r\n            var x01 = up1x * (1.0 - ay2) + down1x * ay2;\r\n            var y01 = up1y * (1.0 - ay2) + down1y * ay2;\r\n            var x11 = up2x * (1.0 - ay2) + down2x * ay2;\r\n            var y11 = up2y * (1.0 - ay2) + down2y * ay2;\r\n            var mat = tempMat;\r\n            mat.tx = x00;\r\n            mat.ty = y00;\r\n            mat.a = x10 - x00;\r\n            mat.b = y10 - y00;\r\n            mat.c = x01 - x00;\r\n            mat.d = y01 - y00;\r\n            tempPoint.set(x11, y11);\r\n            mat.applyInverse(tempPoint, tempPoint);\r\n            outTransform.setFromMatrix(mat);\r\n            return this;\r\n        };\r\n        StrangeSurface.prototype.fillUniforms = function (uniforms) {\r\n            var params = this.params;\r\n            var distortion = uniforms.params || new Float32Array([0, 0, 0, 0]);\r\n            uniforms.params = distortion;\r\n            distortion[0] = params[0];\r\n            distortion[1] = params[1];\r\n            distortion[2] = params[2];\r\n            distortion[3] = params[3];\r\n        };\r\n        return StrangeSurface;\r\n    }(pixi_projection.Surface));\r\n    pixi_projection.StrangeSurface = StrangeSurface;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    PIXI.Sprite.prototype.convertTo2s = function () {\r\n        if (this.proj)\r\n            return;\r\n        this.pluginName = 'sprite_bilinear';\r\n        this.aTrans = new PIXI.Matrix();\r\n        this.calculateVertices = pixi_projection.Sprite2s.prototype.calculateVertices;\r\n        this.calculateTrimmedVertices = pixi_projection.Sprite2s.prototype.calculateTrimmedVertices;\r\n        this._calculateBounds = pixi_projection.Sprite2s.prototype._calculateBounds;\r\n        PIXI.Container.prototype.convertTo2s.call(this);\r\n    };\r\n    PIXI.Container.prototype.convertTo2s = function () {\r\n        if (this.proj)\r\n            return;\r\n        this.proj = new pixi_projection.Projection2d(this.transform);\r\n        Object.defineProperty(this, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    };\r\n    PIXI.Container.prototype.convertSubtreeTo2s = function () {\r\n        this.convertTo2s();\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            this.children[i].convertSubtreeTo2s();\r\n        }\r\n    };\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Sprite2s = (function (_super) {\r\n        __extends(Sprite2s, _super);\r\n        function Sprite2s(texture) {\r\n            var _this = _super.call(this, texture) || this;\r\n            _this.aTrans = new PIXI.Matrix();\r\n            _this.proj = new pixi_projection.ProjectionSurface(_this.transform);\r\n            _this.pluginName = 'sprite_bilinear';\r\n            return _this;\r\n        }\r\n        Sprite2s.prototype._calculateBounds = function () {\r\n            this.calculateTrimmedVertices();\r\n            this._bounds.addQuad(this.vertexTrimmedData);\r\n        };\r\n        Sprite2s.prototype.calculateVertices = function () {\r\n            var wid = this.transform._worldID;\r\n            var tuid = this._texture._updateID;\r\n            if (this._transformID === wid && this._textureID === tuid) {\r\n                return;\r\n            }\r\n            this._transformID = wid;\r\n            this._textureID = tuid;\r\n            var texture = this._texture;\r\n            var vertexData = this.vertexData;\r\n            var trim = texture.trim;\r\n            var orig = texture.orig;\r\n            var anchor = this._anchor;\r\n            var w0 = 0;\r\n            var w1 = 0;\r\n            var h0 = 0;\r\n            var h1 = 0;\r\n            if (trim) {\r\n                w1 = trim.x - (anchor._x * orig.width);\r\n                w0 = w1 + trim.width;\r\n                h1 = trim.y - (anchor._y * orig.height);\r\n                h0 = h1 + trim.height;\r\n            }\r\n            else {\r\n                w1 = -anchor._x * orig.width;\r\n                w0 = w1 + orig.width;\r\n                h1 = -anchor._y * orig.height;\r\n                h0 = h1 + orig.height;\r\n            }\r\n            if (this.proj._surface) {\r\n                vertexData[0] = w1;\r\n                vertexData[1] = h1;\r\n                vertexData[2] = w0;\r\n                vertexData[3] = h1;\r\n                vertexData[4] = w0;\r\n                vertexData[5] = h0;\r\n                vertexData[6] = w1;\r\n                vertexData[7] = h0;\r\n                this.proj._surface.boundsQuad(vertexData, vertexData);\r\n            }\r\n            else {\r\n                var wt = this.transform.worldTransform;\r\n                var a = wt.a;\r\n                var b = wt.b;\r\n                var c = wt.c;\r\n                var d = wt.d;\r\n                var tx = wt.tx;\r\n                var ty = wt.ty;\r\n                vertexData[0] = (a * w1) + (c * h1) + tx;\r\n                vertexData[1] = (d * h1) + (b * w1) + ty;\r\n                vertexData[2] = (a * w0) + (c * h1) + tx;\r\n                vertexData[3] = (d * h1) + (b * w0) + ty;\r\n                vertexData[4] = (a * w0) + (c * h0) + tx;\r\n                vertexData[5] = (d * h0) + (b * w0) + ty;\r\n                vertexData[6] = (a * w1) + (c * h0) + tx;\r\n                vertexData[7] = (d * h0) + (b * w1) + ty;\r\n                if (this.proj._activeProjection) {\r\n                    this.proj._activeProjection.surface.boundsQuad(vertexData, vertexData);\r\n                }\r\n            }\r\n            if (!texture.transform) {\r\n                texture.transform = new PIXI.extras.TextureTransform(texture);\r\n            }\r\n            texture.transform.update();\r\n            var aTrans = this.aTrans;\r\n            aTrans.set(orig.width, 0, 0, orig.height, w1, h1);\r\n            if (this.proj._surface === null) {\r\n                aTrans.prepend(this.transform.worldTransform);\r\n            }\r\n            aTrans.invert();\r\n            aTrans.prepend(texture.transform.mapCoord);\r\n        };\r\n        Sprite2s.prototype.calculateTrimmedVertices = function () {\r\n            var wid = this.transform._worldID;\r\n            var tuid = this._texture._updateID;\r\n            if (!this.vertexTrimmedData) {\r\n                this.vertexTrimmedData = new Float32Array(8);\r\n            }\r\n            else if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\r\n                return;\r\n            }\r\n            this._transformTrimmedID = wid;\r\n            this._textureTrimmedID = tuid;\r\n            var texture = this._texture;\r\n            var vertexData = this.vertexTrimmedData;\r\n            var orig = texture.orig;\r\n            var anchor = this._anchor;\r\n            var w1 = -anchor._x * orig.width;\r\n            var w0 = w1 + orig.width;\r\n            var h1 = -anchor._y * orig.height;\r\n            var h0 = h1 + orig.height;\r\n            if (this.proj._surface) {\r\n                vertexData[0] = w1;\r\n                vertexData[1] = h1;\r\n                vertexData[2] = w0;\r\n                vertexData[3] = h1;\r\n                vertexData[4] = w0;\r\n                vertexData[5] = h0;\r\n                vertexData[6] = w1;\r\n                vertexData[7] = h0;\r\n                this.proj._surface.boundsQuad(vertexData, vertexData, this.transform.worldTransform);\r\n            }\r\n            else {\r\n                var wt = this.transform.worldTransform;\r\n                var a = wt.a;\r\n                var b = wt.b;\r\n                var c = wt.c;\r\n                var d = wt.d;\r\n                var tx = wt.tx;\r\n                var ty = wt.ty;\r\n                vertexData[0] = (a * w1) + (c * h1) + tx;\r\n                vertexData[1] = (d * h1) + (b * w1) + ty;\r\n                vertexData[2] = (a * w0) + (c * h1) + tx;\r\n                vertexData[3] = (d * h1) + (b * w0) + ty;\r\n                vertexData[4] = (a * w0) + (c * h0) + tx;\r\n                vertexData[5] = (d * h0) + (b * w0) + ty;\r\n                vertexData[6] = (a * w1) + (c * h0) + tx;\r\n                vertexData[7] = (d * h0) + (b * w1) + ty;\r\n                if (this.proj._activeProjection) {\r\n                    this.proj._activeProjection.surface.boundsQuad(vertexData, vertexData, this.proj._activeProjection.legacy.worldTransform);\r\n                }\r\n            }\r\n        };\r\n        Object.defineProperty(Sprite2s.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Sprite2s;\r\n    }(PIXI.Sprite));\r\n    pixi_projection.Sprite2s = Sprite2s;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Text2s = (function (_super) {\r\n        __extends(Text2s, _super);\r\n        function Text2s(text, style, canvas) {\r\n            var _this = _super.call(this, text, style, canvas) || this;\r\n            _this.aTrans = new PIXI.Matrix();\r\n            _this.proj = new pixi_projection.ProjectionSurface(_this.transform);\r\n            _this.pluginName = 'sprite_bilinear';\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Text2s.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Text2s;\r\n    }(PIXI.Text));\r\n    pixi_projection.Text2s = Text2s;\r\n    Text2s.prototype.calculateVertices = pixi_projection.Sprite2s.prototype.calculateVertices;\r\n    Text2s.prototype.calculateTrimmedVertices = pixi_projection.Sprite2s.prototype.calculateTrimmedVertices;\r\n    Text2s.prototype._calculateBounds = pixi_projection.Sprite2s.prototype._calculateBounds;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    function container2dWorldTransform() {\r\n        return this.proj.affine ? this.transform.worldTransform : this.proj.world;\r\n    }\r\n    pixi_projection.container2dWorldTransform = container2dWorldTransform;\r\n    var Container2d = (function (_super) {\r\n        __extends(Container2d, _super);\r\n        function Container2d() {\r\n            var _this = _super.call(this) || this;\r\n            _this.proj = new pixi_projection.Projection2d(_this.transform);\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Container2d.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj.affine ? this.transform.worldTransform : this.proj.world;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Container2d;\r\n    }(PIXI.Container));\r\n    pixi_projection.Container2d = Container2d;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Point = PIXI.Point;\r\n    var mat3id = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    var AFFINE;\r\n    (function (AFFINE) {\r\n        AFFINE[AFFINE[\"NONE\"] = 0] = \"NONE\";\r\n        AFFINE[AFFINE[\"FREE\"] = 1] = \"FREE\";\r\n        AFFINE[AFFINE[\"AXIS_X\"] = 2] = \"AXIS_X\";\r\n        AFFINE[AFFINE[\"AXIS_Y\"] = 3] = \"AXIS_Y\";\r\n        AFFINE[AFFINE[\"POINT\"] = 4] = \"POINT\";\r\n    })(AFFINE = pixi_projection.AFFINE || (pixi_projection.AFFINE = {}));\r\n    var Matrix2d = (function () {\r\n        function Matrix2d(backingArray) {\r\n            this.floatArray = null;\r\n            this.mat3 = new Float64Array(backingArray || mat3id);\r\n        }\r\n        Object.defineProperty(Matrix2d.prototype, \"a\", {\r\n            get: function () {\r\n                return this.mat3[0];\r\n            },\r\n            set: function (value) {\r\n                this.mat3[0] = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Matrix2d.prototype, \"b\", {\r\n            get: function () {\r\n                return this.mat3[1];\r\n            },\r\n            set: function (value) {\r\n                this.mat3[1] = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Matrix2d.prototype, \"c\", {\r\n            get: function () {\r\n                return this.mat3[3];\r\n            },\r\n            set: function (value) {\r\n                this.mat3[3] = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Matrix2d.prototype, \"d\", {\r\n            get: function () {\r\n                return this.mat3[4];\r\n            },\r\n            set: function (value) {\r\n                this.mat3[4] = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Matrix2d.prototype, \"tx\", {\r\n            get: function () {\r\n                return this.mat3[6];\r\n            },\r\n            set: function (value) {\r\n                this.mat3[6] = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Matrix2d.prototype, \"ty\", {\r\n            get: function () {\r\n                return this.mat3[7];\r\n            },\r\n            set: function (value) {\r\n                this.mat3[7] = value;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Matrix2d.prototype.set = function (a, b, c, d, tx, ty) {\r\n            var mat3 = this.mat3;\r\n            mat3[0] = a;\r\n            mat3[1] = b;\r\n            mat3[2] = 0;\r\n            mat3[3] = c;\r\n            mat3[4] = d;\r\n            mat3[5] = 0;\r\n            mat3[6] = tx;\r\n            mat3[7] = ty;\r\n            mat3[8] = 1;\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.toArray = function (transpose, out) {\r\n            if (!this.floatArray) {\r\n                this.floatArray = new Float32Array(9);\r\n            }\r\n            var array = out || this.floatArray;\r\n            var mat3 = this.mat3;\r\n            if (transpose) {\r\n                array[0] = mat3[0];\r\n                array[1] = mat3[1];\r\n                array[2] = mat3[2];\r\n                array[3] = mat3[3];\r\n                array[4] = mat3[4];\r\n                array[5] = mat3[5];\r\n                array[6] = mat3[6];\r\n                array[7] = mat3[7];\r\n                array[8] = mat3[8];\r\n            }\r\n            else {\r\n                array[0] = mat3[0];\r\n                array[1] = mat3[3];\r\n                array[2] = mat3[6];\r\n                array[3] = mat3[1];\r\n                array[4] = mat3[4];\r\n                array[5] = mat3[7];\r\n                array[6] = mat3[2];\r\n                array[7] = mat3[5];\r\n                array[8] = mat3[8];\r\n            }\r\n            return array;\r\n        };\r\n        Matrix2d.prototype.apply = function (pos, newPos) {\r\n            newPos = newPos || new PIXI.Point();\r\n            var mat3 = this.mat3;\r\n            var x = pos.x;\r\n            var y = pos.y;\r\n            var z = 1.0 / (mat3[2] * x + mat3[5] * y + mat3[8]);\r\n            newPos.x = z * (mat3[0] * x + mat3[3] * y + mat3[6]);\r\n            newPos.y = z * (mat3[1] * x + mat3[4] * y + mat3[7]);\r\n            return newPos;\r\n        };\r\n        Matrix2d.prototype.translate = function (tx, ty) {\r\n            var mat3 = this.mat3;\r\n            mat3[0] += tx * mat3[2];\r\n            mat3[1] += ty * mat3[2];\r\n            mat3[3] += tx * mat3[5];\r\n            mat3[4] += ty * mat3[5];\r\n            mat3[6] += tx * mat3[8];\r\n            mat3[7] += ty * mat3[8];\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.scale = function (x, y) {\r\n            var mat3 = this.mat3;\r\n            mat3[0] *= x;\r\n            mat3[1] *= y;\r\n            mat3[3] *= x;\r\n            mat3[4] *= y;\r\n            mat3[6] *= x;\r\n            mat3[7] *= y;\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.scaleAndTranslate = function (scaleX, scaleY, tx, ty) {\r\n            var mat3 = this.mat3;\r\n            mat3[0] = scaleX * mat3[0] + tx * mat3[2];\r\n            mat3[1] = scaleY * mat3[1] + ty * mat3[2];\r\n            mat3[3] = scaleX * mat3[3] + tx * mat3[5];\r\n            mat3[4] = scaleY * mat3[4] + ty * mat3[5];\r\n            mat3[6] = scaleX * mat3[6] + tx * mat3[8];\r\n            mat3[7] = scaleY * mat3[7] + ty * mat3[8];\r\n        };\r\n        Matrix2d.prototype.applyInverse = function (pos, newPos) {\r\n            newPos = newPos || new Point();\r\n            var a = this.mat3;\r\n            var x = pos.x;\r\n            var y = pos.y;\r\n            var a00 = a[0], a01 = a[3], a02 = a[6], a10 = a[1], a11 = a[4], a12 = a[7], a20 = a[2], a21 = a[5], a22 = a[8];\r\n            var newX = (a22 * a11 - a12 * a21) * x + (-a22 * a01 + a02 * a21) * y + (a12 * a01 - a02 * a11);\r\n            var newY = (-a22 * a10 + a12 * a20) * x + (a22 * a00 - a02 * a20) * y + (-a12 * a00 + a02 * a10);\r\n            var newZ = (a21 * a10 - a11 * a20) * x + (-a21 * a00 + a01 * a20) * y + (a11 * a00 - a01 * a10);\r\n            newPos.x = newX / newZ;\r\n            newPos.y = newY / newZ;\r\n            return newPos;\r\n        };\r\n        Matrix2d.prototype.invert = function () {\r\n            var a = this.mat3;\r\n            var a00 = a[0], a01 = a[1], a02 = a[2], a10 = a[3], a11 = a[4], a12 = a[5], a20 = a[6], a21 = a[7], a22 = a[8], b01 = a22 * a11 - a12 * a21, b11 = -a22 * a10 + a12 * a20, b21 = a21 * a10 - a11 * a20;\r\n            var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n            if (!det) {\r\n                return this;\r\n            }\r\n            det = 1.0 / det;\r\n            a[0] = b01 * det;\r\n            a[1] = (-a22 * a01 + a02 * a21) * det;\r\n            a[2] = (a12 * a01 - a02 * a11) * det;\r\n            a[3] = b11 * det;\r\n            a[4] = (a22 * a00 - a02 * a20) * det;\r\n            a[5] = (-a12 * a00 + a02 * a10) * det;\r\n            a[6] = b21 * det;\r\n            a[7] = (-a21 * a00 + a01 * a20) * det;\r\n            a[8] = (a11 * a00 - a01 * a10) * det;\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.identity = function () {\r\n            var mat3 = this.mat3;\r\n            mat3[0] = 1;\r\n            mat3[1] = 0;\r\n            mat3[2] = 0;\r\n            mat3[3] = 0;\r\n            mat3[4] = 1;\r\n            mat3[5] = 0;\r\n            mat3[6] = 0;\r\n            mat3[7] = 0;\r\n            mat3[8] = 1;\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.clone = function () {\r\n            return new Matrix2d(this.mat3);\r\n        };\r\n        Matrix2d.prototype.copyTo = function (matrix) {\r\n            var mat3 = this.mat3;\r\n            var ar2 = matrix.mat3;\r\n            ar2[0] = mat3[0];\r\n            ar2[1] = mat3[1];\r\n            ar2[2] = mat3[2];\r\n            ar2[3] = mat3[3];\r\n            ar2[4] = mat3[4];\r\n            ar2[5] = mat3[5];\r\n            ar2[6] = mat3[6];\r\n            ar2[7] = mat3[7];\r\n            ar2[8] = mat3[8];\r\n            return matrix;\r\n        };\r\n        Matrix2d.prototype.copy = function (matrix, affine) {\r\n            var mat3 = this.mat3;\r\n            var d = 1.0 / mat3[8];\r\n            var tx = mat3[6] * d, ty = mat3[7] * d;\r\n            matrix.a = (mat3[0] - mat3[2] * tx) * d;\r\n            matrix.b = (mat3[1] - mat3[2] * ty) * d;\r\n            matrix.c = (mat3[3] - mat3[5] * tx) * d;\r\n            matrix.d = (mat3[4] - mat3[5] * ty) * d;\r\n            matrix.tx = tx;\r\n            matrix.ty = ty;\r\n            if (affine >= 2) {\r\n                if (affine === AFFINE.POINT) {\r\n                    matrix.a = 1;\r\n                    matrix.b = 0;\r\n                    matrix.c = 0;\r\n                    matrix.d = 1;\r\n                }\r\n                else if (affine === AFFINE.AXIS_X) {\r\n                    matrix.c = -matrix.b;\r\n                    matrix.d = matrix.a;\r\n                }\r\n                else if (affine === AFFINE.AXIS_Y) {\r\n                    matrix.a = matrix.d;\r\n                    matrix.c = -matrix.b;\r\n                }\r\n            }\r\n        };\r\n        Matrix2d.prototype.copyFrom = function (matrix) {\r\n            var mat3 = this.mat3;\r\n            mat3[0] = matrix.a;\r\n            mat3[1] = matrix.b;\r\n            mat3[2] = 0;\r\n            mat3[3] = matrix.c;\r\n            mat3[4] = matrix.d;\r\n            mat3[5] = 0;\r\n            mat3[6] = matrix.tx;\r\n            mat3[7] = matrix.ty;\r\n            mat3[8] = 1.0;\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.setToMultLegacy = function (pt, lt) {\r\n            var out = this.mat3;\r\n            var b = lt.mat3;\r\n            var a00 = pt.a, a01 = pt.b, a10 = pt.c, a11 = pt.d, a20 = pt.tx, a21 = pt.ty, b00 = b[0], b01 = b[1], b02 = b[2], b10 = b[3], b11 = b[4], b12 = b[5], b20 = b[6], b21 = b[7], b22 = b[8];\r\n            out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n            out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n            out[2] = b02;\r\n            out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n            out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n            out[5] = b12;\r\n            out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n            out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n            out[8] = b22;\r\n            return this;\r\n        };\r\n        Matrix2d.prototype.setToMult2d = function (pt, lt) {\r\n            var out = this.mat3;\r\n            var a = pt.mat3, b = lt.mat3;\r\n            var a00 = a[0], a01 = a[1], a02 = a[2], a10 = a[3], a11 = a[4], a12 = a[5], a20 = a[6], a21 = a[7], a22 = a[8], b00 = b[0], b01 = b[1], b02 = b[2], b10 = b[3], b11 = b[4], b12 = b[5], b20 = b[6], b21 = b[7], b22 = b[8];\r\n            out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n            out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n            out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n            out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n            out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n            out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n            out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n            out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n            out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n            return this;\r\n        };\r\n        Matrix2d.IDENTITY = new Matrix2d();\r\n        Matrix2d.TEMP_MATRIX = new Matrix2d();\r\n        return Matrix2d;\r\n    }());\r\n    pixi_projection.Matrix2d = Matrix2d;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    function transformHack(parentTransform) {\r\n        var proj = this.proj;\r\n        var ta = this;\r\n        var pwid = parentTransform._worldID;\r\n        var lt = ta.localTransform;\r\n        if (ta._localID !== ta._currentLocalID) {\r\n            lt.a = ta._cx * ta.scale._x;\r\n            lt.b = ta._sx * ta.scale._x;\r\n            lt.c = ta._cy * ta.scale._y;\r\n            lt.d = ta._sy * ta.scale._y;\r\n            lt.tx = ta.position._x - ((ta.pivot._x * lt.a) + (ta.pivot._y * lt.c));\r\n            lt.ty = ta.position._y - ((ta.pivot._x * lt.b) + (ta.pivot._y * lt.d));\r\n            ta._currentLocalID = ta._localID;\r\n            proj._currentProjID = -1;\r\n        }\r\n        var _matrixID = proj._projID;\r\n        if (proj._currentProjID !== _matrixID) {\r\n            proj._currentProjID = _matrixID;\r\n            if (_matrixID !== 0) {\r\n                proj.local.setToMultLegacy(lt, proj.matrix);\r\n            }\r\n            else {\r\n                proj.local.copyFrom(lt);\r\n            }\r\n            ta._parentID = -1;\r\n        }\r\n        if (ta._parentID !== pwid) {\r\n            var pp = parentTransform.proj;\r\n            if (pp && !pp.affine) {\r\n                proj.world.setToMult2d(pp.world, proj.local);\r\n            }\r\n            else {\r\n                proj.world.setToMultLegacy(parentTransform.worldTransform, proj.local);\r\n            }\r\n            proj.world.copy(ta.worldTransform, proj._affine);\r\n            ta._parentID = pwid;\r\n            ta._worldID++;\r\n        }\r\n    }\r\n    var t0 = new PIXI.Point();\r\n    var tt = [new PIXI.Point(), new PIXI.Point(), new PIXI.Point(), new PIXI.Point()];\r\n    var tempRect = new PIXI.Rectangle();\r\n    var tempMat = new pixi_projection.Matrix2d();\r\n    var Projection2d = (function (_super) {\r\n        __extends(Projection2d, _super);\r\n        function Projection2d(legacy, enable) {\r\n            var _this = _super.call(this, legacy, enable) || this;\r\n            _this.matrix = new pixi_projection.Matrix2d();\r\n            _this.local = new pixi_projection.Matrix2d();\r\n            _this.world = new pixi_projection.Matrix2d();\r\n            _this._projID = 0;\r\n            _this._currentProjID = -1;\r\n            _this._affine = pixi_projection.AFFINE.NONE;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Projection2d.prototype, \"affine\", {\r\n            get: function () {\r\n                return this._affine;\r\n            },\r\n            set: function (value) {\r\n                if (this._affine == value)\r\n                    return;\r\n                this._affine = value;\r\n                this._currentProjID = -1;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Object.defineProperty(Projection2d.prototype, \"enabled\", {\r\n            set: function (value) {\r\n                if (value === this._enabled) {\r\n                    return;\r\n                }\r\n                this._enabled = value;\r\n                if (value) {\r\n                    this.legacy.updateTransform = transformHack;\r\n                    this.legacy._parentID = -1;\r\n                }\r\n                else {\r\n                    this.legacy.updateTransform = PIXI.TransformStatic.prototype.updateTransform;\r\n                    this.legacy._parentID = -1;\r\n                }\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        Projection2d.prototype.setAxisX = function (p, factor) {\r\n            if (factor === void 0) { factor = 1; }\r\n            var x = p.x, y = p.y;\r\n            var d = Math.sqrt(x * x + y * y);\r\n            var mat3 = this.matrix.mat3;\r\n            mat3[0] = x / d;\r\n            mat3[1] = y / d;\r\n            mat3[2] = factor / d;\r\n            this._projID++;\r\n        };\r\n        Projection2d.prototype.setAxisY = function (p, factor) {\r\n            if (factor === void 0) { factor = 1; }\r\n            var x = p.x, y = p.y;\r\n            var d = Math.sqrt(x * x + y * y);\r\n            var mat3 = this.matrix.mat3;\r\n            mat3[3] = x / d;\r\n            mat3[4] = y / d;\r\n            mat3[5] = factor / d;\r\n            this._projID++;\r\n        };\r\n        Projection2d.prototype.mapSprite = function (sprite, quad) {\r\n            var tex = sprite.texture;\r\n            tempRect.x = -sprite.anchor.x * tex.orig.width;\r\n            tempRect.y = -sprite.anchor.y * tex.orig.height;\r\n            tempRect.width = tex.orig.width;\r\n            tempRect.height = tex.orig.height;\r\n            return this.mapQuad(tempRect, quad);\r\n        };\r\n        Projection2d.prototype.mapQuad = function (rect, p) {\r\n            tt[0].set(rect.x, rect.y);\r\n            tt[1].set(rect.x + rect.width, rect.y);\r\n            tt[2].set(rect.x + rect.width, rect.y + rect.height);\r\n            tt[3].set(rect.x, rect.y + rect.height);\r\n            var k1 = 1, k2 = 2, k3 = 3;\r\n            var f = pixi_projection.utils.getIntersectionFactor(p[0], p[2], p[1], p[3], t0);\r\n            if (f !== 0) {\r\n                k1 = 1;\r\n                k2 = 3;\r\n                k3 = 2;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            var d0 = Math.sqrt((p[0].x - t0.x) * (p[0].x - t0.x) + (p[0].y - t0.y) * (p[0].y - t0.y));\r\n            var d1 = Math.sqrt((p[k1].x - t0.x) * (p[k1].x - t0.x) + (p[k1].y - t0.y) * (p[k1].y - t0.y));\r\n            var d2 = Math.sqrt((p[k2].x - t0.x) * (p[k2].x - t0.x) + (p[k2].y - t0.y) * (p[k2].y - t0.y));\r\n            var d3 = Math.sqrt((p[k3].x - t0.x) * (p[k3].x - t0.x) + (p[k3].y - t0.y) * (p[k3].y - t0.y));\r\n            var q0 = (d0 + d3) / d3;\r\n            var q1 = (d1 + d2) / d2;\r\n            var q2 = (d1 + d2) / d1;\r\n            var mat3 = this.matrix.mat3;\r\n            mat3[0] = tt[0].x * q0;\r\n            mat3[1] = tt[0].y * q0;\r\n            mat3[2] = q0;\r\n            mat3[3] = tt[k1].x * q1;\r\n            mat3[4] = tt[k1].y * q1;\r\n            mat3[5] = q1;\r\n            mat3[6] = tt[k2].x * q2;\r\n            mat3[7] = tt[k2].y * q2;\r\n            mat3[8] = q2;\r\n            this.matrix.invert();\r\n            mat3 = tempMat.mat3;\r\n            mat3[0] = p[0].x;\r\n            mat3[1] = p[0].y;\r\n            mat3[2] = 1;\r\n            mat3[3] = p[k1].x;\r\n            mat3[4] = p[k1].y;\r\n            mat3[5] = 1;\r\n            mat3[6] = p[k2].x;\r\n            mat3[7] = p[k2].y;\r\n            mat3[8] = 1;\r\n            this.matrix.setToMult2d(tempMat, this.matrix);\r\n            this._projID++;\r\n        };\r\n        Projection2d.prototype.clear = function () {\r\n            this._currentProjID = -1;\r\n            this._projID = 0;\r\n            this.matrix.identity();\r\n        };\r\n        return Projection2d;\r\n    }(pixi_projection.Projection));\r\n    pixi_projection.Projection2d = Projection2d;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Mesh2d = (function (_super) {\r\n        __extends(Mesh2d, _super);\r\n        function Mesh2d(texture, vertices, uvs, indices, drawMode) {\r\n            var _this = _super.call(this, texture, vertices, uvs, indices, drawMode) || this;\r\n            _this.proj = new pixi_projection.Projection2d(_this.transform);\r\n            _this.pluginName = 'mesh2d';\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Mesh2d.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj.affine ? this.transform.worldTransform : this.proj.world;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Mesh2d;\r\n    }(PIXI.mesh.Mesh));\r\n    pixi_projection.Mesh2d = Mesh2d;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var shaderVert = \"precision highp float;\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 translationMatrix;\\nuniform mat3 uTransform;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position.xyw = projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0);\\n    gl_Position.z = 0.0;\\n\\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\\n}\\n\";\r\n    var shaderFrag = \"\\nvarying vec2 vTextureCoord;\\nuniform vec4 uColor;\\n\\nuniform sampler2D uSampler;\\n\\nvoid main(void)\\n{\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;\\n}\";\r\n    var Mesh2dRenderer = (function (_super) {\r\n        __extends(Mesh2dRenderer, _super);\r\n        function Mesh2dRenderer() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        Mesh2dRenderer.prototype.onContextChange = function () {\r\n            var gl = this.renderer.gl;\r\n            this.shader = new PIXI.Shader(gl, shaderVert, shaderFrag);\r\n        };\r\n        return Mesh2dRenderer;\r\n    }(PIXI.mesh.MeshRenderer));\r\n    pixi_projection.Mesh2dRenderer = Mesh2dRenderer;\r\n    PIXI.WebGLRenderer.registerPlugin('mesh2d', Mesh2dRenderer);\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    PIXI.Sprite.prototype.convertTo2d = function () {\r\n        if (this.proj)\r\n            return;\r\n        this.calculateVertices = pixi_projection.Sprite2d.prototype.calculateVertices;\r\n        this.calculateTrimmedVertices = pixi_projection.Sprite2d.prototype.calculateTrimmedVertices;\r\n        this._calculateBounds = pixi_projection.Sprite2d.prototype._calculateBounds;\r\n        this.proj = new pixi_projection.Projection2d(this.transform);\r\n        this.pluginName = 'sprite2d';\r\n        this.vertexData = new Float32Array(12);\r\n        Object.defineProperty(this, \"worldTransform\", {\r\n            get: pixi_projection.container2dWorldTransform,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    };\r\n    PIXI.mesh.Mesh.prototype.convertTo2d = function () {\r\n        if (this.proj)\r\n            return;\r\n        this.proj = new pixi_projection.Projection2d(this.transform);\r\n        this.pluginName = 'mesh2d';\r\n        Object.defineProperty(this, \"worldTransform\", {\r\n            get: pixi_projection.container2dWorldTransform,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    };\r\n    PIXI.Container.prototype.convertTo2d = function () {\r\n        if (this.proj)\r\n            return;\r\n        this.proj = new pixi_projection.Projection2d(this.transform);\r\n        Object.defineProperty(this, \"worldTransform\", {\r\n            get: pixi_projection.container2dWorldTransform,\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    };\r\n    PIXI.Container.prototype.convertSubtreeTo2d = function () {\r\n        this.convertTo2d();\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            this.children[i].convertSubtreeTo2d();\r\n        }\r\n    };\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Sprite2d = (function (_super) {\r\n        __extends(Sprite2d, _super);\r\n        function Sprite2d(texture) {\r\n            var _this = _super.call(this, texture) || this;\r\n            _this.proj = new pixi_projection.Projection2d(_this.transform);\r\n            _this.pluginName = 'sprite2d';\r\n            _this.vertexData = new Float32Array(12);\r\n            return _this;\r\n        }\r\n        Sprite2d.prototype._calculateBounds = function () {\r\n            this.calculateTrimmedVertices();\r\n            this._bounds.addQuad(this.vertexTrimmedData);\r\n        };\r\n        Sprite2d.prototype.calculateVertices = function () {\r\n            if (this.proj._affine) {\r\n                if (this.vertexData.length != 8) {\r\n                    this.vertexData = new Float32Array(8);\r\n                }\r\n                _super.prototype.calculateVertices.call(this);\r\n                return;\r\n            }\r\n            if (this.vertexData.length != 12) {\r\n                this.vertexData = new Float32Array(12);\r\n            }\r\n            var wid = this.transform._worldID;\r\n            var tuid = this._texture._updateID;\r\n            if (this._transformID === wid && this._textureID === tuid) {\r\n                return;\r\n            }\r\n            this._transformID = wid;\r\n            this._textureID = tuid;\r\n            var texture = this._texture;\r\n            var wt = this.proj.world.mat3;\r\n            var vertexData = this.vertexData;\r\n            var trim = texture.trim;\r\n            var orig = texture.orig;\r\n            var anchor = this._anchor;\r\n            var w0 = 0;\r\n            var w1 = 0;\r\n            var h0 = 0;\r\n            var h1 = 0;\r\n            if (trim) {\r\n                w1 = trim.x - (anchor._x * orig.width);\r\n                w0 = w1 + trim.width;\r\n                h1 = trim.y - (anchor._y * orig.height);\r\n                h0 = h1 + trim.height;\r\n            }\r\n            else {\r\n                w1 = -anchor._x * orig.width;\r\n                w0 = w1 + orig.width;\r\n                h1 = -anchor._y * orig.height;\r\n                h0 = h1 + orig.height;\r\n            }\r\n            vertexData[0] = (wt[0] * w1) + (wt[3] * h1) + wt[6];\r\n            vertexData[1] = (wt[1] * w1) + (wt[4] * h1) + wt[7];\r\n            vertexData[2] = (wt[2] * w1) + (wt[5] * h1) + wt[8];\r\n            vertexData[3] = (wt[0] * w0) + (wt[3] * h1) + wt[6];\r\n            vertexData[4] = (wt[1] * w0) + (wt[4] * h1) + wt[7];\r\n            vertexData[5] = (wt[2] * w0) + (wt[5] * h1) + wt[8];\r\n            vertexData[6] = (wt[0] * w0) + (wt[3] * h0) + wt[6];\r\n            vertexData[7] = (wt[1] * w0) + (wt[4] * h0) + wt[7];\r\n            vertexData[8] = (wt[2] * w0) + (wt[5] * h0) + wt[8];\r\n            vertexData[9] = (wt[0] * w1) + (wt[3] * h0) + wt[6];\r\n            vertexData[10] = (wt[1] * w1) + (wt[4] * h0) + wt[7];\r\n            vertexData[11] = (wt[2] * w1) + (wt[5] * h0) + wt[8];\r\n        };\r\n        Sprite2d.prototype.calculateTrimmedVertices = function () {\r\n            if (this.proj._affine) {\r\n                _super.prototype.calculateTrimmedVertices.call(this);\r\n                return;\r\n            }\r\n            var wid = this.transform._worldID;\r\n            var tuid = this._texture._updateID;\r\n            if (!this.vertexTrimmedData) {\r\n                this.vertexTrimmedData = new Float32Array(8);\r\n            }\r\n            else if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\r\n                return;\r\n            }\r\n            this._transformTrimmedID = wid;\r\n            this._textureTrimmedID = tuid;\r\n            var texture = this._texture;\r\n            var vertexData = this.vertexTrimmedData;\r\n            var orig = texture.orig;\r\n            var anchor = this._anchor;\r\n            var wt = this.proj.world.mat3;\r\n            var w1 = -anchor._x * orig.width;\r\n            var w0 = w1 + orig.width;\r\n            var h1 = -anchor._y * orig.height;\r\n            var h0 = h1 + orig.height;\r\n            var z = 1.0 / (wt[2] * w1 + wt[5] * h1 + wt[8]);\r\n            vertexData[0] = z * ((wt[0] * w1) + (wt[3] * h1) + wt[6]);\r\n            vertexData[1] = z * ((wt[1] * w1) + (wt[4] * h1) + wt[7]);\r\n            z = 1.0 / (wt[2] * w0 + wt[5] * h1 + wt[8]);\r\n            vertexData[2] = z * ((wt[0] * w0) + (wt[3] * h1) + wt[6]);\r\n            vertexData[3] = z * ((wt[1] * w0) + (wt[4] * h1) + wt[7]);\r\n            z = 1.0 / (wt[2] * w0 + wt[5] * h0 + wt[8]);\r\n            vertexData[4] = z * ((wt[0] * w0) + (wt[3] * h0) + wt[6]);\r\n            vertexData[5] = z * ((wt[1] * w0) + (wt[4] * h0) + wt[7]);\r\n            z = 1.0 / (wt[2] * w1 + wt[5] * h0 + wt[8]);\r\n            vertexData[6] = z * ((wt[0] * w1) + (wt[3] * h0) + wt[6]);\r\n            vertexData[7] = z * ((wt[1] * w1) + (wt[4] * h0) + wt[7]);\r\n        };\r\n        Object.defineProperty(Sprite2d.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj.affine ? this.transform.worldTransform : this.proj.world;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Sprite2d;\r\n    }(PIXI.Sprite));\r\n    pixi_projection.Sprite2d = Sprite2d;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var MultiTextureSpriteRenderer = pixi_projection.webgl.MultiTextureSpriteRenderer;\r\n    var Sprite2dRenderer = (function (_super) {\r\n        __extends(Sprite2dRenderer, _super);\r\n        function Sprite2dRenderer() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.shaderVert = \"precision highp float;\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aColor;\\nattribute float aTextureId;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\n\\nvoid main(void){\\n    gl_Position.xyw = projectionMatrix * aVertexPosition;\\n    gl_Position.z = 0.0;\\n    \\n    vTextureCoord = aTextureCoord;\\n    vTextureId = aTextureId;\\n    vColor = aColor;\\n}\\n\";\r\n            _this.shaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying vec4 vColor;\\nvarying float vTextureId;\\nuniform sampler2D uSamplers[%count%];\\n\\nvoid main(void){\\nvec4 color;\\nvec2 textureCoord = vTextureCoord;\\nfloat textureId = floor(vTextureId+0.5);\\n%forloop%\\ngl_FragColor = color * vColor;\\n}\";\r\n            return _this;\r\n        }\r\n        Sprite2dRenderer.prototype.createVao = function (vertexBuffer) {\r\n            var attrs = this.shader.attributes;\r\n            this.vertSize = 6;\r\n            this.vertByteSize = this.vertSize * 4;\r\n            var gl = this.renderer.gl;\r\n            var vao = this.renderer.createVao()\r\n                .addIndex(this.indexBuffer)\r\n                .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n                .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 3 * 4)\r\n                .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4);\r\n            if (attrs.aTextureId) {\r\n                vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\r\n            }\r\n            return vao;\r\n        };\r\n        Sprite2dRenderer.prototype.fillVertices = function (float32View, uint32View, index, sprite, argb, textureId) {\r\n            var vertexData = sprite.vertexData;\r\n            var uvs = sprite._texture._uvs.uvsUint32;\r\n            if (vertexData.length === 8) {\r\n                if (this.renderer.roundPixels) {\r\n                    var resolution = this.renderer.resolution;\r\n                    float32View[index] = ((vertexData[0] * resolution) | 0) / resolution;\r\n                    float32View[index + 1] = ((vertexData[1] * resolution) | 0) / resolution;\r\n                    float32View[index + 2] = 1.0;\r\n                    float32View[index + 6] = ((vertexData[2] * resolution) | 0) / resolution;\r\n                    float32View[index + 7] = ((vertexData[3] * resolution) | 0) / resolution;\r\n                    float32View[index + 8] = 1.0;\r\n                    float32View[index + 12] = ((vertexData[4] * resolution) | 0) / resolution;\r\n                    float32View[index + 13] = ((vertexData[5] * resolution) | 0) / resolution;\r\n                    float32View[index + 14] = 1.0;\r\n                    float32View[index + 18] = ((vertexData[6] * resolution) | 0) / resolution;\r\n                    float32View[index + 19] = ((vertexData[7] * resolution) | 0) / resolution;\r\n                    float32View[index + 20] = 1.0;\r\n                }\r\n                else {\r\n                    float32View[index] = vertexData[0];\r\n                    float32View[index + 1] = vertexData[1];\r\n                    float32View[index + 2] = 1.0;\r\n                    float32View[index + 6] = vertexData[2];\r\n                    float32View[index + 7] = vertexData[3];\r\n                    float32View[index + 8] = 1.0;\r\n                    float32View[index + 12] = vertexData[4];\r\n                    float32View[index + 13] = vertexData[5];\r\n                    float32View[index + 14] = 1.0;\r\n                    float32View[index + 18] = vertexData[6];\r\n                    float32View[index + 19] = vertexData[7];\r\n                    float32View[index + 20] = 1.0;\r\n                }\r\n            }\r\n            else {\r\n                float32View[index] = vertexData[0];\r\n                float32View[index + 1] = vertexData[1];\r\n                float32View[index + 2] = vertexData[2];\r\n                float32View[index + 6] = vertexData[3];\r\n                float32View[index + 7] = vertexData[4];\r\n                float32View[index + 8] = vertexData[5];\r\n                float32View[index + 12] = vertexData[6];\r\n                float32View[index + 13] = vertexData[7];\r\n                float32View[index + 14] = vertexData[8];\r\n                float32View[index + 18] = vertexData[9];\r\n                float32View[index + 19] = vertexData[10];\r\n                float32View[index + 20] = vertexData[11];\r\n            }\r\n            uint32View[index + 3] = uvs[0];\r\n            uint32View[index + 9] = uvs[1];\r\n            uint32View[index + 15] = uvs[2];\r\n            uint32View[index + 21] = uvs[3];\r\n            uint32View[index + 4] = uint32View[index + 10] = uint32View[index + 16] = uint32View[index + 22] = argb;\r\n            float32View[index + 5] = float32View[index + 11] = float32View[index + 17] = float32View[index + 23] = textureId;\r\n        };\r\n        return Sprite2dRenderer;\r\n    }(MultiTextureSpriteRenderer));\r\n    PIXI.WebGLRenderer.registerPlugin('sprite2d', Sprite2dRenderer);\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var Text2d = (function (_super) {\r\n        __extends(Text2d, _super);\r\n        function Text2d(text, style, canvas) {\r\n            var _this = _super.call(this, text, style, canvas) || this;\r\n            _this.proj = new pixi_projection.Projection2d(_this.transform);\r\n            _this.pluginName = 'sprite2d';\r\n            _this.vertexData = new Float32Array(12);\r\n            return _this;\r\n        }\r\n        Object.defineProperty(Text2d.prototype, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj.affine ? this.transform.worldTransform : this.proj.world;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return Text2d;\r\n    }(PIXI.Text));\r\n    pixi_projection.Text2d = Text2d;\r\n    Text2d.prototype.calculateVertices = pixi_projection.Sprite2d.prototype.calculateVertices;\r\n    Text2d.prototype.calculateTrimmedVertices = pixi_projection.Sprite2d.prototype.calculateTrimmedVertices;\r\n    Text2d.prototype._calculateBounds = pixi_projection.Sprite2d.prototype._calculateBounds;\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var ProjectionsManager = (function () {\r\n        function ProjectionsManager(renderer) {\r\n            var _this = this;\r\n            this.onContextChange = function (gl) {\r\n                _this.gl = gl;\r\n                _this.renderer.maskManager.pushSpriteMask = pushSpriteMask;\r\n            };\r\n            this.renderer = renderer;\r\n            renderer.on('context', this.onContextChange);\r\n        }\r\n        ProjectionsManager.prototype.destroy = function () {\r\n            this.renderer.off('context', this.onContextChange);\r\n        };\r\n        return ProjectionsManager;\r\n    }());\r\n    pixi_projection.ProjectionsManager = ProjectionsManager;\r\n    function pushSpriteMask(target, maskData) {\r\n        var alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\r\n        if (!alphaMaskFilter) {\r\n            alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [new pixi_projection.SpriteMaskFilter2d(maskData)];\r\n        }\r\n        alphaMaskFilter[0].resolution = this.renderer.resolution;\r\n        alphaMaskFilter[0].maskSprite = maskData;\r\n        target.filterArea = maskData.getBounds(true);\r\n        this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\r\n        this.alphaMaskIndex++;\r\n    }\r\n    PIXI.WebGLRenderer.registerPlugin('projections', ProjectionsManager);\r\n})(pixi_projection || (pixi_projection = {}));\r\nvar pixi_projection;\r\n(function (pixi_projection) {\r\n    var spriteMaskVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\nuniform mat3 otherMatrix;\\n\\nvarying vec3 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n\\tgl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n\\n\\tvTextureCoord = aTextureCoord;\\n\\tvMaskCoord = otherMatrix * vec3( aTextureCoord, 1.0);\\n}\\n\";\r\n    var spriteMaskFrag = \"\\nvarying vec3 vMaskCoord;\\nvarying vec2 vTextureCoord;\\n\\nuniform sampler2D uSampler;\\nuniform float alpha;\\nuniform sampler2D mask;\\n\\nvoid main(void)\\n{\\n    vec2 uv = vMaskCoord.xy / vMaskCoord.z;\\n    \\n    vec2 text = abs( uv - 0.5 );\\n    text = step(0.5, text);\\n\\n    float clip = 1.0 - max(text.y, text.x);\\n    vec4 original = texture2D(uSampler, vTextureCoord);\\n    vec4 masky = texture2D(mask, uv);\\n\\n    original *= (masky.r * masky.a * alpha * clip);\\n\\n    gl_FragColor = original;\\n}\\n\";\r\n    var tempMat = new pixi_projection.Matrix2d();\r\n    var SpriteMaskFilter2d = (function (_super) {\r\n        __extends(SpriteMaskFilter2d, _super);\r\n        function SpriteMaskFilter2d(sprite) {\r\n            var _this = _super.call(this, spriteMaskVert, spriteMaskFrag) || this;\r\n            _this.maskMatrix = new pixi_projection.Matrix2d();\r\n            sprite.renderable = false;\r\n            _this.maskSprite = sprite;\r\n            return _this;\r\n        }\r\n        SpriteMaskFilter2d.prototype.apply = function (filterManager, input, output, clear, currentState) {\r\n            var maskSprite = this.maskSprite;\r\n            this.uniforms.mask = maskSprite.texture;\r\n            this.uniforms.otherMatrix = SpriteMaskFilter2d.calculateSpriteMatrix(currentState, this.maskMatrix, maskSprite);\r\n            this.uniforms.alpha = maskSprite.worldAlpha;\r\n            filterManager.applyFilter(this, input, output);\r\n        };\r\n        SpriteMaskFilter2d.calculateSpriteMatrix = function (currentState, mappedMatrix, sprite) {\r\n            var proj = sprite.proj;\r\n            var filterArea = currentState.sourceFrame;\r\n            var textureSize = currentState.renderTarget.size;\r\n            var worldTransform = proj && !proj._affine ? proj.world.copyTo(tempMat) : tempMat.copyFrom(sprite.transform.worldTransform);\r\n            var texture = sprite.texture.orig;\r\n            mappedMatrix.set(textureSize.width, 0, 0, textureSize.height, filterArea.x, filterArea.y);\r\n            worldTransform.invert();\r\n            mappedMatrix.setToMult2d(worldTransform, mappedMatrix);\r\n            mappedMatrix.scaleAndTranslate(1.0 / texture.width, 1.0 / texture.height, sprite.anchor.x, sprite.anchor.y);\r\n            return mappedMatrix;\r\n        };\r\n        return SpriteMaskFilter2d;\r\n    }(PIXI.Filter));\r\n    pixi_projection.SpriteMaskFilter2d = SpriteMaskFilter2d;\r\n})(pixi_projection || (pixi_projection = {}));\r\n//# sourceMappingURL=pixi-projection.js.map","/*!\n * pixi-sound - v2.0.0\n * https://github.com/pixijs/pixi-sound\n * Compiled Tue, 14 Nov 2017 17:53:47 UTC\n *\n * pixi-sound is licensed under the MIT license.\n * http://www.opensource.org/licenses/mit-license\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.__pixiSound=e.__pixiSound||{})}(this,function(e){\"use strict\";function t(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}if(\"undefined\"==typeof PIXI)throw\"PixiJS required\";var n=function(){function e(e,t){this._output=t,this._input=e}return Object.defineProperty(e.prototype,\"destination\",{get:function(){return this._input},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"filters\",{get:function(){return this._filters},set:function(e){var t=this;if(this._filters&&(this._filters.forEach(function(e){e&&e.disconnect()}),this._filters=null,this._input.connect(this._output)),e&&e.length){this._filters=e.slice(0),this._input.disconnect();var n=null;e.forEach(function(e){null===n?t._input.connect(e.destination):n.connect(e.destination),n=e}),n.connect(this._output)}},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){this.filters=null,this._input=null,this._output=null},e}(),o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},i=0,r=function(e){function n(t){var n=e.call(this)||this;return n.id=i++,n.init(t),n}return t(n,e),Object.defineProperty(n.prototype,\"progress\",{get:function(){return this._source.currentTime/this._duration},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"paused\",{get:function(){return this._paused},set:function(e){this._paused=e,this.refreshPaused()},enumerable:!0,configurable:!0}),n.prototype._onPlay=function(){this._playing=!0},n.prototype._onPause=function(){this._playing=!1},n.prototype.init=function(e){this._playing=!1,this._duration=e.source.duration;var t=this._source=e.source.cloneNode(!1);t.src=e.parent.url,t.onplay=this._onPlay.bind(this),t.onpause=this._onPause.bind(this),e.context.on(\"refresh\",this.refresh,this),e.context.on(\"refreshPaused\",this.refreshPaused,this),this._media=e},n.prototype._internalStop=function(){this._source&&this._playing&&(this._source.onended=null,this._source.pause())},n.prototype.stop=function(){this._internalStop(),this._source&&this.emit(\"stop\")},Object.defineProperty(n.prototype,\"speed\",{get:function(){return this._speed},set:function(e){this._speed=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"volume\",{get:function(){return this._volume},set:function(e){this._volume=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"loop\",{get:function(){return this._loop},set:function(e){this._loop=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"muted\",{get:function(){return this._muted},set:function(e){this._muted=e,this.refresh()},enumerable:!0,configurable:!0}),n.prototype.refresh=function(){var e=this._media.context,t=this._media.parent;this._source.loop=this._loop||t.loop;var n=e.volume*(e.muted?0:1),o=t.volume*(t.muted?0:1),i=this._volume*(this._muted?0:1);this._source.volume=i*n*o,this._source.playbackRate=this._speed*e.speed*t.speed},n.prototype.refreshPaused=function(){var e=this._media.context,t=this._media.parent,n=this._paused||t.paused||e.paused;n!==this._pausedReal&&(this._pausedReal=n,n?(this._internalStop(),this.emit(\"paused\")):(this.emit(\"resumed\"),this.play({start:this._source.currentTime,end:this._end,volume:this._volume,speed:this._speed,loop:this._loop})),this.emit(\"pause\",n))},n.prototype.play=function(e){var t=this,o=e.start,i=e.end,r=e.speed,s=e.loop,u=e.volume,a=e.muted;i&&console.assert(i>o,\"End time is before start time\"),this._speed=r,this._volume=u,this._loop=!!s,this._muted=a,this.refresh(),this.loop&&null!==i&&(console.warn('Looping not support when specifying an \"end\" time'),this.loop=!1),this._start=o,this._end=i||this._duration,this._start=Math.max(0,this._start-n.PADDING),this._end=Math.min(this._end+n.PADDING,this._duration),this._source.onloadedmetadata=function(){t._source&&(t._source.currentTime=o,t._source.onloadedmetadata=null,t.emit(\"progress\",o,t._duration),PIXI.ticker.shared.add(t._onUpdate,t))},this._source.onended=this._onComplete.bind(this),this._source.play(),this.emit(\"start\")},n.prototype._onUpdate=function(){this.emit(\"progress\",this.progress,this._duration),this._source.currentTime>=this._end&&!this._source.loop&&this._onComplete()},n.prototype._onComplete=function(){PIXI.ticker.shared.remove(this._onUpdate,this),this._internalStop(),this.emit(\"progress\",1,this._duration),this.emit(\"end\",this)},n.prototype.destroy=function(){PIXI.ticker.shared.remove(this._onUpdate,this),this.removeAllListeners();var e=this._source;e&&(e.onended=null,e.onplay=null,e.onpause=null,this._internalStop()),this._source=null,this._speed=1,this._volume=1,this._loop=!1,this._end=null,this._start=0,this._duration=0,this._playing=!1,this._pausedReal=!1,this._paused=!1,this._muted=!1,this._media&&(this._media.context.off(\"refresh\",this.refresh,this),this._media.context.off(\"refreshPaused\",this.refreshPaused,this),this._media=null)},n.prototype.toString=function(){return\"[HTMLAudioInstance id=\"+this.id+\"]\"},n.PADDING=.1,n}(PIXI.utils.EventEmitter),s=function(e){function n(){return null!==e&&e.apply(this,arguments)||this}return t(n,e),n.prototype.init=function(e){this.parent=e,this._source=e.options.source||new Audio,e.url&&(this._source.src=e.url)},n.prototype.create=function(){return new r(this)},Object.defineProperty(n.prototype,\"isPlayable\",{get:function(){return!!this._source&&4===this._source.readyState},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"duration\",{get:function(){return this._source.duration},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"context\",{get:function(){return this.parent.context},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"filters\",{get:function(){return null},set:function(e){console.warn(\"HTML Audio does not support filters\")},enumerable:!0,configurable:!0}),n.prototype.destroy=function(){this.removeAllListeners(),this.parent=null,this._source&&(this._source.src=\"\",this._source.load(),this._source=null)},Object.defineProperty(n.prototype,\"source\",{get:function(){return this._source},enumerable:!0,configurable:!0}),n.prototype.load=function(e){var t=this._source,n=this.parent;if(4===t.readyState){n.isLoaded=!0;var o=n.autoPlayStart();return void(e&&setTimeout(function(){e(null,n,o)},0))}if(!n.url)return e(new Error(\"sound.url or sound.source must be set\"));t.src=n.url;var i=function(){t.removeEventListener(\"canplaythrough\",r),t.removeEventListener(\"load\",r),t.removeEventListener(\"abort\",s),t.removeEventListener(\"error\",u)},r=function(){i(),n.isLoaded=!0;var t=n.autoPlayStart();e&&e(null,n,t)},s=function(){i(),e&&e(new Error(\"Sound loading has been aborted\"))},u=function(){i();var n=\"Failed to load audio element (code: \"+t.error.code+\")\";e?e(new Error(n)):console.error(n)};t.addEventListener(\"canplaythrough\",r,!1),t.addEventListener(\"load\",r,!1),t.addEventListener(\"abort\",s,!1),t.addEventListener(\"error\",u,!1),t.load()},n}(PIXI.utils.EventEmitter),u=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},a=function(e,t){return t={exports:{}},e(t,t.exports),t.exports}(function(e){!function(t){function n(){}function o(e,t){return function(){e.apply(t,arguments)}}function i(e){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof e)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],l(e,this)}function r(e,t){for(;3===e._state;)e=e._value;if(0===e._state)return void e._deferreds.push(t);e._handled=!0,i._immediateFn(function(){var n=1===e._state?t.onFulfilled:t.onRejected;if(null===n)return void(1===e._state?s:u)(t.promise,e._value);var o;try{o=n(e._value)}catch(e){return void u(t.promise,e)}s(t.promise,o)})}function s(e,t){try{if(t===e)throw new TypeError(\"A promise cannot be resolved with itself.\");if(t&&(\"object\"==typeof t||\"function\"==typeof t)){var n=t.then;if(t instanceof i)return e._state=3,e._value=t,void a(e);if(\"function\"==typeof n)return void l(o(n,t),e)}e._state=1,e._value=t,a(e)}catch(t){u(e,t)}}function u(e,t){e._state=2,e._value=t,a(e)}function a(e){2===e._state&&0===e._deferreds.length&&i._immediateFn(function(){e._handled||i._unhandledRejectionFn(e._value)});for(var t=0,n=e._deferreds.length;t<n;t++)r(e,e._deferreds[t]);e._deferreds=null}function c(e,t,n){this.onFulfilled=\"function\"==typeof e?e:null,this.onRejected=\"function\"==typeof t?t:null,this.promise=n}function l(e,t){var n=!1;try{e(function(e){n||(n=!0,s(t,e))},function(e){n||(n=!0,u(t,e))})}catch(e){if(n)return;n=!0,u(t,e)}}var p=setTimeout;i.prototype.catch=function(e){return this.then(null,e)},i.prototype.then=function(e,t){var o=new this.constructor(n);return r(this,new c(e,t,o)),o},i.all=function(e){var t=Array.prototype.slice.call(e);return new i(function(e,n){function o(r,s){try{if(s&&(\"object\"==typeof s||\"function\"==typeof s)){var u=s.then;if(\"function\"==typeof u)return void u.call(s,function(e){o(r,e)},n)}t[r]=s,0==--i&&e(t)}catch(e){n(e)}}if(0===t.length)return e([]);for(var i=t.length,r=0;r<t.length;r++)o(r,t[r])})},i.resolve=function(e){return e&&\"object\"==typeof e&&e.constructor===i?e:new i(function(t){t(e)})},i.reject=function(e){return new i(function(t,n){n(e)})},i.race=function(e){return new i(function(t,n){for(var o=0,i=e.length;o<i;o++)e[o].then(t,n)})},i._immediateFn=\"function\"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){p(e,0)},i._unhandledRejectionFn=function(e){\"undefined\"!=typeof console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",e)},i._setImmediateFn=function(e){i._immediateFn=e},i._setUnhandledRejectionFn=function(e){i._unhandledRejectionFn=e},e.exports?e.exports=i:t.Promise||(t.Promise=i)}(u)}),c=function(){function e(e,t){this.destination=e,this.source=t||e}return e.prototype.connect=function(e){this.source.connect(e)},e.prototype.disconnect=function(){this.source.disconnect()},e.prototype.destroy=function(){this.disconnect(),this.destination=null,this.source=null},e}(),l=function(){function e(){}return e.setParamValue=function(e,t){if(e.setValueAtTime){var n=S.instance.context;e.setValueAtTime(t,n.audioContext.currentTime)}else e.value=t;return t},e}(),p=function(e){function n(t,o,i,r,s,u,a,c,p,h){void 0===t&&(t=0),void 0===o&&(o=0),void 0===i&&(i=0),void 0===r&&(r=0),void 0===s&&(s=0),void 0===u&&(u=0),void 0===a&&(a=0),void 0===c&&(c=0),void 0===p&&(p=0),void 0===h&&(h=0);var d=this;if(S.instance.useLegacy)return void(d=e.call(this,null)||this);var f=[{f:n.F32,type:\"lowshelf\",gain:t},{f:n.F64,type:\"peaking\",gain:o},{f:n.F125,type:\"peaking\",gain:i},{f:n.F250,type:\"peaking\",gain:r},{f:n.F500,type:\"peaking\",gain:s},{f:n.F1K,type:\"peaking\",gain:u},{f:n.F2K,type:\"peaking\",gain:a},{f:n.F4K,type:\"peaking\",gain:c},{f:n.F8K,type:\"peaking\",gain:p},{f:n.F16K,type:\"highshelf\",gain:h}].map(function(e){var t=S.instance.context.audioContext.createBiquadFilter();return t.type=e.type,l.setParamValue(t.gain,e.gain),l.setParamValue(t.Q,1),l.setParamValue(t.frequency,e.f),t});(d=e.call(this,f[0],f[f.length-1])||this).bands=f,d.bandsMap={};for(var _=0;_<d.bands.length;_++){var y=d.bands[_];_>0&&d.bands[_-1].connect(y),d.bandsMap[y.frequency.value]=y}return d}return t(n,e),n.prototype.setGain=function(e,t){if(void 0===t&&(t=0),!this.bandsMap[e])throw\"No band found for frequency \"+e;l.setParamValue(this.bandsMap[e].gain,t)},n.prototype.getGain=function(e){if(!this.bandsMap[e])throw\"No band found for frequency \"+e;return this.bandsMap[e].gain.value},Object.defineProperty(n.prototype,\"f32\",{get:function(){return this.getGain(n.F32)},set:function(e){this.setGain(n.F32,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f64\",{get:function(){return this.getGain(n.F64)},set:function(e){this.setGain(n.F64,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f125\",{get:function(){return this.getGain(n.F125)},set:function(e){this.setGain(n.F125,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f250\",{get:function(){return this.getGain(n.F250)},set:function(e){this.setGain(n.F250,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f500\",{get:function(){return this.getGain(n.F500)},set:function(e){this.setGain(n.F500,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f1k\",{get:function(){return this.getGain(n.F1K)},set:function(e){this.setGain(n.F1K,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f2k\",{get:function(){return this.getGain(n.F2K)},set:function(e){this.setGain(n.F2K,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f4k\",{get:function(){return this.getGain(n.F4K)},set:function(e){this.setGain(n.F4K,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f8k\",{get:function(){return this.getGain(n.F8K)},set:function(e){this.setGain(n.F8K,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"f16k\",{get:function(){return this.getGain(n.F16K)},set:function(e){this.setGain(n.F16K,e)},enumerable:!0,configurable:!0}),n.prototype.reset=function(){this.bands.forEach(function(e){l.setParamValue(e.gain,0)})},n.prototype.destroy=function(){this.bands.forEach(function(e){e.disconnect()}),this.bands=null,this.bandsMap=null},n.F32=32,n.F64=64,n.F125=125,n.F250=250,n.F500=500,n.F1K=1e3,n.F2K=2e3,n.F4K=4e3,n.F8K=8e3,n.F16K=16e3,n}(c),h=function(e){function n(t){void 0===t&&(t=0);var n=this;if(S.instance.useLegacy)return void(n=e.call(this,null)||this);var o=S.instance.context.audioContext.createWaveShaper();return n=e.call(this,o)||this,n._distortion=o,n.amount=t,n}return t(n,e),Object.defineProperty(n.prototype,\"amount\",{get:function(){return this._amount},set:function(e){e*=1e3,this._amount=e;for(var t,n=new Float32Array(44100),o=Math.PI/180,i=0;i<44100;++i)t=2*i/44100-1,n[i]=(3+e)*t*20*o/(Math.PI+e*Math.abs(t));this._distortion.curve=n,this._distortion.oversample=\"4x\"},enumerable:!0,configurable:!0}),n.prototype.destroy=function(){this._distortion=null,e.prototype.destroy.call(this)},n}(c),d=function(e){function n(t){void 0===t&&(t=0);var n=this;if(S.instance.useLegacy)return void(n=e.call(this,null)||this);var o,i,r,s=S.instance.context.audioContext;return s.createStereoPanner?r=o=s.createStereoPanner():((i=s.createPanner()).panningModel=\"equalpower\",r=i),n=e.call(this,r)||this,n._stereo=o,n._panner=i,n.pan=t,n}return t(n,e),Object.defineProperty(n.prototype,\"pan\",{get:function(){return this._pan},set:function(e){this._pan=e,this._stereo?l.setParamValue(this._stereo.pan,e):this._panner.setPosition(e,0,1-Math.abs(e))},enumerable:!0,configurable:!0}),n.prototype.destroy=function(){e.prototype.destroy.call(this),this._stereo=null,this._panner=null},n}(c),f=function(e){function n(t,n,o){void 0===t&&(t=3),void 0===n&&(n=2),void 0===o&&(o=!1);var i=this;if(S.instance.useLegacy)return void(i=e.call(this,null)||this);var r=S.instance.context.audioContext.createConvolver();return i=e.call(this,r)||this,i._convolver=r,i._seconds=i._clamp(t,1,50),i._decay=i._clamp(n,0,100),i._reverse=o,i._rebuild(),i}return t(n,e),n.prototype._clamp=function(e,t,n){return Math.min(n,Math.max(t,e))},Object.defineProperty(n.prototype,\"seconds\",{get:function(){return this._seconds},set:function(e){this._seconds=this._clamp(e,1,50),this._rebuild()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"decay\",{get:function(){return this._decay},set:function(e){this._decay=this._clamp(e,0,100),this._rebuild()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"reverse\",{get:function(){return this._reverse},set:function(e){this._reverse=e,this._rebuild()},enumerable:!0,configurable:!0}),n.prototype._rebuild=function(){for(var e,t=S.instance.context.audioContext,n=t.sampleRate,o=n*this._seconds,i=t.createBuffer(2,o,n),r=i.getChannelData(0),s=i.getChannelData(1),u=0;u<o;u++)e=this._reverse?o-u:u,r[u]=(2*Math.random()-1)*Math.pow(1-e/o,this._decay),s[u]=(2*Math.random()-1)*Math.pow(1-e/o,this._decay);this._convolver.buffer=i},n.prototype.destroy=function(){this._convolver=null,e.prototype.destroy.call(this)},n}(c),_=function(e){function n(){var t=this;S.instance.useLegacy&&(t=e.call(this,null)||this);var n=S.instance.context.audioContext,o=n.createChannelSplitter(),i=n.createChannelMerger();return i.connect(o),t=e.call(this,i,o)||this,t._merger=i,t}return t(n,e),n.prototype.destroy=function(){this._merger.disconnect(),this._merger=null,e.prototype.destroy.call(this)},n}(c),y=function(e){function n(){if(S.instance.useLegacy)return void(e.call(this,null)||this);var t=S.instance.context.audioContext,n=t.createBiquadFilter(),o=t.createBiquadFilter(),i=t.createBiquadFilter(),r=t.createBiquadFilter();return n.type=\"lowpass\",l.setParamValue(n.frequency,2e3),o.type=\"lowpass\",l.setParamValue(o.frequency,2e3),i.type=\"highpass\",l.setParamValue(i.frequency,500),r.type=\"highpass\",l.setParamValue(r.frequency,500),n.connect(o),o.connect(i),i.connect(r),e.call(this,n,r)||this}return t(n,e),n}(c),m=Object.freeze({Filter:c,EqualizerFilter:p,DistortionFilter:h,StereoFilter:d,ReverbFilter:f,MonoFilter:_,TelephoneFilter:y}),b=function(e){function n(){var t=e.call(this)||this;return t.speed=1,t.volume=1,t.muted=!1,t.paused=!1,t}return t(n,e),n.prototype.refresh=function(){this.emit(\"refresh\")},n.prototype.refreshPaused=function(){this.emit(\"refreshPaused\")},Object.defineProperty(n.prototype,\"filters\",{get:function(){return console.warn(\"HTML Audio does not support filters\"),null},set:function(e){console.warn(\"HTML Audio does not support filters\")},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"audioContext\",{get:function(){return console.warn(\"HTML Audio does not support audioContext\"),null},enumerable:!0,configurable:!0}),n.prototype.toggleMute=function(){return this.muted=!this.muted,this.refresh(),this.muted},n.prototype.togglePause=function(){return this.paused=!this.paused,this.refreshPaused(),this.paused},n.prototype.destroy=function(){this.removeAllListeners()},n}(PIXI.utils.EventEmitter),g=Object.freeze({HTMLAudioMedia:s,HTMLAudioInstance:r,HTMLAudioContext:b}),v=0,P=function(e){function n(t){var n=e.call(this)||this;return n.id=v++,n._media=null,n._paused=!1,n._muted=!1,n._elapsed=0,n._updateListener=n._update.bind(n),n.init(t),n}return t(n,e),n.prototype.stop=function(){this._source&&(this._internalStop(),this.emit(\"stop\"))},Object.defineProperty(n.prototype,\"speed\",{get:function(){return this._speed},set:function(e){this._speed=e,this.refresh(),this._update(!0)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"volume\",{get:function(){return this._volume},set:function(e){this._volume=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"muted\",{get:function(){return this._muted},set:function(e){this._muted=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"loop\",{get:function(){return this._loop},set:function(e){this._loop=e,this.refresh()},enumerable:!0,configurable:!0}),n.prototype.refresh=function(){var e=this._media.context,t=this._media.parent;this._source.loop=this._loop||t.loop;var n=e.volume*(e.muted?0:1),o=t.volume*(t.muted?0:1),i=this._volume*(this._muted?0:1);l.setParamValue(this._gain.gain,i*o*n),l.setParamValue(this._source.playbackRate,this._speed*t.speed*e.speed)},n.prototype.refreshPaused=function(){var e=this._media.context,t=this._media.parent,n=this._paused||t.paused||e.paused;n!==this._pausedReal&&(this._pausedReal=n,n?(this._internalStop(),this.emit(\"paused\")):(this.emit(\"resumed\"),this.play({start:this._elapsed%this._duration,end:this._end,speed:this._speed,loop:this._loop,volume:this._volume})),this.emit(\"pause\",n))},n.prototype.play=function(e){var t=e.start,n=e.end,o=e.speed,i=e.loop,r=e.volume,s=e.muted;n&&console.assert(n>t,\"End time is before start time\"),this._paused=!1;var u=this._media.nodes.cloneBufferSource(),a=u.source,c=u.gain;this._source=a,this._gain=c,this._speed=o,this._volume=r,this._loop=!!i,this._muted=s,this.refresh(),this.loop&&null!==n&&(console.warn('Looping not support when specifying an \"end\" time'),this.loop=!1),this._end=n;var l=this._source.buffer.duration;this._duration=l,this._lastUpdate=this._now(),this._elapsed=t,this._source.onended=this._onComplete.bind(this),n?this._source.start(0,t,n-t):this._source.start(0,t),this.emit(\"start\"),this._update(!0),this._enabled=!0},n.prototype._toSec=function(e){return e>10&&(e/=1e3),e||0},Object.defineProperty(n.prototype,\"_enabled\",{set:function(e){var t=this._media.nodes.script;t.removeEventListener(\"audioprocess\",this._updateListener),e&&t.addEventListener(\"audioprocess\",this._updateListener)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"progress\",{get:function(){return this._progress},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"paused\",{get:function(){return this._paused},set:function(e){this._paused=e,this.refreshPaused()},enumerable:!0,configurable:!0}),n.prototype.destroy=function(){this.removeAllListeners(),this._internalStop(),this._source&&(this._source.disconnect(),this._source=null),this._gain&&(this._gain.disconnect(),this._gain=null),this._media&&(this._media.context.events.off(\"refresh\",this.refresh,this),this._media.context.events.off(\"refreshPaused\",this.refreshPaused,this),this._media=null),this._end=null,this._speed=1,this._volume=1,this._loop=!1,this._elapsed=0,this._duration=0,this._paused=!1,this._muted=!1,this._pausedReal=!1},n.prototype.toString=function(){return\"[WebAudioInstance id=\"+this.id+\"]\"},n.prototype._now=function(){return this._media.context.audioContext.currentTime},n.prototype._update=function(e){if(void 0===e&&(e=!1),this._source){var t=this._now(),n=t-this._lastUpdate;if(n>0||e){var o=this._source.playbackRate.value;this._elapsed+=n*o,this._lastUpdate=t;var i=this._duration,r=this._elapsed%i/i;this._progress=r,this.emit(\"progress\",this._progress,i)}}},n.prototype.init=function(e){this._media=e,e.context.events.on(\"refresh\",this.refresh,this),e.context.events.on(\"refreshPaused\",this.refreshPaused,this)},n.prototype._internalStop=function(){this._source&&(this._enabled=!1,this._source.onended=null,this._source.stop(),this._source=null)},n.prototype._onComplete=function(){this._source&&(this._enabled=!1,this._source.onended=null),this._source=null,this._progress=1,this.emit(\"progress\",1,this._duration),this.emit(\"end\",this)},n}(PIXI.utils.EventEmitter),x=function(e){function n(t){var o=this,i=t.audioContext,r=i.createBufferSource(),s=i.createScriptProcessor(n.BUFFER_SIZE),u=i.createGain(),a=i.createAnalyser();return r.connect(a),a.connect(u),u.connect(t.destination),s.connect(t.destination),o=e.call(this,a,u)||this,o.context=t,o.bufferSource=r,o.script=s,o.gain=u,o.analyser=a,o}return t(n,e),n.prototype.destroy=function(){e.prototype.destroy.call(this),this.bufferSource.disconnect(),this.script.disconnect(),this.gain.disconnect(),this.analyser.disconnect(),this.bufferSource=null,this.script=null,this.gain=null,this.analyser=null,this.context=null},n.prototype.cloneBufferSource=function(){var e=this.bufferSource,t=this.context.audioContext.createBufferSource();t.buffer=e.buffer,l.setParamValue(t.playbackRate,e.playbackRate.value),t.loop=e.loop;var n=this.context.audioContext.createGain();return t.connect(n),n.connect(this.destination),{source:t,gain:n}},n.BUFFER_SIZE=256,n}(n),O=function(){function e(){}return e.prototype.init=function(e){this.parent=e,this._nodes=new x(this.context),this._source=this._nodes.bufferSource,this.source=e.options.source},e.prototype.destroy=function(){this.parent=null,this._nodes.destroy(),this._nodes=null,this._source=null,this.source=null},e.prototype.create=function(){return new P(this)},Object.defineProperty(e.prototype,\"context\",{get:function(){return this.parent.context},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"isPlayable\",{get:function(){return!!this._source&&!!this._source.buffer},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"filters\",{get:function(){return this._nodes.filters},set:function(e){this._nodes.filters=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"duration\",{get:function(){return console.assert(this.isPlayable,\"Sound not yet playable, no duration\"),this._source.buffer.duration},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"buffer\",{get:function(){return this._source.buffer},set:function(e){this._source.buffer=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"nodes\",{get:function(){return this._nodes},enumerable:!0,configurable:!0}),e.prototype.load=function(e){this.source?this._decode(this.source,e):this.parent.url?this._loadUrl(e):e?e(new Error(\"sound.url or sound.source must be set\")):console.error(\"sound.url or sound.source must be set\")},e.prototype._loadUrl=function(e){var t=this,n=new XMLHttpRequest,o=this.parent.url;n.open(\"GET\",o,!0),n.responseType=\"arraybuffer\",n.onload=function(){t.source=n.response,t._decode(n.response,e)},n.send()},e.prototype._decode=function(e,t){var n=this;this.parent.context.decode(e,function(e,o){if(e)t&&t(e);else{n.parent.isLoaded=!0,n.buffer=o;var i=n.parent.autoPlayStart();t&&t(null,n.parent,i)}})},e}(),w=function(){function e(){}return e.resolveUrl=function(t){var n=e.FORMAT_PATTERN,o=\"string\"==typeof t?t:t.url;if(n.test(o)){for(var i=n.exec(o),r=i[2].split(\",\"),s=r[r.length-1],u=0,a=r.length;u<a;u++){var c=r[u];if(e.supported[c]){s=c;break}}var l=o.replace(i[1],s);return\"string\"!=typeof t&&(t.extension=s,t.url=l),l}return o},e.sineTone=function(e,t){void 0===e&&(e=200),void 0===t&&(t=1);var n=I.from({singleInstance:!0});if(!(n.media instanceof O))return n;for(var o=n.media,i=n.context.audioContext.createBuffer(1,48e3*t,48e3),r=i.getChannelData(0),s=0;s<r.length;s++){var u=e*(s/i.sampleRate)*Math.PI;r[s]=2*Math.sin(u)}return o.buffer=i,n.isLoaded=!0,n},e.render=function(e,t){var n=document.createElement(\"canvas\");t=Object.assign({width:512,height:128,fill:\"black\"},t||{}),n.width=t.width,n.height=t.height;var o=PIXI.BaseTexture.fromCanvas(n);if(!(e.media instanceof O))return o;var i=e.media;console.assert(!!i.buffer,\"No buffer found, load first\");var r=n.getContext(\"2d\");r.fillStyle=t.fill;for(var s=i.buffer.getChannelData(0),u=Math.ceil(s.length/t.width),a=t.height/2,c=0;c<t.width;c++){for(var l=1,p=-1,h=0;h<u;h++){var d=s[c*u+h];d<l&&(l=d),d>p&&(p=d)}r.fillRect(c,(1+l)*a,1,Math.max(1,(p-l)*a))}return o},e.playOnce=function(t,n){var o=\"alias\"+e.PLAY_ID++;return S.instance.add(o,{url:t,preload:!0,autoPlay:!0,loaded:function(e){e&&(console.error(e),S.instance.remove(o),n&&n(e))},complete:function(){S.instance.remove(o),n&&n(null)}}),o},e.PLAY_ID=0,e.FORMAT_PATTERN=/\\.(\\{([^\\}]+)\\})(\\?.*)?$/,e.extensions=[\"mp3\",\"ogg\",\"oga\",\"opus\",\"mpeg\",\"wav\",\"m4a\",\"mp4\",\"aiff\",\"wma\",\"mid\"],e.supported=function(){var t={m4a:\"mp4\",oga:\"ogg\"},n=document.createElement(\"audio\"),o={};return e.extensions.forEach(function(e){var i=t[e]||e,r=n.canPlayType(\"audio/\"+e).replace(/^no$/,\"\"),s=n.canPlayType(\"audio/\"+i).replace(/^no$/,\"\");o[e]=!!r||!!s}),Object.freeze(o)}(),e}(),j=function(e){function n(t,n){var o=e.call(this,t,n)||this;return o.use(A.plugin),o.pre(A.resolve),o}return t(n,e),n.addPixiMiddleware=function(t){e.addPixiMiddleware.call(this,t)},n}(PIXI.loaders.Loader),A=function(){function e(){}return e.install=function(t){e._sound=t,e.legacy=t.useLegacy,PIXI.loaders.Loader=j,PIXI.loader.use(e.plugin),PIXI.loader.pre(e.resolve)},Object.defineProperty(e,\"legacy\",{set:function(e){var t=PIXI.loaders.Resource,n=w.extensions;e?n.forEach(function(e){t.setExtensionXhrType(e,t.XHR_RESPONSE_TYPE.DEFAULT),t.setExtensionLoadType(e,t.LOAD_TYPE.AUDIO)}):n.forEach(function(e){t.setExtensionXhrType(e,t.XHR_RESPONSE_TYPE.BUFFER),t.setExtensionLoadType(e,t.LOAD_TYPE.XHR)})},enumerable:!0,configurable:!0}),e.resolve=function(e,t){w.resolveUrl(e),t()},e.plugin=function(t,n){t.data&&w.extensions.indexOf(t.extension)>-1?t.sound=e._sound.add(t.name,{loaded:n,preload:!0,url:t.url,source:t.data}):n()},e}(),F=function(){function e(e,t){this.parent=e,Object.assign(this,t),this.duration=this.end-this.start,console.assert(this.duration>0,\"End time must be after start time\")}return e.prototype.play=function(e){return this.parent.play(Object.assign({complete:e,speed:this.speed||this.parent.speed,end:this.end,start:this.start}))},e.prototype.destroy=function(){this.parent=null},e}(),E=function(e){function n(){var t=this,o=new n.AudioContext,i=o.createDynamicsCompressor(),r=o.createAnalyser();return r.connect(i),i.connect(o.destination),t=e.call(this,r,i)||this,t._ctx=o,t._offlineCtx=new n.OfflineAudioContext(1,2,o.sampleRate),t._unlocked=!1,t.compressor=i,t.analyser=r,t.events=new PIXI.utils.EventEmitter,t.volume=1,t.speed=1,t.muted=!1,t.paused=!1,\"ontouchstart\"in window&&\"running\"!==o.state&&(t._unlock(),t._unlock=t._unlock.bind(t),document.addEventListener(\"mousedown\",t._unlock,!0),document.addEventListener(\"touchstart\",t._unlock,!0),document.addEventListener(\"touchend\",t._unlock,!0)),t}return t(n,e),n.prototype._unlock=function(){this._unlocked||(this.playEmptySound(),\"running\"===this._ctx.state&&(document.removeEventListener(\"mousedown\",this._unlock,!0),document.removeEventListener(\"touchend\",this._unlock,!0),document.removeEventListener(\"touchstart\",this._unlock,!0),this._unlocked=!0))},n.prototype.playEmptySound=function(){var e=this._ctx.createBufferSource();e.buffer=this._ctx.createBuffer(1,1,22050),e.connect(this._ctx.destination),e.start(0,0,0)},Object.defineProperty(n,\"AudioContext\",{get:function(){var e=window;return e.AudioContext||e.webkitAudioContext||null},enumerable:!0,configurable:!0}),Object.defineProperty(n,\"OfflineAudioContext\",{get:function(){var e=window;return e.OfflineAudioContext||e.webkitOfflineAudioContext||null},enumerable:!0,configurable:!0}),n.prototype.destroy=function(){e.prototype.destroy.call(this);var t=this._ctx;void 0!==t.close&&t.close(),this.events.removeAllListeners(),this.analyser.disconnect(),this.compressor.disconnect(),this.analyser=null,this.compressor=null,this.events=null,this._offlineCtx=null,this._ctx=null},Object.defineProperty(n.prototype,\"audioContext\",{get:function(){return this._ctx},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"offlineContext\",{get:function(){return this._offlineCtx},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,\"paused\",{get:function(){return this._paused},set:function(e){e&&\"running\"===this._ctx.state?this._ctx.suspend():e||\"suspended\"!==this._ctx.state||this._ctx.resume(),this._paused=e},enumerable:!0,configurable:!0}),n.prototype.refresh=function(){this.events.emit(\"refresh\")},n.prototype.refreshPaused=function(){this.events.emit(\"refreshPaused\")},n.prototype.toggleMute=function(){return this.muted=!this.muted,this.refresh(),this.muted},n.prototype.togglePause=function(){return this.paused=!this.paused,this.refreshPaused(),this._paused},n.prototype.decode=function(e,t){this._offlineCtx.decodeAudioData(e,function(e){t(null,e)},function(){t(new Error(\"Unable to decode file\"))})},n}(n),L=Object.freeze({WebAudioMedia:O,WebAudioInstance:P,WebAudioNodes:x,WebAudioContext:E,WebAudioUtils:l}),S=function(){function e(){this.init()}return e.prototype.init=function(){return this.supported&&(this._webAudioContext=new E),this._htmlAudioContext=new b,this._sounds={},this.useLegacy=!this.supported,this},Object.defineProperty(e.prototype,\"context\",{get:function(){return this._context},enumerable:!0,configurable:!0}),e.init=function(){if(e.instance)throw new Error(\"SoundLibrary is already created\");var t=e.instance=new e;\"undefined\"==typeof Promise&&(window.Promise=a),void 0!==PIXI.loaders&&A.install(t),void 0===window.__pixiSound&&delete window.__pixiSound;var o=PIXI;return o.sound||(Object.defineProperty(o,\"sound\",{get:function(){return t}}),Object.defineProperties(t,{filters:{get:function(){return m}},htmlaudio:{get:function(){return g}},webaudio:{get:function(){return L}},utils:{get:function(){return w}},Sound:{get:function(){return I}},SoundSprite:{get:function(){return F}},Filterable:{get:function(){return n}},SoundLibrary:{get:function(){return e}}})),t},Object.defineProperty(e.prototype,\"filtersAll\",{get:function(){return this.useLegacy?[]:this._context.filters},set:function(e){this.useLegacy||(this._context.filters=e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"supported\",{get:function(){return null!==E.AudioContext},enumerable:!0,configurable:!0}),e.prototype.add=function(e,t){if(\"object\"==typeof e){var n={};for(var o in e){i=this._getOptions(e[o],t);n[o]=this.add(o,i)}return n}if(\"string\"==typeof e){if(console.assert(!this._sounds[e],\"Sound with alias \"+e+\" already exists.\"),t instanceof I)return this._sounds[e]=t,t;var i=this._getOptions(t),r=I.from(i);return this._sounds[e]=r,r}},e.prototype._getOptions=function(e,t){var n;return n=\"string\"==typeof e?{url:e}:e instanceof ArrayBuffer||e instanceof HTMLAudioElement?{source:e}:e,Object.assign(n,t||{})},Object.defineProperty(e.prototype,\"useLegacy\",{get:function(){return this._useLegacy},set:function(e){A.legacy=e,this._useLegacy=e,!e&&this.supported?this._context=this._webAudioContext:this._context=this._htmlAudioContext},enumerable:!0,configurable:!0}),e.prototype.remove=function(e){return this.exists(e,!0),this._sounds[e].destroy(),delete this._sounds[e],this},Object.defineProperty(e.prototype,\"volumeAll\",{get:function(){return this._context.volume},set:function(e){this._context.volume=e,this._context.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"speedAll\",{get:function(){return this._context.speed},set:function(e){this._context.speed=e,this._context.refresh()},enumerable:!0,configurable:!0}),e.prototype.togglePauseAll=function(){return this._context.togglePause()},e.prototype.pauseAll=function(){return this._context.paused=!0,this._context.refresh(),this},e.prototype.resumeAll=function(){return this._context.paused=!1,this._context.refresh(),this},e.prototype.toggleMuteAll=function(){return this._context.toggleMute()},e.prototype.muteAll=function(){return this._context.muted=!0,this._context.refresh(),this},e.prototype.unmuteAll=function(){return this._context.muted=!1,this._context.refresh(),this},e.prototype.removeAll=function(){for(var e in this._sounds)this._sounds[e].destroy(),delete this._sounds[e];return this},e.prototype.stopAll=function(){for(var e in this._sounds)this._sounds[e].stop();return this},e.prototype.exists=function(e,t){void 0===t&&(t=!1);var n=!!this._sounds[e];return t&&console.assert(n,\"No sound matching alias '\"+e+\"'.\"),n},e.prototype.find=function(e){return this.exists(e,!0),this._sounds[e]},e.prototype.play=function(e,t){return this.find(e).play(t)},e.prototype.stop=function(e){return this.find(e).stop()},e.prototype.pause=function(e){return this.find(e).pause()},e.prototype.resume=function(e){return this.find(e).resume()},e.prototype.volume=function(e,t){var n=this.find(e);return void 0!==t&&(n.volume=t),n.volume},e.prototype.speed=function(e,t){var n=this.find(e);return void 0!==t&&(n.speed=t),n.speed},e.prototype.duration=function(e){return this.find(e).duration},e.prototype.close=function(){return this.removeAll(),this._sounds=null,this._webAudioContext&&(this._webAudioContext.destroy(),this._webAudioContext=null),this._htmlAudioContext&&(this._htmlAudioContext.destroy(),this._htmlAudioContext=null),this._context=null,this},e}(),I=function(){function e(e,t){this.media=e,this.options=t,this._instances=[],this._sprites={},this.media.init(this);var n=t.complete;this._autoPlayOptions=n?{complete:n}:null,this.isLoaded=!1,this.isPlaying=!1,this.autoPlay=t.autoPlay,this.singleInstance=t.singleInstance,this.preload=t.preload||this.autoPlay,this.url=t.url,this.speed=t.speed,this.volume=t.volume,this.loop=t.loop,t.sprites&&this.addSprites(t.sprites),this.preload&&this._preload(t.loaded)}return e.from=function(t){var n={};return\"string\"==typeof t?n.url=t:t instanceof ArrayBuffer||t instanceof HTMLAudioElement?n.source=t:n=t,(n=Object.assign({autoPlay:!1,singleInstance:!1,url:null,source:null,preload:!1,volume:1,speed:1,complete:null,loaded:null,loop:!1},n)).url&&(n.url=w.resolveUrl(n.url)),Object.freeze(n),new e(S.instance.useLegacy?new s:new O,n)},Object.defineProperty(e.prototype,\"context\",{get:function(){return S.instance.context},enumerable:!0,configurable:!0}),e.prototype.pause=function(){return this.isPlaying=!1,this.paused=!0,this},e.prototype.resume=function(){return this.isPlaying=this._instances.length>0,this.paused=!1,this},Object.defineProperty(e.prototype,\"paused\",{get:function(){return this._paused},set:function(e){this._paused=e,this.refreshPaused()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"speed\",{get:function(){return this._speed},set:function(e){this._speed=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"filters\",{get:function(){return this.media.filters},set:function(e){this.media.filters=e},enumerable:!0,configurable:!0}),e.prototype.addSprites=function(e,t){if(\"object\"==typeof e){var n={};for(var o in e)n[o]=this.addSprites(o,e[o]);return n}if(\"string\"==typeof e){console.assert(!this._sprites[e],\"Alias \"+e+\" is already taken\");var i=new F(this,t);return this._sprites[e]=i,i}},e.prototype.destroy=function(){this._removeInstances(),this.removeSprites(),this.media.destroy(),this.media=null,this._sprites=null,this._instances=null},e.prototype.removeSprites=function(e){if(e){var t=this._sprites[e];void 0!==t&&(t.destroy(),delete this._sprites[e])}else for(var n in this._sprites)this.removeSprites(n);return this},Object.defineProperty(e.prototype,\"isPlayable\",{get:function(){return this.isLoaded&&this.media&&this.media.isPlayable},enumerable:!0,configurable:!0}),e.prototype.stop=function(){if(!this.isPlayable)return this.autoPlay=!1,this._autoPlayOptions=null,this;this.isPlaying=!1;for(var e=this._instances.length-1;e>=0;e--)this._instances[e].stop();return this},e.prototype.play=function(e,t){var n,o=this;if(\"string\"==typeof e?n={sprite:r=e,complete:t}:\"function\"==typeof e?(n={}).complete=e:n=e,(n=Object.assign({complete:null,loaded:null,sprite:null,end:null,start:0,volume:1,speed:1,muted:!1,loop:!1},n||{})).sprite){var i=n.sprite;console.assert(!!this._sprites[i],\"Alias \"+i+\" is not available\");var r=this._sprites[i];n.start=r.start,n.end=r.end,n.speed=r.speed||1,delete n.sprite}if(n.offset&&(n.start=n.offset),!this.isLoaded)return new Promise(function(e,t){o.autoPlay=!0,o._autoPlayOptions=n,o._preload(function(o,i,r){o?t(o):(n.loaded&&n.loaded(o,i,r),e(r))})});this.singleInstance&&this._removeInstances();var s=this._createInstance();return this._instances.push(s),this.isPlaying=!0,s.once(\"end\",function(){n.complete&&n.complete(o),o._onComplete(s)}),s.once(\"stop\",function(){o._onComplete(s)}),s.play(n),s},e.prototype.refresh=function(){for(var e=this._instances.length,t=0;t<e;t++)this._instances[t].refresh()},e.prototype.refreshPaused=function(){for(var e=this._instances.length,t=0;t<e;t++)this._instances[t].refreshPaused()},Object.defineProperty(e.prototype,\"volume\",{get:function(){return this._volume},set:function(e){this._volume=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"muted\",{get:function(){return this._muted},set:function(e){this._muted=e,this.refresh()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"loop\",{get:function(){return this._loop},set:function(e){this._loop=e,this.refresh()},enumerable:!0,configurable:!0}),e.prototype._preload=function(e){this.media.load(e)},Object.defineProperty(e.prototype,\"instances\",{get:function(){return this._instances},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"sprites\",{get:function(){return this._sprites},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\"duration\",{get:function(){return this.media.duration},enumerable:!0,configurable:!0}),e.prototype.autoPlayStart=function(){var e;return this.autoPlay&&(e=this.play(this._autoPlayOptions)),e},e.prototype._removeInstances=function(){for(var e=this._instances.length-1;e>=0;e--)this._poolInstance(this._instances[e]);this._instances.length=0},e.prototype._onComplete=function(e){if(this._instances){var t=this._instances.indexOf(e);t>-1&&this._instances.splice(t,1),this.isPlaying=this._instances.length>0}this._poolInstance(e)},e.prototype._createInstance=function(){if(e._pool.length>0){var t=e._pool.pop();return t.init(this.media),t}return this.media.create()},e.prototype._poolInstance=function(t){t.destroy(),e._pool.indexOf(t)<0&&e._pool.push(t)},e._pool=[],e}(),C=S.init();e.sound=C,e.filters=m,e.htmlaudio=g,e.webaudio=L,e.Filterable=n,e.Sound=I,e.SoundLibrary=S,e.SoundSprite=F,e.utils=w,Object.defineProperty(e,\"__esModule\",{value:!0})});\n//# sourceMappingURL=pixi-sound.js.map\n","!function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={exports:{},id:i,loaded:!1};return t[i].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){t.exports=n(6)},function(t,e){t.exports=PIXI},function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var n={linear:function(){return function(t){return t}},inQuad:function(){return function(t){return t*t}},outQuad:function(){return function(t){return t*(2-t)}},inOutQuad:function(){return function(t){return t*=2,1>t?.5*t*t:-.5*(--t*(t-2)-1)}},inCubic:function(){return function(t){return t*t*t}},outCubic:function(){return function(t){return--t*t*t+1}},inOutCubic:function(){return function(t){return t*=2,1>t?.5*t*t*t:(t-=2,.5*(t*t*t+2))}},inQuart:function(){return function(t){return t*t*t*t}},outQuart:function(){return function(t){return 1- --t*t*t*t}},inOutQuart:function(){return function(t){return t*=2,1>t?.5*t*t*t*t:(t-=2,-.5*(t*t*t*t-2))}},inQuint:function(){return function(t){return t*t*t*t*t}},outQuint:function(){return function(t){return--t*t*t*t*t+1}},inOutQuint:function(){return function(t){return t*=2,1>t?.5*t*t*t*t*t:(t-=2,.5*(t*t*t*t*t+2))}},inSine:function(){return function(t){return 1-Math.cos(t*Math.PI/2)}},outSine:function(){return function(t){return Math.sin(t*Math.PI/2)}},inOutSine:function(){return function(t){return.5*(1-Math.cos(Math.PI*t))}},inExpo:function(){return function(t){return 0===t?0:Math.pow(1024,t-1)}},outExpo:function(){return function(t){return 1===t?1:1-Math.pow(2,-10*t)}},inOutExpo:function(){return function(t){return 0===t?0:1===t?1:(t*=2,1>t?.5*Math.pow(1024,t-1):.5*(-Math.pow(2,-10*(t-1))+2))}},inCirc:function(){return function(t){return 1-Math.sqrt(1-t*t)}},outCirc:function(){return function(t){return Math.sqrt(1- --t*t)}},inOutCirc:function(){return function(t){return t*=2,1>t?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-2)*(t-2))+1)}},inElastic:function(){var t=arguments.length<=0||void 0===arguments[0]?.1:arguments[0],e=arguments.length<=1||void 0===arguments[1]?.4:arguments[1];return function(n){var i=void 0;return 0===n?0:1===n?1:(!t||1>t?(t=1,i=e/4):i=e*Math.asin(1/t)/(2*Math.PI),-(t*Math.pow(2,10*(n-1))*Math.sin((n-1-i)*(2*Math.PI)/e)))}},outElastic:function(){var t=arguments.length<=0||void 0===arguments[0]?.1:arguments[0],e=arguments.length<=1||void 0===arguments[1]?.4:arguments[1];return function(n){var i=void 0;return 0===n?0:1===n?1:(!t||1>t?(t=1,i=e/4):i=e*Math.asin(1/t)/(2*Math.PI),t*Math.pow(2,-10*n)*Math.sin((n-i)*(2*Math.PI)/e)+1)}},inOutElastic:function(){var t=arguments.length<=0||void 0===arguments[0]?.1:arguments[0],e=arguments.length<=1||void 0===arguments[1]?.4:arguments[1];return function(n){var i=void 0;return 0===n?0:1===n?1:(!t||1>t?(t=1,i=e/4):i=e*Math.asin(1/t)/(2*Math.PI),n*=2,1>n?-.5*(t*Math.pow(2,10*(n-1))*Math.sin((n-1-i)*(2*Math.PI)/e)):t*Math.pow(2,-10*(n-1))*Math.sin((n-1-i)*(2*Math.PI)/e)*.5+1)}},inBack:function(t){return function(e){var n=t||1.70158;return e*e*((n+1)*e-n)}},outBack:function(t){return function(e){var n=t||1.70158;return--e*e*((n+1)*e+n)+1}},inOutBack:function(t){return function(e){var n=1.525*(t||1.70158);return e*=2,1>e?.5*(e*e*((n+1)*e-n)):.5*((e-2)*(e-2)*((n+1)*(e-2)+n)+2)}},inBounce:function(){return function(t){return 1-n.outBounce()(1-t)}},outBounce:function(){return function(t){return 1/2.75>t?7.5625*t*t:2/2.75>t?(t-=1.5/2.75,7.5625*t*t+.75):2.5/2.75>t?(t-=2.25/2.75,7.5625*t*t+.9375):(t-=2.625/2.75,7.5625*t*t+.984375)}},inOutBounce:function(){return function(t){return.5>t?.5*n.inBounce()(2*t):.5*n.outBounce()(2*t-1)+.5}},customArray:function(t){return t?function(t){return t}:n.linear()}};e[\"default\"]=n},function(t,e,n){\"use strict\";function i(t){return t&&t.__esModule?t:{\"default\":t}}function r(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e[\"default\"]=t,e}function s(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function o(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function a(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function u(t,e,n,i,r,s){for(var o in t)if(c(t[o]))u(t[o],e[o],n[o],i,r,s);else{var a=e[o],h=t[o]-e[o],l=i,f=r/l;n[o]=a+h*s(f)}}function h(t,e,n){for(var i in t)0===e[i]||e[i]||(c(n[i])?(e[i]=JSON.parse(JSON.stringify(n[i])),h(t[i],e[i],n[i])):e[i]=n[i])}function c(t){return\"[object Object]\"===Object.prototype.toString.call(t)}var l=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();Object.defineProperty(e,\"__esModule\",{value:!0});var f=n(1),p=r(f),d=n(2),g=i(d),v=function(t){function e(t,n){s(this,e);var i=o(this,Object.getPrototypeOf(e).call(this));return i.target=t,n&&i.addTo(n),i.clear(),i}return a(e,t),l(e,[{key:\"addTo\",value:function(t){return this.manager=t,this.manager.addTween(this),this}},{key:\"chain\",value:function(t){return t||(t=new e(this.target)),this._chainTween=t,t}},{key:\"start\",value:function(){return this.active=!0,this}},{key:\"stop\",value:function(){return this.active=!1,this.emit(\"stop\"),this}},{key:\"to\",value:function(t){return this._to=t,this}},{key:\"from\",value:function(t){return this._from=t,this}},{key:\"remove\",value:function(){return this.manager?(this.manager.removeTween(this),this):this}},{key:\"clear\",value:function(){this.time=0,this.active=!1,this.easing=g[\"default\"].linear(),this.expire=!1,this.repeat=0,this.loop=!1,this.delay=0,this.pingPong=!1,this.isStarted=!1,this.isEnded=!1,this._to=null,this._from=null,this._delayTime=0,this._elapsedTime=0,this._repeat=0,this._pingPong=!1,this._chainTween=null,this.path=null,this.pathReverse=!1,this.pathFrom=0,this.pathTo=0}},{key:\"reset\",value:function(){if(this._elapsedTime=0,this._repeat=0,this._delayTime=0,this.isStarted=!1,this.isEnded=!1,this.pingPong&&this._pingPong){var t=this._to,e=this._from;this._to=e,this._from=t,this._pingPong=!1}return this}},{key:\"update\",value:function(t,e){if(this._canUpdate()||!this._to&&!this.path){var n=void 0,i=void 0;if(this.delay>this._delayTime)return void(this._delayTime+=e);this.isStarted||(this._parseData(),this.isStarted=!0,this.emit(\"start\"));var r=this.pingPong?this.time/2:this.time;if(r>this._elapsedTime){var s=this._elapsedTime+e,o=s>=r;this._elapsedTime=o?r:s,this._apply(r);var a=this._pingPong?r+this._elapsedTime:this._elapsedTime;if(this.emit(\"update\",a),o){if(this.pingPong&&!this._pingPong)return this._pingPong=!0,n=this._to,i=this._from,this._from=n,this._to=i,this.path&&(n=this.pathTo,i=this.pathFrom,this.pathTo=i,this.pathFrom=n),this.emit(\"pingpong\"),void(this._elapsedTime=0);if(this.loop||this.repeat>this._repeat)return this._repeat++,this.emit(\"repeat\",this._repeat),this._elapsedTime=0,void(this.pingPong&&this._pingPong&&(n=this._to,i=this._from,this._to=i,this._from=n,this.path&&(n=this.pathTo,i=this.pathFrom,this.pathTo=i,this.pathFrom=n),this._pingPong=!1));this.isEnded=!0,this.active=!1,this.emit(\"end\"),this._chainTween&&(this._chainTween.addTo(this.manager),this._chainTween.start())}}}}},{key:\"_parseData\",value:function(){if(!this.isStarted&&(this._from||(this._from={}),h(this._to,this._from,this.target),this.path)){var t=this.path.totalDistance();this.pathReverse?(this.pathFrom=t,this.pathTo=0):(this.pathFrom=0,this.pathTo=t)}}},{key:\"_apply\",value:function(t){if(u(this._to,this._from,this.target,t,this._elapsedTime,this.easing),this.path){var e=this.pingPong?this.time/2:this.time,n=this.pathFrom,i=this.pathTo-this.pathFrom,r=e,s=this._elapsedTime/r,o=n+i*this.easing(s),a=this.path.getPointAtDistance(o);this.target.position.set(a.x,a.y)}}},{key:\"_canUpdate\",value:function(){return this.time&&this.active&&this.target}}]),e}(p.utils.EventEmitter);e[\"default\"]=v},function(t,e,n){\"use strict\";function i(t){return t&&t.__esModule?t:{\"default\":t}}function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var s=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(3),a=i(o),u=function(){function t(){r(this,t),this.tweens=[],this._tweensToDelete=[],this._last=0}return s(t,[{key:\"update\",value:function(t){var e=void 0;t||0===t?e=1e3*t:(e=this._getDeltaMS(),t=e/1e3);for(var n=0;n<this.tweens.length;n++){var i=this.tweens[n];i.active&&(i.update(t,e),i.isEnded&&i.expire&&i.remove())}if(this._tweensToDelete.length){for(var n=0;n<this._tweensToDelete.length;n++)this._remove(this._tweensToDelete[n]);this._tweensToDelete.length=0}}},{key:\"getTweensForTarget\",value:function(t){for(var e=[],n=0;n<this.tweens.length;n++)this.tweens[n].target===t&&e.push(this.tweens[n]);return e}},{key:\"createTween\",value:function(t){return new a[\"default\"](t,this)}},{key:\"addTween\",value:function(t){t.manager=this,this.tweens.push(t)}},{key:\"removeTween\",value:function(t){this._tweensToDelete.push(t)}},{key:\"_remove\",value:function(t){var e=this.tweens.indexOf(t);-1!==e&&this.tweens.splice(e,1)}},{key:\"_getDeltaMS\",value:function(){0===this._last&&(this._last=Date.now());var t=Date.now(),e=t-this._last;return this._last=t,e}}]),t}();e[\"default\"]=u},function(t,e,n){\"use strict\";function i(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e[\"default\"]=t,e}function r(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}var s=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),a=i(o),u=function(){function t(){r(this,t),this._colsed=!1,this.polygon=new a.Polygon,this.polygon.closed=!1,this._tmpPoint=new a.Point,this._tmpPoint2=new a.Point,this._tmpDistance=[],this.currentPath=null,this.graphicsData=[],this.dirty=!0}return s(t,[{key:\"moveTo\",value:function(t,e){return a.Graphics.prototype.moveTo.call(this,t,e),this.dirty=!0,this}},{key:\"lineTo\",value:function(t,e){return a.Graphics.prototype.lineTo.call(this,t,e),this.dirty=!0,this}},{key:\"bezierCurveTo\",value:function(t,e,n,i,r,s){return a.Graphics.prototype.bezierCurveTo.call(this,t,e,n,i,r,s),this.dirty=!0,this}},{key:\"quadraticCurveTo\",value:function(t,e,n,i){return a.Graphics.prototype.quadraticCurveTo.call(this,t,e,n,i),this.dirty=!0,this}},{key:\"arcTo\",value:function(t,e,n,i,r){return a.Graphics.prototype.arcTo.call(this,t,e,n,i,r),this.dirty=!0,this}},{key:\"arc\",value:function(t,e,n,i,r,s){return a.Graphics.prototype.arc.call(this,t,e,n,i,r,s),this.dirty=!0,this}},{key:\"drawShape\",value:function(t){return a.Graphics.prototype.drawShape.call(this,t),this.dirty=!0,this}},{key:\"getPoint\",value:function(t){this.parsePoints();var e=this.closed&&t>=this.length-1?0:2*t;return this._tmpPoint.set(this.polygon.points[e],this.polygon.points[e+1]),this._tmpPoint}},{key:\"distanceBetween\",value:function(t,e){this.parsePoints();var n=this.getPoint(t),i=n.x,r=n.y,s=this.getPoint(e),o=s.x,a=s.y,u=o-i,h=a-r;return Math.sqrt(u*u+h*h)}},{key:\"totalDistance\",value:function(){this.parsePoints(),this._tmpDistance.length=0,this._tmpDistance.push(0);for(var t=this.length,e=0,n=0;t-1>n;n++)e+=this.distanceBetween(n,n+1),this._tmpDistance.push(e);return e}},{key:\"getPointAt\",value:function(t){if(this.parsePoints(),t>this.length)return this.getPoint(this.length-1);if(t%1===0)return this.getPoint(t);this._tmpPoint2.set(0,0);var e=t%1,n=this.getPoint(Math.ceil(t)),i=n.x,r=n.y,s=this.getPoint(Math.floor(t)),o=s.x,a=s.y,u=-((o-i)*e),h=-((a-r)*e);return this._tmpPoint2.set(o+u,a+h),this._tmpPoint2}},{key:\"getPointAtDistance\",value:function(t){this.parsePoints(),this._tmpDistance||this.totalDistance();var e=this._tmpDistance.length,n=0,i=this._tmpDistance[this._tmpDistance.length-1];0>t?t=i+t:t>i&&(t-=i);for(var r=0;e>r&&(t>=this._tmpDistance[r]&&(n=r),!(t<this._tmpDistance[r]));r++);if(n===this.length-1)return this.getPointAt(n);var s=t-this._tmpDistance[n],o=this._tmpDistance[n+1]-this._tmpDistance[n];return this.getPointAt(n+s/o)}},{key:\"parsePoints\",value:function(){if(!this.dirty)return this;this.dirty=!1,this.polygon.points.length=0;for(var t=0;t<this.graphicsData.length;t++){var e=this.graphicsData[t].shape;e&&e.points&&(this.polygon.points=this.polygon.points.concat(e.points))}return this}},{key:\"clear\",value:function(){return this.graphicsData.length=0,this.currentPath=null,this.polygon.points.length=0,this._closed=!1,this.dirty=!1,this}},{key:\"closed\",get:function(){return this._closed},set:function(t){this._closed!==t&&(this.polygon.closed=t,this._closed=t,this.dirty=!0)}},{key:\"length\",get:function(){return this.polygon.points.length?this.polygon.points.length/2+(this._closed?1:0):0}}]),t}();e[\"default\"]=u},function(t,e,n){\"use strict\";function i(t){return t&&t.__esModule?t:{\"default\":t}}function r(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e[\"default\"]=t,e}Object.defineProperty(e,\"__esModule\",{value:!0});var s=n(1),o=r(s),a=n(4),u=i(a),h=n(3),c=i(h),l=n(5),f=i(l),p=n(2),d=i(p);o.Graphics.prototype.drawPath=function(t){return t.parsePoints(),this.drawShape(t.polygon),this};var g={TweenManager:u[\"default\"],Tween:c[\"default\"],Easing:d[\"default\"],TweenPath:f[\"default\"]};o.tweenManager||(o.tweenManager=new u[\"default\"],o.tween=g),e[\"default\"]=g}]);\n//# sourceMappingURL=pixi-tween.js.map","/*!\n* screenfull\n* v3.3.2 - 2017-10-27\n* (c) Sindre Sorhus; MIT License\n*/\n(function () {\n\t'use strict';\n\n\tvar document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\tvar isCommonjs = typeof module !== 'undefined' && module.exports;\n\tvar keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element;\n\n\tvar fn = (function () {\n\t\tvar val;\n\n\t\tvar fnMap = [\n\t\t\t[\n\t\t\t\t'requestFullscreen',\n\t\t\t\t'exitFullscreen',\n\t\t\t\t'fullscreenElement',\n\t\t\t\t'fullscreenEnabled',\n\t\t\t\t'fullscreenchange',\n\t\t\t\t'fullscreenerror'\n\t\t\t],\n\t\t\t// New WebKit\n\t\t\t[\n\t\t\t\t'webkitRequestFullscreen',\n\t\t\t\t'webkitExitFullscreen',\n\t\t\t\t'webkitFullscreenElement',\n\t\t\t\t'webkitFullscreenEnabled',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t// Old WebKit (Safari 5.1)\n\t\t\t[\n\t\t\t\t'webkitRequestFullScreen',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitCurrentFullScreenElement',\n\t\t\t\t'webkitCancelFullScreen',\n\t\t\t\t'webkitfullscreenchange',\n\t\t\t\t'webkitfullscreenerror'\n\n\t\t\t],\n\t\t\t[\n\t\t\t\t'mozRequestFullScreen',\n\t\t\t\t'mozCancelFullScreen',\n\t\t\t\t'mozFullScreenElement',\n\t\t\t\t'mozFullScreenEnabled',\n\t\t\t\t'mozfullscreenchange',\n\t\t\t\t'mozfullscreenerror'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'msRequestFullscreen',\n\t\t\t\t'msExitFullscreen',\n\t\t\t\t'msFullscreenElement',\n\t\t\t\t'msFullscreenEnabled',\n\t\t\t\t'MSFullscreenChange',\n\t\t\t\t'MSFullscreenError'\n\t\t\t]\n\t\t];\n\n\t\tvar i = 0;\n\t\tvar l = fnMap.length;\n\t\tvar ret = {};\n\n\t\tfor (; i < l; i++) {\n\t\t\tval = fnMap[i];\n\t\t\tif (val && val[1] in document) {\n\t\t\t\tfor (i = 0; i < val.length; i++) {\n\t\t\t\t\tret[fnMap[0][i]] = val[i];\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t})();\n\n\tvar eventNameMap = {\n\t\tchange: fn.fullscreenchange,\n\t\terror: fn.fullscreenerror\n\t};\n\n\tvar screenfull = {\n\t\trequest: function (elem) {\n\t\t\tvar request = fn.requestFullscreen;\n\n\t\t\telem = elem || document.documentElement;\n\n\t\t\t// Work around Safari 5.1 bug: reports support for\n\t\t\t// keyboard in fullscreen even though it doesn't.\n\t\t\t// Browser sniffing, since the alternative with\n\t\t\t// setTimeout is even worse.\n\t\t\tif (/ Version\\/5\\.1(?:\\.\\d+)? Safari\\//.test(navigator.userAgent)) {\n\t\t\t\telem[request]();\n\t\t\t} else {\n\t\t\t\telem[request](keyboardAllowed && Element.ALLOW_KEYBOARD_INPUT);\n\t\t\t}\n\t\t},\n\t\texit: function () {\n\t\t\tdocument[fn.exitFullscreen]();\n\t\t},\n\t\ttoggle: function (elem) {\n\t\t\tif (this.isFullscreen) {\n\t\t\t\tthis.exit();\n\t\t\t} else {\n\t\t\t\tthis.request(elem);\n\t\t\t}\n\t\t},\n\t\tonchange: function (callback) {\n\t\t\tthis.on('change', callback);\n\t\t},\n\t\tonerror: function (callback) {\n\t\t\tthis.on('error', callback);\n\t\t},\n\t\ton: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\toff: function (event, callback) {\n\t\t\tvar eventName = eventNameMap[event];\n\t\t\tif (eventName) {\n\t\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t\t}\n\t\t},\n\t\traw: fn\n\t};\n\n\tif (!fn) {\n\t\tif (isCommonjs) {\n\t\t\tmodule.exports = false;\n\t\t} else {\n\t\t\twindow.screenfull = false;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tObject.defineProperties(screenfull, {\n\t\tisFullscreen: {\n\t\t\tget: function () {\n\t\t\t\treturn Boolean(document[fn.fullscreenElement]);\n\t\t\t}\n\t\t},\n\t\telement: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn document[fn.fullscreenElement];\n\t\t\t}\n\t\t},\n\t\tenabled: {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\t// Coerce to boolean in case of old WebKit\n\t\t\t\treturn Boolean(document[fn.fullscreenEnabled]);\n\t\t\t}\n\t\t}\n\t});\n\n\tif (isCommonjs) {\n\t\tmodule.exports = screenfull;\n\t} else {\n\t\twindow.screenfull = screenfull;\n\t}\n})();\n","/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n","require('pixi-tween');\r\nrequire('pixi-projection');\r\n\r\nconst Settings = require('./core/Settings');\r\nconst Music = require('./core/Music');\r\nconst Store = require('./core/Store');\r\nconst Scenes = require('./core/Scenes');\r\nconst Splash = require('./core/Splash');\r\nconst Mouse = require('./core/Mouse');\r\nconst Debugger = require('./core/Debugger');\r\nconst Scripts = require('./core/Scripts');\r\n\r\nclass Game extends PIXI.Container {\r\n  constructor() {\r\n    super();\r\n\r\n    this.renderer = PIXI.autoDetectRenderer({background: 0xFFFFFF});\r\n    this.ticker = new PIXI.ticker.Ticker();\r\n    this.view = this.renderer.view;\r\n    document.body.appendChild(this.view);\r\n\r\n    this.w = 1920;\r\n    this.h = 980;\r\n    this.resolution = null;\r\n\r\n    this.bg = new PIXI.Sprite.fromImage('bg');\r\n    this.addChild(this.bg);\r\n\r\n    this.scripts = new Scripts(this);\r\n    this.audio = new Music(this);\r\n    this.store = new Store(this);\r\n    this.settings = new Settings(this);\r\n    this.debug = new Debugger(this, true);\r\n\r\n    this.scenes = new Scenes(this);\r\n    this.mouse = new Mouse(this);\r\n    this.splash = new Splash(this);\r\n\r\n    this.ticker.add((dt) => {\r\n      PIXI.tweenManager.update();\r\n      this.renderer.render(this);\r\n    });\r\n    this.ticker.start();\r\n    this.resize();\r\n    this._bindEvents();\r\n  }\r\n  _bindEvents() {\r\n    window.addEventListener('resize', () => this.resize(this));\r\n  }\r\n  resize() {\r\n    this.resolution = window.innerWidth/this.w;\r\n    this.renderer.resize(window.innerWidth, this.h*this.resolution);\r\n    this.view.style.marginTop = window.innerHeight/2-this.h*this.resolution/2 + 'px';\r\n    this.scale.set(this.resolution);\r\n  }\r\n}\r\n\r\nmodule.exports = Game;\r\n","module.exports={ \"columns\":4,\r\n \"image\":\"..\\/..\\/dist\\/assets\\/sprites\\/blocks.png\",\r\n \"imageheight\":338,\r\n \"imagewidth\":676,\r\n \"margin\":0,\r\n \"name\":\"blocks\",\r\n \"spacing\":0,\r\n \"tilecount\":8,\r\n \"tileheight\":169,\r\n \"tileproperties\":\r\n    {\r\n     \"0\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":false,\r\n         \"score\":10,\r\n         \"tint\":\"0xff3939\",\r\n         \"type\":\"red\"\r\n        },\r\n     \"1\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":false,\r\n         \"score\":10,\r\n         \"tint\":\"0x86ff4a\",\r\n         \"type\":\"green\"\r\n        },\r\n     \"2\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":false,\r\n         \"score\":10,\r\n         \"tint\":\"0x4ab4ff\",\r\n         \"type\":\"blue\"\r\n        },\r\n     \"3\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":false,\r\n         \"score\":10,\r\n         \"tint\":\"0xFFFFFF\",\r\n         \"type\":\"white\"\r\n        },\r\n     \"4\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":true,\r\n         \"score\":10,\r\n         \"tint\":\"0xff3939\",\r\n         \"type\":\"red\"\r\n        },\r\n     \"5\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":true,\r\n         \"score\":10,\r\n         \"tint\":\"0x86ff4a\",\r\n         \"type\":\"green\"\r\n        },\r\n     \"6\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":true,\r\n         \"score\":10,\r\n         \"tint\":\"0x4ab4ff\",\r\n         \"type\":\"blue\"\r\n        },\r\n     \"7\":\r\n        {\r\n         \"activation\":10,\r\n         \"active\":true,\r\n         \"score\":10,\r\n         \"tint\":\"0xFFFFFF\",\r\n         \"type\":\"white\"\r\n        }\r\n    },\r\n \"tilepropertytypes\":\r\n    {\r\n     \"0\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"1\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"2\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"3\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"4\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"5\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"6\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        },\r\n     \"7\":\r\n        {\r\n         \"activation\":\"int\",\r\n         \"active\":\"bool\",\r\n         \"score\":\"int\",\r\n         \"tint\":\"string\",\r\n         \"type\":\"string\"\r\n        }\r\n    },\r\n \"tilewidth\":169,\r\n \"type\":\"tileset\"\r\n}","module.exports={\r\n  \"1\": {\r\n    \"text\": {\r\n      \"ru\": \"Тлен идет за тобой по пятам. \\n Отступись и он тебя поглатит... \\n Но не стоит отчаиваться, ведь музыка всегда с тобой.\",\r\n      \"en\": \"Thlen follows you. \\n Digress and he will swallow you ... \\n But do not despair, because music is always with you.\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"2\": {\r\n    \"text\": {\r\n      \"ru\": \"Тлен не щадит никого. Летучие змеи падут на землю и погрузятся в рутину бытия...\",\r\n      \"en\": \"Tlen does not spare anyone. The flying kites will fall to the ground and plunge into the routine of being ...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"3\": {\r\n    \"text\": {\r\n      \"ru\": \"И тогда он понес свечу через чужие земли освобождая летучих змей и свой народ...\",\r\n      \"en\": \"And then he carried a candle through foreign lands freeing the flying snakes and his people ...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"4\": {\r\n    \"text\": {\r\n      \"ru\": \"Продолжение следует...\",\r\n      \"en\": \"Comming soon...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"5\": {\r\n    \"text\": {\r\n      \"ru\": \"Продолжение следует...\",\r\n      \"en\": \"Comming soon...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"6\": {\r\n    \"text\": {\r\n      \"ru\": \"Продолжение следует...\",\r\n      \"en\": \"Comming soon...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"7\": {\r\n    \"text\": {\r\n      \"ru\": \"Продолжение следует...\",\r\n      \"en\": \"Comming soon...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"8\": {\r\n    \"text\": {\r\n      \"ru\": \"Продолжение следует...\",\r\n      \"en\": \"Comming soon...\"\r\n    },\r\n    \"time\": 6000\r\n  },\r\n  \"9\": {\r\n    \"text\": {\r\n      \"ru\": \"Продолжение следует...\",\r\n      \"en\": \"Comming soon...\"\r\n    },\r\n    \"time\": 6000\r\n  }\r\n}\r\n","module.exports={ \"backgroundcolor\":\"#16162f\",\r\n \"height\":1000,\r\n \"layers\":[\r\n        {\r\n         \"data\":[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 104, 104, 0, 104, 104, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 101, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 101, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 101, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 101, 0, 0, 0, 0, 0, 0, 101, 108, 101, 108, 101, 0, 0, 0, 0, 0, 0, 101, 105, 101, 105, 101, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 101, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 101, 0, 0, 0, 0, 0, 0, 105, 101, 101, 101, 105, 0, 0, 0, 0, 0, 0, 101, 101, 105, 101, 101, 0, 0, 0, 0, 0, 0, 101, 105, 105, 105, 101, 0, 0, 0, 0, 0, 0, 104, 104, 101, 104, 104, 0, 0, 0, 0, 0, 0, 104, 102, 101, 104, 104, 0, 0, 0, 0, 0, 0, 104, 101, 101, 104, 102, 0, 0, 0, 0, 0, 0, 104, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 101, 102, 104, 102, 0, 0, 0, 0, 0, 0, 102, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 105, 104, 102, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 102, 104, 104, 104, 102, 0, 0, 0, 0, 0, 0, 104, 104, 102, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 101, 101, 101, 105, 0, 0, 0, 0, 0, 0, 102, 101, 102, 104, 104, 0, 0, 0, 0, 0, 0, 104, 105, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 102, 0, 0, 0, 0, 0, 0, 102, 104, 102, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 102, 0, 0, 0, 0, 0, 0, 102, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 108, 104, 104, 0, 0, 0, 0, 0, 0, 104, 108, 108, 108, 104, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 105, 108, 105, 108, 105, 0, 0, 0, 0, 0, 0, 105, 108, 105, 108, 105, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 108, 105, 108, 105, 108, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 101, 101, 0, 0, 0, 0, 0, 0, 101, 104, 104, 101, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 101, 101, 0, 0, 0, 0, 0, 0, 101, 104, 104, 104, 101, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 101, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 101, 0, 0, 0, 0, 0, 0, 105, 108, 105, 108, 105, 0, 0, 0, 0, 0, 0, 101, 104, 104, 101, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 101, 104, 0, 0, 0, 0, 0, 0, 108, 105, 108, 105, 108, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 108, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 105, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 108, 101, 101, 105, 104, 0, 0, 0, 0, 0, 0, 101, 101, 108, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 105, 0, 0, 0, 0, 0, 0, 101, 108, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 101, 0, 0, 0, 0, 0, 0, 108, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 105, 101, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 101, 101, 104, 101, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 105, 0, 0, 0, 0, 0, 0, 104, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 105, 0, 108, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 101, 108, 108, 108, 108, 108, 101, 0, 0, 0, 0, 0, 101, 108, 101, 108, 101, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 101, 101, 0, 0, 0, 0, 0, 101, 101, 101, 101, 101, 0, 0, 0, 0, 0, 101, 101, 101, 101, 101, 101, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 101, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 101, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 101, 104, 104, 0, 0, 0, 0, 0, 101, 104, 104, 104, 101, 0, 0, 0, 0, 0, 0, 101, 101, 101, 104, 104, 0, 0, 0, 0, 0, 0, 105, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 104, 101, 0, 0, 0, 0, 0, 0, 104, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 104, 101, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 101, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 104, 104, 101, 104, 104, 0, 0, 0, 0, 0, 0, 101, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 101, 0, 0, 0, 0, 0, 0, 104, 104, 104, 101, 104, 104, 0, 0, 0, 0, 104, 104, 101, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 101, 0, 0, 0, 0, 0, 0, 101, 104, 101, 104, 104, 104, 0, 0, 0, 0, 0, 104, 104, 104, 104, 101, 0, 0, 0, 0, 0, 104, 104, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 104, 101, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 108, 108, 108, 108, 108, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 108, 0, 0, 0, 0, 0, 0, 103, 103, 104, 103, 103, 0, 0, 0, 0, 0, 0, 104, 103, 104, 103, 104, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 108, 103, 103, 105, 103, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 104, 103, 103, 104, 0, 0, 0, 0, 0, 0, 103, 107, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 104, 108, 103, 103, 0, 0, 0, 0, 0, 0, 105, 103, 103, 105, 104, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 103, 104, 103, 103, 0, 0, 0, 0, 0, 0, 103, 104, 103, 103, 105, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 104, 103, 104, 103, 103, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 104, 0, 0, 0, 0, 0, 0, 108, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 103, 104, 103, 104, 0, 0, 0, 0, 0, 0, 104, 103, 103, 105, 103, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 103, 103, 103, 103, 103, 0, 0, 0, 0, 0, 0, 107, 107, 107, 107, 107, 0, 0, 0, 0, 0, 0, 107, 107, 107, 107, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 0, 0, 0, 0, 0, 0, 103, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 103, 0, 0, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 103, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 103, 0, 0, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 0, 0, 0, 0, 0, 0, 104, 104, 104, 108, 108, 0, 0, 0, 0, 0, 0, 104, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 108, 0, 105, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0, 104, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0, 104, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 104, 0, 0, 0, 0, 0, 0, 0, 104, 105, 104, 104, 0, 0, 0, 0, 0, 0, 0, 104, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, 101, 105, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 101, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 108, 104, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 104, 108, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 104, 0, 0, 0, 0, 0, 0, 104, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 101, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 101, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 101, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 104, 104, 0, 0, 0, 0, 0, 0, 0, 0, 104, 108, 104, 0, 0, 0, 0, 0, 0, 0, 0, 108, 108, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0],\r\n         \"height\":1000,\r\n         \"name\":\"map\",\r\n         \"opacity\":1,\r\n         \"type\":\"tilelayer\",\r\n         \"visible\":true,\r\n         \"width\":11,\r\n         \"x\":0,\r\n         \"y\":0\r\n        },\r\n        {\r\n         \"data\":[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 78, 78, 78, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 77, 77, 77, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 73, 73, 73, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n         \"height\":1000,\r\n         \"name\":\"triggers\",\r\n         \"opacity\":0.330000013113022,\r\n         \"type\":\"tilelayer\",\r\n         \"visible\":true,\r\n         \"width\":11,\r\n         \"x\":0,\r\n         \"y\":0\r\n        }],\r\n \"nextobjectid\":11,\r\n \"orientation\":\"orthogonal\",\r\n \"renderorder\":\"right-down\",\r\n \"tiledversion\":\"1.0.3\",\r\n \"tileheight\":168,\r\n \"tilesets\":[\r\n        {\r\n         \"columns\":10,\r\n         \"firstgid\":1,\r\n         \"image\":\"..\\/..\\/dist\\/assets\\/sprites\\/triggers.png\",\r\n         \"imageheight\":1500,\r\n         \"imagewidth\":1500,\r\n         \"margin\":0,\r\n         \"name\":\"triggers\",\r\n         \"spacing\":0,\r\n         \"tilecount\":100,\r\n         \"tileheight\":150,\r\n         \"tileproperties\":\r\n            {\r\n             \"0\":\r\n                {\r\n                 \"playerDir\":\"top\"\r\n                },\r\n             \"1\":\r\n                {\r\n                 \"playerDir\":\"right\"\r\n                },\r\n             \"10\":\r\n                {\r\n                 \"showDelay\":true\r\n                },\r\n             \"11\":\r\n                {\r\n                 \"animateFly\":true\r\n                },\r\n             \"2\":\r\n                {\r\n                 \"playerDir\":\"left\"\r\n                },\r\n             \"3\":\r\n                {\r\n                 \"playerDir\":\"down\"\r\n                },\r\n             \"4\":\r\n                {\r\n                 \"time\":2000,\r\n                 \"toTexture\":\"\"\r\n                },\r\n             \"5\":\r\n                {\r\n                 \"time\":3000,\r\n                 \"toTexture\":\"\"\r\n                },\r\n             \"6\":\r\n                {\r\n                 \"time\":3000,\r\n                 \"toTexture\":\"\"\r\n                },\r\n             \"70\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":1\r\n                },\r\n             \"71\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":2\r\n                },\r\n             \"72\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":3\r\n                },\r\n             \"73\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":4\r\n                },\r\n             \"74\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":5\r\n                },\r\n             \"75\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":6\r\n                },\r\n             \"76\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":7\r\n                },\r\n             \"77\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":8\r\n                },\r\n             \"78\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":9\r\n                },\r\n             \"79\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":10\r\n                },\r\n             \"80\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":11\r\n                },\r\n             \"81\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":12\r\n                },\r\n             \"82\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":13\r\n                },\r\n             \"83\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":14\r\n                },\r\n             \"84\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":15\r\n                },\r\n             \"85\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":16\r\n                },\r\n             \"86\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":17\r\n                },\r\n             \"87\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":18\r\n                },\r\n             \"88\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":19\r\n                },\r\n             \"89\":\r\n                {\r\n                 \"checkpoint\":true,\r\n                 \"playerDir\":\"stop\",\r\n                 \"scriptID\":0\r\n                },\r\n             \"90\":\r\n                {\r\n                 \"checkpoint\":true\r\n                },\r\n             \"91\":\r\n                {\r\n                 \"checkpoint\":true\r\n                },\r\n             \"92\":\r\n                {\r\n                 \"checkpoint\":true\r\n                },\r\n             \"93\":\r\n                {\r\n                 \"checkpoint\":true\r\n                },\r\n             \"94\":\r\n                {\r\n                 \"checkpoint\":true\r\n                }\r\n            },\r\n         \"tilepropertytypes\":\r\n            {\r\n             \"0\":\r\n                {\r\n                 \"playerDir\":\"string\"\r\n                },\r\n             \"1\":\r\n                {\r\n                 \"playerDir\":\"string\"\r\n                },\r\n             \"10\":\r\n                {\r\n                 \"showDelay\":\"bool\"\r\n                },\r\n             \"11\":\r\n                {\r\n                 \"animateFly\":\"bool\"\r\n                },\r\n             \"2\":\r\n                {\r\n                 \"playerDir\":\"string\"\r\n                },\r\n             \"3\":\r\n                {\r\n                 \"playerDir\":\"string\"\r\n                },\r\n             \"4\":\r\n                {\r\n                 \"time\":\"int\",\r\n                 \"toTexture\":\"string\"\r\n                },\r\n             \"5\":\r\n                {\r\n                 \"time\":\"int\",\r\n                 \"toTexture\":\"string\"\r\n                },\r\n             \"6\":\r\n                {\r\n                 \"time\":\"int\",\r\n                 \"toTexture\":\"string\"\r\n                },\r\n             \"70\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"71\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"72\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"73\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"74\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"75\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"76\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"77\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"78\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"79\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"80\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"81\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"82\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"83\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"84\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"85\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"86\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"87\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"88\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"89\":\r\n                {\r\n                 \"checkpoint\":\"bool\",\r\n                 \"playerDir\":\"string\",\r\n                 \"scriptID\":\"int\"\r\n                },\r\n             \"90\":\r\n                {\r\n                 \"checkpoint\":\"bool\"\r\n                },\r\n             \"91\":\r\n                {\r\n                 \"checkpoint\":\"bool\"\r\n                },\r\n             \"92\":\r\n                {\r\n                 \"checkpoint\":\"bool\"\r\n                },\r\n             \"93\":\r\n                {\r\n                 \"checkpoint\":\"bool\"\r\n                },\r\n             \"94\":\r\n                {\r\n                 \"checkpoint\":\"bool\"\r\n                }\r\n            },\r\n         \"tilewidth\":150\r\n        },\r\n        {\r\n         \"firstgid\":101,\r\n         \"source\":\"blocks.json\"\r\n        },\r\n        {\r\n         \"firstgid\":109,\r\n         \"source\":\"blocks.json\"\r\n        }],\r\n \"tilewidth\":168,\r\n \"type\":\"map\",\r\n \"version\":1,\r\n \"width\":11\r\n}\r\n","const history = require('./history');\r\n\r\nmodule.exports = {\r\n  1: (game, scene) => {\r\n    scene.history.show(history[1]);\r\n    scene.map.speed = 400;\r\n  },\r\n  2: (game, scene) => {\r\n    scene.history.show(history[2]);\r\n    scene.map.speed = 400;\r\n  },\r\n  3: (game, scene) => {\r\n    scene.history.show(history[3]);\r\n    scene.map.speed = 400;\r\n  },\r\n  4: (game, scene) => {\r\n    scene.history.show(history[4]);\r\n    scene.map.speed = 400;\r\n  },\r\n  5: (game, scene) => {\r\n    scene.history.show(history[5]);\r\n    scene.map.speed = 400;\r\n  },\r\n  6: (game, scene) => {\r\n    scene.history.show(history[6]);\r\n    scene.map.speed = 400;\r\n  },\r\n  7: (game, scene) => {\r\n    scene.history.show(history[7]);\r\n    scene.map.speed = 400;\r\n  },\r\n  8: (game, scene) => {\r\n    scene.history.show(history[8]);\r\n    scene.map.speed = 400;\r\n  },\r\n  9: (game, scene) => {\r\n    scene.history.show(history[9]);\r\n    scene.map.speed = 400;\r\n  },\r\n  10: (game, scene) => {\r\n    scene.history.show(history[10]);\r\n    scene.map.speed = 400;\r\n  }\r\n}\r\n","module.exports={\r\n \"columns\":10,\r\n \"firstgid\":1,\r\n \"image\":\"..\\/..\\/dist\\/assets\\/sprites\\/triggers.png\",\r\n \"imageheight\":1500,\r\n \"imagewidth\":1500,\r\n \"margin\":0,\r\n \"name\":\"triggers\",\r\n \"spacing\":0,\r\n \"tilecount\":100,\r\n \"tileheight\":150,\r\n \"tileproperties\":\r\n    {\r\n     \"0\":\r\n        {\r\n         \"playerDir\":\"top\"\r\n        },\r\n     \"1\":\r\n        {\r\n         \"playerDir\":\"right\"\r\n        },\r\n     \"10\":\r\n        {\r\n         \"showDelay\":true\r\n        },\r\n     \"11\":\r\n        {\r\n         \"animateFly\":true\r\n        },\r\n     \"2\":\r\n        {\r\n         \"playerDir\":\"left\"\r\n        },\r\n     \"3\":\r\n        {\r\n         \"playerDir\":\"down\"\r\n        },\r\n     \"4\":\r\n        {\r\n         \"time\":2000,\r\n         \"toTexture\":\"\"\r\n        },\r\n     \"5\":\r\n        {\r\n         \"time\":3000,\r\n         \"toTexture\":\"\"\r\n        },\r\n     \"6\":\r\n        {\r\n         \"time\":3000,\r\n         \"toTexture\":\"\"\r\n        },\r\n     \"70\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":1\r\n        },\r\n     \"71\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":2\r\n        },\r\n     \"72\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":3\r\n        },\r\n     \"73\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":4\r\n        },\r\n     \"74\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":5\r\n        },\r\n     \"75\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":6\r\n        },\r\n     \"76\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":7\r\n        },\r\n     \"77\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":8\r\n        },\r\n     \"78\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":9\r\n        },\r\n     \"79\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":10\r\n        },\r\n     \"80\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":11\r\n        },\r\n     \"81\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":12\r\n        },\r\n     \"82\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":13\r\n        },\r\n     \"83\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":14\r\n        },\r\n     \"84\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":15\r\n        },\r\n     \"85\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":16\r\n        },\r\n     \"86\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":17\r\n        },\r\n     \"87\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":18\r\n        },\r\n     \"88\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":19\r\n        },\r\n     \"89\":\r\n        {\r\n         \"checkpoint\":true,\r\n         \"playerDir\":\"stop\",\r\n         \"scriptID\":0\r\n        },\r\n     \"90\":\r\n        {\r\n         \"checkpoint\":true\r\n        },\r\n     \"91\":\r\n        {\r\n         \"checkpoint\":true\r\n        },\r\n     \"92\":\r\n        {\r\n         \"checkpoint\":true\r\n        },\r\n     \"93\":\r\n        {\r\n         \"checkpoint\":true\r\n        },\r\n     \"94\":\r\n        {\r\n         \"checkpoint\":true\r\n        }\r\n    },\r\n \"tilepropertytypes\":\r\n    {\r\n     \"0\":\r\n        {\r\n         \"playerDir\":\"string\"\r\n        },\r\n     \"1\":\r\n        {\r\n         \"playerDir\":\"string\"\r\n        },\r\n     \"10\":\r\n        {\r\n         \"showDelay\":\"bool\"\r\n        },\r\n     \"11\":\r\n        {\r\n         \"animateFly\":\"bool\"\r\n        },\r\n     \"2\":\r\n        {\r\n         \"playerDir\":\"string\"\r\n        },\r\n     \"3\":\r\n        {\r\n         \"playerDir\":\"string\"\r\n        },\r\n     \"4\":\r\n        {\r\n         \"time\":\"int\",\r\n         \"toTexture\":\"string\"\r\n        },\r\n     \"5\":\r\n        {\r\n         \"time\":\"int\",\r\n         \"toTexture\":\"string\"\r\n        },\r\n     \"6\":\r\n        {\r\n         \"time\":\"int\",\r\n         \"toTexture\":\"string\"\r\n        },\r\n     \"70\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"71\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"72\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"73\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"74\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"75\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"76\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"77\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"78\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"79\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"80\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"81\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"82\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"83\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"84\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"85\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"86\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"87\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"88\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"89\":\r\n        {\r\n         \"checkpoint\":\"bool\",\r\n         \"playerDir\":\"string\",\r\n         \"scriptID\":\"int\"\r\n        },\r\n     \"90\":\r\n        {\r\n         \"checkpoint\":\"bool\"\r\n        },\r\n     \"91\":\r\n        {\r\n         \"checkpoint\":\"bool\"\r\n        },\r\n     \"92\":\r\n        {\r\n         \"checkpoint\":\"bool\"\r\n        },\r\n     \"93\":\r\n        {\r\n         \"checkpoint\":\"bool\"\r\n        },\r\n     \"94\":\r\n        {\r\n         \"checkpoint\":\"bool\"\r\n        }\r\n    },\r\n \"tilewidth\":150\r\n}\r\n","module.exports={\r\n  \"white\": 0xFFFFFF,\r\n  \"red\": 0xff3939,\r\n  \"blue\": 0x4ab4ff,\r\n  \"green\": 0x86ff4a\r\n}\r\n","class Debugger extends PIXI.Graphics {\r\n  constructor(game, dev=false) {\r\n    super();\r\n    game.addChild(this);\r\n    this.game = game;\r\n\r\n    this.points = [];\r\n    this.rects = [];\r\n\r\n    this.fps = new PIXI.Text('FPS: ', {fill: '#fff'});\r\n    this.fps.x = 20;\r\n    this.fps.y = 20;\r\n    this.fps.visible = dev;\r\n    this.addChild(this.fps);\r\n\r\n    this.game.ticker.add(() => this.update());\r\n  }\r\n  addPoint(point) {\r\n    this.points.push(point);\r\n  }\r\n  addRect(rect) {\r\n    this.rects.push(rect);\r\n  }\r\n  update() {\r\n    this.clear();\r\n\r\n    for(let i = 0; i < this.points.length; i++) {\r\n      this.beginFill(0x44a73f);\r\n      this.drawRect(this.points[i].x-5, this.points[i].y-5, 10, 10);\r\n    }\r\n\r\n    for(let i = 0; i < this.rects.length; i++) {\r\n      this.beginFill(0x44a73f, 0.3);\r\n      this.lineStyle(2, 0x44a73f);\r\n      this.drawRect(this.rects[i].x, this.rects[i].y, this.rects[i].width, this.rects[i].height);\r\n    }\r\n\r\n    this.fps.text = 'FPS: ' + Math.round(this.game.ticker.FPS);\r\n  }\r\n}\r\n\r\nmodule.exports = Debugger;\r\n","const WebFont = require('webfontloader');\r\n\r\nclass Loader {\r\n  constructor() {\r\n    this.banner = document.createElement('img');\r\n    this.banner.src = 'assets/icon.png';\r\n    this.banner.style.position = 'absolute';\r\n    this.banner.style.top = (window.innerHeight/2-100) + 'px';\r\n    this.banner.style.left = (window.innerWidth/2-100) + 'px';\r\n    document.body.appendChild(this.banner);\r\n  }\r\n  showBanner() {\r\n    document.body.style.background = '#1a1a1e';\r\n    this.banner.style.display = 'block';\r\n  }\r\n  hideBanner() {\r\n    document.body.style.background = '#000';\r\n    this.banner.style.display = 'none';\r\n  }\r\n  loadResources(loaded) {\r\n    this.showBanner();\r\n\r\n    PIXI.loader\r\n      .add('bg', 'assets/spritesheets/bg.png')\r\n      .add('vignette', 'assets/spritesheets/vignette.png')\r\n      .add('spritesheet', 'assets/spritesheets/spritesheet.json')\r\n      .add('music_mantra', 'assets/sounds/mantra.ogg')\r\n      // .add('music_morale', 'assets/sounds/morale.mp3')\r\n      // .add('music_spirit', 'assets/sounds/spirit.mp3')\r\n\r\n      .load(() => this.loadFonts(() => {\r\n        this.hideBanner();\r\n        loaded && loaded();\r\n      }));\r\n  }\r\n  loadFonts(cb) {\r\n    WebFont.load({\r\n      custom: {\r\n        families: ['Milton Grotesque'],\r\n        urls: ['assets/fonts/fonts.css']\r\n      },\r\n      google: {\r\n        families: ['Montserrat']\r\n      },\r\n      active: () => setTimeout(cb, 1000)\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = Loader;\r\n","class Mouse extends PIXI.Sprite {\r\n  constructor(game) {\r\n    super(PIXI.Texture.fromImage('cursor.png'));\r\n    game.addChild(this);\r\n\r\n    game.interactive = true;\r\n    game.cursor = 'none';\r\n    game.on('pointermove', (e) => {\r\n      this.x = e.data.global.x/game.resolution;\r\n      this.y = e.data.global.y/game.resolution;\r\n    });\r\n\r\n    this.anchor.set(.5);\r\n    this.scale.set(.6);\r\n    this.tint = 0xffeb3b;\r\n    game.ticker.add(() => this.rotation += .1);\r\n  }\r\n}\r\n\r\nmodule.exports = Mouse;\r\n","require('pixi-sound');\r\n\r\nclass Music {\r\n  constructor(game) {\r\n    this.game = game;\r\n\r\n    this.sounds = [];\r\n    this.musics = ['music_mantra'];\r\n  }\r\n  playSound(id, params) {\r\n    PIXI.sound.play('sound_' + id, params);\r\n  }\r\n  stopSound(id) {\r\n    PIXI.sound.stop('sound_' + id);\r\n  }\r\n  playAllMusicsLoop(i=0) {\r\n    PIXI.sound.play(this.musics[i], {\r\n      complete: () => {\r\n        if(i < this.musics.length-2) this.allMusicsLoop(i+1);\r\n        else this.allMusicsLoop(0);\r\n      }\r\n    })\r\n  }\r\n  stopAllMusicsLoop() {\r\n    this.musics.forEach((id) => {\r\n      PIXI.sound.stop(id);\r\n    });\r\n  }\r\n  playMusic(id, params) {\r\n    PIXI.sound.play('music_' + id, params);\r\n  }\r\n  stopMusic(id) {\r\n    PIXI.sound.stop('music_' + id);\r\n  }\r\n  toggleMusic(play) {\r\n    this.musics.forEach((id) => {\r\n      play ? PIXI.sound.volume(id, 1) : PIXI.sound.volume(id, 0);\r\n    });\r\n  }\r\n  toggleSounds(play) {\r\n    this.sounds.forEach((id) => {\r\n      play ? PIXI.sound.volume(id, 1) : PIXI.sound.volume(id, 0);\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = Music;\r\n","/*\r\n  Класс для переключения видимого контейнера (рабочих сцен)\r\n  События:\r\n    restartedScene => scene\r\n    disabledScene => scene\r\n    enabledScene => scenes\r\n*/\r\n\r\nclass Scenes extends PIXI.Container {\r\n  constructor(game) {\r\n    super();\r\n    game.addChild(this);\r\n\r\n    this.game = game;\r\n\r\n    this.scenes = require('../scenes');\r\n    this.activeScene = null;\r\n  }\r\n  getScene(id) {\r\n    return this.scenes[id];\r\n  }\r\n\r\n  // adding scenes\r\n  addScenes(scenes) {\r\n    for(let id in scenes) {\r\n      this.addScene(id, scenes[id]);\r\n    }\r\n  }\r\n  addScene(id, scene) {\r\n    this.scenes[id] = scene;\r\n  }\r\n  removeScene(id) {\r\n    let _scene = this.scenes[id];\r\n    this.scenes[id] = null;\r\n  }\r\n\r\n  // Controls\r\n  disableScene() {\r\n    let scene = this.removeChild(this.activeScene);\r\n    scene.destroy();\r\n    this.activeScene = null;\r\n    this.emit('disabledScene', scene);\r\n  }\r\n  enableScene(id, restart) {\r\n    this.activeScene && this.disableScene();\r\n\r\n    let Scene = this.getScene(id);\r\n    this.activeScene = this.addChild(new Scene(this.game, restart));\r\n    this.activeScene._idScene = id;\r\n\r\n    this.emit('enabledScene', this.activeScene);\r\n  }\r\n  toScene(scene, color, show=500, hide=500) {\r\n    this.game.splash.show(color, show, hide, () => {\r\n      this.enableScene(scene);\r\n    });\r\n  }\r\n  restartScene(color, show=500, hide=500) {\r\n    this.game.splash.show(color, show, hide, () => {\r\n      this.enableScene(this.activeScene._idScene, true);\r\n    });\r\n    this.emit('restartedScene', this.activeScene);\r\n  }\r\n}\r\n\r\nmodule.exports = Scenes;\r\n","const scripts = require('../content/scripts');\r\n\r\nclass Scripts {\r\n  constructor(game) {\r\n    this.game = game;\r\n  }\r\n  run(id, args) {\r\n    scripts[id](this.game, this.game.scenes.activeScene, args);\r\n  }\r\n}\r\n\r\nmodule.exports = Scripts;\r\n","const screenfull = require('screenfull');\r\n\r\nclass Settings {\r\n  constructor(game) {\r\n    this.game = game;\r\n\r\n    this.LANGS = ['en', 'ru'];\r\n\r\n    let s = this.game.store.getSettings();\r\n    this.toggleMusic(s.music != null ? +s.music : 1);\r\n    this.toggleSounds(s.sounds != null ? +s.sounds : 1);\r\n    this.setLang(s.langIndex != null ? +s.langIndex : 0);\r\n  }\r\n  get lang() {\r\n    return this.LANGS[this.langIndex];\r\n  }\r\n  toggleFullscreen() {\r\n    screenfull.toggle();\r\n    this.isFullscreen = screenfull.isFullscreen;\r\n  }\r\n  toggleSounds(i) {\r\n    this.sounds = i;\r\n    this.game.audio.toggleSounds(this.sounds);\r\n    this.game.store.saveSettings(this);\r\n  }\r\n  toggleMusic(i) {\r\n    this.music = i;\r\n    this.game.audio.toggleMusic(this.music);\r\n    this.game.store.saveSettings(this);\r\n  }\r\n  setLang(id) {\r\n    this.langIndex = id;\r\n    this.game.store.saveSettings(this);\r\n  }\r\n}\r\n\r\nmodule.exports = Settings;\r\n","class Splash extends PIXI.Graphics {\r\n  constructor(game) {\r\n    super();\r\n    game.addChild(this);\r\n\r\n    this.game = game;\r\n    this.alpha = 0;\r\n  }\r\n  show(color=0xFFFFFF, showTime=1000, endTime=1000, showEvent, endEvent) {\r\n    this.beginFill(color);\r\n    this.drawRect(0, 0, this.game.w, this.game.h);\r\n\r\n    let hide = PIXI.tweenManager.createTween(this)\r\n      .from({alpha: 1}).to({alpha: 0});\r\n    hide.on('end', () => endEvent && endEvent());\r\n    hide.time = endTime;\r\n    \r\n    if(showTime) {\r\n      let show = PIXI.tweenManager.createTween(this)\r\n        .from({alpha: 0}).to({alpha: 1});\r\n      show.time = showTime;\r\n      show.on('end', () => {\r\n        showEvent && showEvent();\r\n        hide.start();\r\n      });\r\n      show.start();\r\n    } else {\r\n      showEvent && showEvent();\r\n      hide.start();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Splash;\r\n","class Store {\r\n  constructor(game) {\r\n    this.game = game;\r\n  }\r\n  saveSettings(settings) {\r\n    localStorage.setItem('langIndex', +settings.langIndex);\r\n    localStorage.setItem('music', +settings.music);\r\n    localStorage.setItem('sounds', +settings.sounds);\r\n    localStorage.setItem('filters', +settings.filters);\r\n  }\r\n  saveGameplay(gameplay) {\r\n    localStorage.setItem('score', +gameplay.score);\r\n    localStorage.setItem('checkpoint', +gameplay.checkpoint);\r\n  }\r\n  getSettings() {\r\n    return {\r\n      langIndex: localStorage.getItem('langIndex'),\r\n      music: localStorage.getItem('music'),\r\n      sounds: localStorage.getItem('sounds'),\r\n      filters: localStorage.getItem('filters')\r\n    }\r\n  }\r\n  getGameplay() {\r\n    return {\r\n      score: localStorage.getItem('score'),\r\n      checkpoint: localStorage.getItem('checkpoint'),\r\n      activateType: localStorage.getItem('activateType')\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Store;\r\n","const Loader = require('./core/Loader');\r\nconst Game = require('./Game');\r\n\r\nnew Loader().loadResources(() => {\r\n  window.game = new Game();\r\n  game.audio.playMusic('mantra');\r\n  game.scenes.toScene('menu', 0xFFFFFF, 0, 1000);\r\n});\r\n","class FxManager {\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n    this.game = scene.game || scene;\r\n\r\n    this.vignette = new PIXI.Sprite.fromImage('vignette');\r\n    this.vignette.width = this.game.w;\r\n    this.vignette.height = this.game.h;\r\n    this.vignette.alpha = .2;\r\n    this.scene.addChild(this.vignette);\r\n\r\n    this.crtFx = new PIXI.filters.CRTFilter();\r\n    this.glitchFx = new PIXI.filters.GlitchFilter({\r\n      fillMode: 3,\r\n      slices: 0,\r\n      offset: 10,\r\n      red: [-2, 0],\r\n      blue: [-1, 2],\r\n      green: [3, 1]\r\n    });\r\n    this.scene.filters = [this.crtFx, this.glitchFx];\r\n    this.game.ticker.add((dt) => this.update(dt));\r\n  }\r\n  blinkVignette(time=2000) {\r\n    let show = PIXI.tweenManager.createTween(this.vignette);\r\n    show.from({alpha: .2}).to({alpha: 1});\r\n    show.time = time*1/4;\r\n    show.on('end', () => {\r\n      let end = PIXI.tweenManager.createTween(this.vignette);\r\n      end.from({alpha: 1}).to({alpha: .2});\r\n      end.time = time*3/4;\r\n      end.start();\r\n    });\r\n    show.start();\r\n  }\r\n  update(dt) {\r\n    this.crtFx.time += dt;\r\n    this.glitchFx.time += dt;\r\n\r\n    let pos = this.game.mouse.position;\r\n    this.glitchFx.red[0] = 0.7*pos.x/1920*2;\r\n    this.glitchFx.red[1] = 0.9*pos.y/1080*2;\r\n    this.glitchFx.blue[0] = 0.5*pos.x/1920*2;\r\n    this.glitchFx.blue[1] = -0.9*pos.y/1080*2;\r\n    this.glitchFx.green[0] = -2*pos.x/1920*2;\r\n    this.glitchFx.green[1] = -1.2*pos.y/1080*2;\r\n    this.glitchFx.seed = Math.random();\r\n  }\r\n}\r\n\r\nmodule.exports = FxManager;\r\n","const types = require('../content/types');\r\n\r\nclass GameplayManager {\r\n  constructor(scene) {\r\n    this.game = scene.game || scene;\r\n    this.scene = scene;\r\n\r\n    this.map = scene.map;\r\n    this.player = scene.player;\r\n    this.history = scene.history;\r\n\r\n    this.game.ticker.add(() => this.update());\r\n    this._bindEvent();\r\n  }\r\n  _bindEvent() {\r\n    this.map.on('scrolled', () => this.player.updateMoving());\r\n    this.history.on('hidden', () => this.hideHistory());\r\n    this.player.on('deaded', () => this.restart());\r\n    this.player.on('collidedBlock', (block) => this.checkCollide(block));\r\n\r\n    this.map.generateMap();\r\n    this.map.scrollDown(1);\r\n  }\r\n\r\n  // функция активации блока при удержании мышки на блоке\r\n  activateBlock(pos) {\r\n    for(let i = 0; i < this.map.children.length; i++) {\r\n      let block = this.map.children[i];\r\n      if(block.type !== this.scene.activateType) continue;\r\n      if(block.containsPoint({x: pos.x*this.game.resolution, y: pos.y*this.game.resolution})) return block.hit();\r\n      else block.unhit();\r\n    }\r\n  }\r\n\r\n  // Проверяем коллизию блока на различные триггеры\r\n  checkCollide(block) {\r\n    this.setBlockType(block);\r\n    this.showHistory(block);\r\n    this.saveCheckpoint(block);\r\n  }\r\n  setBlockType(block) {\r\n    if(this.scene.activateType !== block.type) this.scene.fx.blinkVignette();\r\n    this.scene.activateType = block.type;\r\n    this.scene.fx.vignette.tint = block.tint;\r\n    this.scene.paralax.tint = block.tint;\r\n  }\r\n  // Проверить на чекпоинт\r\n  saveCheckpoint(block) {\r\n    if(block.checkpoint) {\r\n      this.game.store.saveGameplay({\r\n        checkpoint: block.index,\r\n        score: this.scene.score,\r\n        activateType: this.scene.activateType\r\n      });\r\n      this.scene.fx.blinkVignette();\r\n    }\r\n  }\r\n  // Если блок имеет свойство historyID, то показать фрагмент сюжета с таким идентификатором. (content/history.json)\r\n  showHistory(block) {\r\n    if(block.scriptID) {\r\n      this.game.scripts.run(block.scriptID);\r\n      this.scene.isRestarted = false;\r\n    }\r\n  }\r\n  hideHistory() {\r\n    this.map.showHiddenBlocks();\r\n    setTimeout(() => this.player.startMove(), 500);\r\n  }\r\n  // При проигрыше отправлять карту к последнему чекпоинту\r\n  restart() {\r\n    this.game.scenes.restartScene();\r\n  }\r\n  // Обновляем проверку на активацию блока\r\n  update() {\r\n    this.activateBlock(this.game.mouse.position);\r\n  }\r\n}\r\n\r\nmodule.exports = GameplayManager;\r\n","class HistoryManager extends PIXI.Text {\r\n  constructor(scene) {\r\n    super();\r\n    scene.addChild(this);\r\n    this.game = game;\r\n    this.scene = scene;\r\n\r\n    this.style = {\r\n      font: 'normal 50px Montserrat',\r\n      wordWrap: true,\r\n      weight: 'bold',\r\n      wordWrapWidth: this.game.w*3/4,\r\n      fill: '#fff',\r\n      padding: 10,\r\n      align: 'center'\r\n    };\r\n    this.anchor.set(.5, 0);\r\n    this.alpha = 0;\r\n    this.x = this.game.w/2;\r\n    this.y = 150;\r\n  }\r\n  setLangStyle() {\r\n    if(this.game.settings.lang == 'ru') {\r\n      this.style.fontFamily = 'Montserrat';\r\n      this.style.fontWeight = 'bold';\r\n    } else this.style.fontFamily = 'Milton Grotesque';\r\n  }\r\n  show(history) {\r\n    this.emit('showen');\r\n    if(this.scene.isRestarted) return this.emit('hidden');\r\n\r\n    this.lastHistory = history;\r\n    this.setLangStyle();\r\n    this.alpha = 1;\r\n\r\n    const text = this.lastHistory.text[this.game.settings.lang].toUpperCase();\r\n    let data = {i: 0};\r\n    let show = PIXI.tweenManager.createTween(data);\r\n    show.from({i: 0}).to({i: text.length});\r\n    show.time = this.lastHistory.time/2;\r\n    show.on('update', () => {\r\n      this.text = text.slice(0, data.i) + '_';\r\n    })\r\n    show.start();\r\n    setTimeout(() => this._hide(), this.lastHistory.time);\r\n  }\r\n  _hide() {\r\n    let hide = PIXI.tweenManager.createTween(this);\r\n    hide.from({alpha: 1}).to({alpha: 0});\r\n    hide.time = 1000;\r\n    hide.start();\r\n    this.emit('hidden');\r\n  }\r\n}\r\n\r\nmodule.exports = HistoryManager;\r\n","class InterfaceManager extends PIXI.Container {\r\n  constructor(scene) {\r\n    super();\r\n    scene.addChild(this);\r\n    this.game = scene.game;\r\n  }\r\n  addText(opt) {\r\n    let text = new PIXI.Text(opt.text, {\r\n      font: opt.font,\r\n      fill: opt.color,\r\n      align: opt.align || 'center'\r\n    });\r\n    text.anchor.set(.5);\r\n    text.y = opt.y;\r\n    text.x = opt.x;\r\n    text.interactive = true;\r\n    text.on('pointerdown', () => opt.click && opt.click(text));\r\n    this.addChild(text);\r\n\r\n    return text;\r\n  }\r\n  addButton(opt) {\r\n    let btn = new PIXI.Sprite.fromImage(opt.image);\r\n    this.addChild(btn);\r\n\r\n    btn.x = opt.x;\r\n    btn.y = opt.y;\r\n    btn.anchor.set(.5);\r\n    btn.interactive = true;\r\n    btn.scale.set(opt.scale || 1);\r\n    btn.tint = opt.tint || 0xFFFFFF;\r\n    btn.on('pointerdown', () => opt.click && opt.click(btn));\r\n\r\n    return btn;\r\n  }\r\n  addListInput(opt) {\r\n    let txt = this.addText(Object.assign({\r\n      text: opt.value + opt.list[opt.current],\r\n      click: (el) => {\r\n        if(opt.current >= opt.list.length-1) opt.current = 0;\r\n        else opt.current++;\r\n        el.text = opt.value + opt.list[opt.current];\r\n        opt.set && opt.set(opt.current);\r\n      }\r\n    }, opt));\r\n    return txt;\r\n  }\r\n}\r\n\r\nmodule.exports = InterfaceManager;\r\n","/*\r\n  Движок тайловой карты\r\n  События:\r\n    scrolledDown => dtDown\r\n    scrolledTop => dtTop\r\n*/\r\n\r\nconst map = require('../content/map');\r\nconst blocks = require('../content/blocks');\r\nconst triggers = require('../content/triggers');\r\nconst Block = require('../subjects/Block');\r\nconst TiledManager = require('./TiledManager');\r\n\r\nclass MapManager extends PIXI.projection.Container2d {\r\n  constructor(scene, checkpoint=0) {\r\n    super();\r\n    this.scene = scene;\r\n    this.game = scene.game;\r\n\r\n    this.tiled = new TiledManager(map, blocks, triggers);\r\n    this.tileSize = 120;\r\n    this.speed = 400;\r\n    this.showDelay = 1;\r\n\r\n    this.PROJECTION_PADDING_BOTTOM = 240;\r\n    this.x = this.game.w/2-this.tiled.mapWidth*this.tileSize/2;\r\n    this.y = -this.tiled.mapHeight*this.tileSize+this.game.h-this.PROJECTION_PADDING_BOTTOM+(checkpoint*this.tileSize);\r\n\r\n    this._createProjection();\r\n  }\r\n  _createProjection() {\r\n    let projection = new PIXI.projection.Container2d();\r\n    projection.proj.setAxisY({x: -this.game.w/2+50, y: 4000}, -1);\r\n\r\n    projection.addChild(this);\r\n    this.scene.addChild(projection);\r\n  }\r\n  generateMap() {\r\n    this.tiled.data.forEach((tile) => {\r\n      this.addBlock(tile.x, tile.y, tile.data);\r\n    });\r\n    this.emit('generatedMap');\r\n  }\r\n  addBlock(x, y, data) {\r\n    let block = new Block(this.scene, this, x, y, data);\r\n    this.addChild(block);\r\n  }\r\n  getBlock(pos) {\r\n    for(let i = 0; i < this.children.length; i++) {\r\n      let block = this.children[i];\r\n\r\n      let x = block.transform.worldTransform.tx/this.game.resolution-block.width/2;\r\n      let y = block.transform.worldTransform.ty/this.game.resolution-block.height/2;\r\n      let w = block.width;\r\n      let h = block.height;\r\n\r\n      if(pos.x >= x && pos.x <= x+w && pos.y >= y && pos.y <= y+h) return this.children[i];\r\n    }\r\n  }\r\n  getNearBlocks(pos) {\r\n    return {\r\n      center: this.getBlock(pos),\r\n      top: this.getBlock({x: pos.x, y: pos.y-this.tileSize}),\r\n      left: this.getBlock({x: pos.x-this.tileSize, y: pos.y}),\r\n      right: this.getBlock({x: pos.x+this.tileSize, y: pos.y}),\r\n    }\r\n  }\r\n\r\n  // Moving Map\r\n  scrollDown(blocks, cb) {\r\n    this.scrollTo(this.y+blocks*this.tileSize, this.speed*blocks, cb);\r\n  }\r\n  scrollTop(blocks, cb) {\r\n    this.scrollTo(this.y-blocks*this.tileSize, this.speed*blocks, cb);\r\n  }\r\n  scrollTo(y, time, cb) {\r\n    let move = PIXI.tweenManager.createTween(this);\r\n    move.from({y: this.y}).to({y: y});\r\n    move.time = time;\r\n\r\n    let isDown = this.y < y;\r\n    move.on('end', () => {\r\n      cb && cb();\r\n      this.emit('scrolled');\r\n      this.checkOutRangeBlocks();\r\n    });\r\n    move.start();\r\n  }\r\n\r\n  showHiddenBlocks() {\r\n    for(let i = 0; i < this.children.length; i++) {\r\n      let block = this.children[i];\r\n      let y = block.transform.worldTransform.ty/this.game.resolution-this.tileSize/2;\r\n      if(y >= -this.tileSize*2 && block.showDelay) block.show();\r\n    }\r\n  }\r\n\r\n  checkOutRangeBlocks() {\r\n    for(let i = 0; i < this.children.length; i++) {\r\n      let block = this.children[i];\r\n      let y = block.transform.worldTransform.ty/this.game.resolution-this.tileSize/2;\r\n      if(y >= this.game.h-this.tileSize*2) block.hide();\r\n      else if(y >= -this.tileSize*2 && !block.showDelay) block.show();\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = MapManager;\r\n","class ParalaxManager extends PIXI.Container {\r\n  constructor(scene) {\r\n    super();\r\n\r\n    this.scene = scene;\r\n    this.game = scene.game || game;\r\n    this.game.ticker.add(() => this.update());\r\n    this.scene.addChild(this);\r\n\r\n    this.images = ['object_rect.png', 'object_shape.png', 'object_circle.png'];\r\n    this.padding = 100;\r\n    this.speed = 4;\r\n    this.timer = 100;\r\n    this._spawnToLeft = true;\r\n    this._time = 0;\r\n    this.tint = 0xFFFFFF;\r\n  }\r\n  spawnObject() {\r\n    let img = this.images[Math.floor(Math.random()*this.images.length)];\r\n    let obj = new PIXI.Sprite.fromImage(img);\r\n    this._spawnToLeft = !this._spawnToLeft;\r\n    obj.tint = this.tint;\r\n    obj.y = -obj.height;\r\n    obj.x = this._spawnToLeft ? Math.random()*this.padding+100 : this.game.w-obj.width-Math.random()*this.padding-100;\r\n    obj.rotation = this._spawnToLeft ? -.1 : .1;\r\n    this.addChild(obj);\r\n  }\r\n  update() {\r\n    this._time++;\r\n    if(this._time >= this.timer) {\r\n      this._time = 0;\r\n      this.spawnObject();\r\n    }\r\n\r\n    for(let i = 0; i < this.children.length; i++) {\r\n      let obj = this.children[i];\r\n      obj.y += this.speed;\r\n      if(obj.y > this.game.h) this.removeChild(obj);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = ParalaxManager;\r\n","class TiledManager {\r\n  constructor(map, blocks, triggers) {\r\n\r\n    this.mapWidth = map.width;\r\n    this.mapHeight = map.height;\r\n    this.map = map.layers[0].data;\r\n    this.triggersMap = map.layers[1].data;\r\n    this.blocks = blocks.tileproperties;\r\n    this.triggers = triggers.tileproperties;\r\n    this.divideGid = triggers.tilecount;\r\n\r\n    this.data = [];\r\n    this._parseMap();\r\n  }\r\n  _getBlockPropsByGid(blockGid, triggerGid) {\r\n    const FLIPPED_HORIZONTALLY_FLAG = 0x80000000;\r\n    const FLIPPED_VERTICALLY_FLAG   = 0x40000000;\r\n    const FLIPPED_DIAGONALLY_FLAG   = 0x20000000;\r\n\r\n    let flips = {\r\n      horizontalFlip: !!(blockGid & FLIPPED_HORIZONTALLY_FLAG),\r\n      verticalFlip: !!(blockGid & FLIPPED_VERTICALLY_FLAG),\r\n      diagonalFlip: !!(blockGid & FLIPPED_DIAGONALLY_FLAG)\r\n    }\r\n\r\n    if(flips.horizontalFlip || flips.verticalFlip || flips.diagonalFlip)\r\n      blockGid &= ~(FLIPPED_HORIZONTALLY_FLAG |\r\n               FLIPPED_VERTICALLY_FLAG |\r\n               FLIPPED_DIAGONALLY_FLAG);\r\n\r\n    return Object.assign({}, flips, this.blocks[blockGid-this.divideGid-1], this.triggers[triggerGid-1]);\r\n  }\r\n  _parseMap() {\r\n    for(let y = 0; y < this.mapHeight; y++) {\r\n      for(let x = 0; x < this.mapWidth; x++) {\r\n        if(this.map[y*this.mapWidth+x])\r\n          this.data.push({x, y, data: this._getBlockPropsByGid(this.map[y*this.mapWidth+x], this.triggersMap[y*this.mapWidth+x])});\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = TiledManager;\r\n","class Final extends PIXI.Container {\r\n  constructor(game) {\r\n    super();\r\n    this.game = game;\r\n  }\r\n}\r\n\r\nmodule.exports = Final;\r\n","const ParalaxManager = require('../managers/ParalaxManager');\r\nconst InterfaceManager = require('../managers/InterfaceManager');\r\nconst FxManager = require('../managers/FxManager');\r\n\r\nclass Menu extends PIXI.Container {\r\n  constructor(game) {\r\n    super();\r\n    this.game = game;\r\n\r\n    this.background = new ParalaxManager(this);\r\n    this.ui = new InterfaceManager(this);\r\n    this.fx = new FxManager(this);\r\n\r\n    this.ui.addText({\r\n      text: 'MOTTION. Do the way',\r\n      font: 'normal 120px Milton Grotesque',\r\n      color: 0xFFFFFF,\r\n      x: this.game.w/2,\r\n      y: 330,\r\n      click: () => this.game.scenes.toScene('playground', 0xFFFFFF)\r\n    });\r\n    this.ui.addText({\r\n      text: 'If you want to live_',\r\n      font: 'normal 82px Milton Grotesque',\r\n      color: 0xFFFFFF,\r\n      x: this.game.w/2,\r\n      y: 460,\r\n      click: () => this.game.scenes.toScene('playground', 0xFFFFFF)\r\n    });\r\n    this.ui.addText({\r\n      text: 'press to start...',\r\n      font: 'normal 42px Milton Grotesque',\r\n      color: 0xfffd4d,\r\n      x: this.game.w/2,\r\n      y: 700,\r\n      click: () => this.game.scenes.toScene('playground', 0xFFFFFF)\r\n    });\r\n    this.ui.addButton({\r\n      image: 'settings.png',\r\n      x: this.game.w-110,\r\n      y: 110,\r\n      scale: 1.5,\r\n      tint: 0xfffd4d,\r\n      click: () => this.game.scenes.toScene('settings', 0xFFFFFF)\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = Menu;\r\n","// managers\r\nconst MapManager = require('../managers/MapManager');\r\nconst HistoryManager = require('../managers/HistoryManager');\r\nconst ParalaxManager = require('../managers/ParalaxManager');\r\nconst GameplayManager = require('../managers/GameplayManager');\r\nconst InterfaceManager = require('../managers/InterfaceManager');\r\nconst Player = require('../subjects/Player');\r\nconst FxManager = require('../managers/FxManager');\r\n\r\nclass Playground extends PIXI.Container {\r\n  constructor(game, isRestart=false) {\r\n    super();\r\n    this.game = game;\r\n\r\n    Object.assign(this, {\r\n      score: 0,\r\n      checkpoint: 1,\r\n      activateType: 'white'\r\n    }, this.game.store.getGameplay());\r\n\r\n    this.isRestarted = isRestart;\r\n\r\n    this.paralax = new ParalaxManager(this);\r\n    this.fx = new FxManager(this);\r\n\r\n    this.map = new MapManager(this, this.checkpoint);\r\n    this.history = new HistoryManager(this);\r\n    this.player = new Player(this);\r\n    this.gameplay = new GameplayManager(this);\r\n\r\n    this.ui = new InterfaceManager(this);\r\n    this.ui.addButton({\r\n      image: 'close.png',\r\n      x: this.game.w-100,\r\n      y: 100,\r\n      click: () => this.game.scenes.toScene('menu', 0xFFFFFF)\r\n    });\r\n    this.game.splash.show(0xFFFFFF, 0, 500);\r\n  }\r\n}\r\n\r\nmodule.exports = Playground;\r\n","const ParalaxManager = require('../managers/ParalaxManager');\r\nconst InterfaceManager = require('../managers/InterfaceManager');\r\nconst FxManager = require('../managers/FxManager');\r\n\r\nclass Settings extends PIXI.Container {\r\n  constructor(game) {\r\n    super();\r\n\r\n    this.game = game;\r\n    this.settings = game.settings;\r\n\r\n    this.background = new ParalaxManager(this);\r\n    this.ui = new InterfaceManager(this);\r\n    this.fx = new FxManager(this);\r\n\r\n    let top = 250;\r\n    let inputPadding = 110;\r\n    this.ui.addListInput({\r\n      value: 'Fullscreen: ',\r\n      font: 'normal 72px Milton Grotesque',\r\n      color: 0xFFFFFF,\r\n      x: this.game.w/2,\r\n      y: top+inputPadding,\r\n      list: ['OFF', 'ON'],\r\n      current: this.settings.isFullscreen,\r\n      set: (i) => this.settings.toggleFullscreen(i)\r\n    });\r\n    this.ui.addListInput({\r\n      value: 'Music: ',\r\n      font: 'normal 72px Milton Grotesque',\r\n      color: 0xFFFFFF,\r\n      x: this.game.w/2,\r\n      y: top+2*inputPadding,\r\n      list: ['OFF', 'ON'],\r\n      current: this.settings.music ? 1 : 0,\r\n      set: (i) => this.settings.toggleMusic(i)\r\n    });\r\n    this.ui.addListInput({\r\n      value: 'Sounds: ',\r\n      font: 'normal 72px Milton Grotesque',\r\n      color: 0xFFFFFF,\r\n      x: this.game.w/2,\r\n      y: top+3*inputPadding,\r\n      list: ['OFF', 'ON'],\r\n      current: this.settings.sounds ? 1 : 0,\r\n      set: (i) => this.settings.toggleSounds(i)\r\n    });\r\n    this.ui.addListInput({\r\n      value: 'Lang: ',\r\n      font: 'normal 72px Milton Grotesque',\r\n      color: 0xFFFFFF,\r\n      x: this.game.w/2,\r\n      y: top+4*inputPadding,\r\n      list: this.settings.LANGS,\r\n      current: this.settings.langIndex,\r\n      set: (i) => this.settings.setLang(i)\r\n    });\r\n    this.ui.addButton({\r\n      image: 'close.png',\r\n      x: this.game.w-100,\r\n      y: 100,\r\n      click: () => this.game.scenes.toScene('menu', 0xFFFFFF)\r\n    });\r\n  }\r\n}\r\n\r\nmodule.exports = Settings;\r\n","module.exports = {\r\n  'menu': require('./Menu'),\r\n  'playground': require('./Playground'),\r\n  'settings': require('./Settings'),\r\n  'final': require('./Final')\r\n}\r\n","/*\r\n  Класс Блока, используется для тайлового движка\r\n  События:\r\n    showen\r\n    hidden\r\n    activated\r\n    deactivated\r\n    hited\r\n*/\r\nconst Tile = require('./Tile');\r\n\r\nclass Block extends Tile {\r\n  constructor(scene, map, x, y, data={}) {\r\n    super(scene, map, x, y, data);\r\n\r\n    this.jolting = PIXI.tweenManager.createTween(this);\r\n    this.jolting.from({rotation: -.1}).to({rotation: .1});\r\n    this.jolting.time = 200;\r\n    this.jolting.pingPong = true;\r\n    this.jolting.repeat = Infinity;\r\n  }\r\n  show() {\r\n    if(this.renderable) return;\r\n    this.renderable = true;\r\n\r\n    this.alpha = 0;\r\n    let show = PIXI.tweenManager.createTween(this);\r\n\r\n    show.time = this.map.speed;\r\n    // show.from({width: 0, height: 0, y: this.y+this.height, alpha: 0});\r\n    // show.to({width: this.map.tileSize-10, height: this.map.tileSize-10, y: this.y, alpha: 1});\r\n    show.from({alpha: 0});\r\n    show.to({alpha: 1});\r\n    if(this.showDelay) setTimeout(() => show.start(), Math.random()*this.map.speed);\r\n    else show.start();\r\n\r\n    this.emit('showen');\r\n  }\r\n  hide(delay) {\r\n    if(!this.renderable) return;\r\n    this.renderable = true;\r\n\r\n    let hide = PIXI.tweenManager.createTween(this);\r\n    hide.from({width: this.width, height: this.height, y: this.y, alpha: 1});\r\n    hide.to({width: 0, height: 0, y: this.y+this.height, alpha: 0});\r\n\r\n    setTimeout(() => hide.start(), Math.random()*this.map.speed/2);\r\n    hide.on('end', () => this.renderable = false);\r\n    hide.time = this.map.speed;\r\n\r\n    this.emit('hidden');\r\n  }\r\n  activate() {\r\n    if(this.activatedTexture) this.texture = this.activatedTexture;\r\n\r\n    let activating = PIXI.tweenManager.createTween(this)\r\n      .from({width: this.width*3/4, height: this.height*3/4})\r\n      .to({width: this.width, height: this.height, rotation: 0});\r\n    activating.time = 500;\r\n    activating.easing = PIXI.tween.Easing.outBounce();\r\n    activating.start();\r\n\r\n    this.unhit();\r\n    this.active = true;\r\n    this.emit('activated');\r\n  }\r\n  deactivate() {\r\n    if(this.deactivatedTexture) this.texture = this.deactivatedTexture;\r\n    this.active = false;\r\n\r\n    this.emit('deactivated');\r\n  }\r\n  unhit() {\r\n    this.jolting.stop();\r\n    this.rotation = 0;\r\n  }\r\n  hit() {\r\n    if(this.activation === null || this.active) return;\r\n\r\n    this.jolting.start();\r\n    if(this.activation) this.activation--;\r\n    else this.activate();\r\n\r\n    this.emit('hited');\r\n  }\r\n}\r\n\r\nmodule.exports = Block;\r\n","/*\r\n  Класс Player, взаимодействует с MapManager\r\n  События\r\n    collidedBlock => collided block\r\n\r\n    actionDeaded\r\n    actionImmunity\r\n    actionTop\r\n    actionLeft\r\n    actionRight\r\n*/\r\n\r\nclass Player extends PIXI.Sprite {\r\n  constructor(scene) {\r\n    super(PIXI.Texture.fromImage('player.png'));\r\n    scene.addChild(this);\r\n\r\n    this.game = scene.game;\r\n    this.map = scene.map;\r\n    this.scene = scene;\r\n\r\n    this.SCALE = .7;\r\n    this.loop = true;\r\n    this.tint = 0xfef52e;\r\n    this.anchor.set(.5, 1);\r\n    this.scale.set(this.SCALE);\r\n    this.x = this.game.w/2;\r\n    this.y = this.game.h-this.map.tileSize*2;\r\n    this.collisionPoint = new PIXI.Point(this.game.w/2, this.game.h-this.map.tileSize*2);\r\n\r\n    this.walking = PIXI.tweenManager.createTween(this);\r\n    this.walking.from({y: this.y}).to({y: this.y-15});\r\n    this.walking.time = 800;\r\n    this.walking.loop = true;\r\n    this.walking.pingPong = true;\r\n\r\n    this.deadSprite = new PIXI.Sprite(PIXI.Texture.WHITE);\r\n    this.deadSprite.anchor.set(.5, 1);\r\n    this.deadSprite.height = 0;\r\n    this.deadSprite.width = this.map.tileSize;\r\n    this.scene.addChild(this.deadSprite);\r\n\r\n    this.lastMove = null;\r\n    this.isDead = false;\r\n    this.isStop = false;\r\n\r\n    this.OFFSET_X = 25;\r\n  }\r\n  updateMoving() {\r\n    if(this.isDead || this.isStop) return;\r\n\r\n    let blocks = this.map.getNearBlocks(this.collisionPoint);\r\n    if(blocks.center) {\r\n      this.emit('collidedBlock', blocks.center);\r\n\r\n      if(blocks.center.playerDir === 'stop') return this.stopMove();\r\n      if(blocks.center.playerDir === 'top') return this.top();\r\n      if(blocks.center.playerDir === 'left') return this.left();\r\n      if(blocks.center.playerDir === 'right') return this.right();\r\n\r\n      // check dead\r\n      if(!blocks.center.active) return this.dead(blocks.center.tint);\r\n      //check top\r\n      if(blocks.top && blocks.top.active) return this.top();\r\n      // check left\r\n      if(blocks.left && blocks.left.active && this.lastMove !== 'right') return this.left();\r\n      // check rigth\r\n      if(blocks.right && blocks.right.active && this.lastMove !== 'left') return this.right();\r\n      // or die\r\n      this.top();\r\n    } else this.dead(0xFFFFFF);\r\n  }\r\n  dead(tint) {\r\n    this.deadSprite.tint = tint;\r\n    this.deadSprite.x = this.collisionPoint.x+5;\r\n    this.deadSprite.y = this.collisionPoint.y+this.map.tileSize;\r\n    let dead = PIXI.tweenManager.createTween(this.deadSprite);\r\n    dead.from({alpha: 0, height: 0}).to({alpha: 1, height: this.game.h});\r\n    dead.time = this.map.speed/2;\r\n    dead.start();\r\n    dead.on('end', () => {\r\n      this.isDead = true;\r\n      setTimeout(() => this.emit('deaded'), 500);\r\n    });\r\n    this.stopMove();\r\n  }\r\n  startMove() {\r\n    this.walking.start();\r\n    this.top();\r\n    this.isStop = false;\r\n  }\r\n  stopMove() {\r\n    this.walking.stop();\r\n    this.isStop = true;\r\n  }\r\n  top() {\r\n    this.lastMove = 'top';\r\n    this.map.scrollDown(1);\r\n    this.emit('actionTop');\r\n  }\r\n  left() {\r\n    this.lastMove = 'left';\r\n    let move = PIXI.tweenManager.createTween(this);\r\n    move.from({x: this.x}).to({x: this.x-this.map.tileSize-this.OFFSET_X});\r\n    move.time = this.map.speed/2;\r\n    move.start();\r\n\r\n    this.collisionPoint.x -= this.map.tileSize;\r\n    this.collisionPoint.x -= this.OFFSET_X;\r\n\r\n    move.on('end', () => this.updateMoving());\r\n    this.emit('actionLeft');\r\n  }\r\n  right() {\r\n    this.lastMove = 'right';\r\n    let move = PIXI.tweenManager.createTween(this);\r\n    move.from({x: this.x}).to({x: this.x+this.map.tileSize+this.OFFSET_X});\r\n    move.time = this.map.speed/2;\r\n    move.start();\r\n\r\n    this.collisionPoint.x += this.map.tileSize;\r\n    this.collisionPoint.x += this.OFFSET_X;\r\n\r\n    move.on('end', () => this.updateMoving());\r\n    this.emit('actionRight');\r\n  }\r\n}\r\n\r\nmodule.exports = Player;\r\n","/*\r\n  Класс Блока, используется для тайлового движка\r\n  События:\r\n    showen\r\n    hidden\r\n    activated\r\n    deactivated\r\n    hited\r\n*/\r\nconst types = require('../content/types');\r\n\r\nclass Tile extends PIXI.projection.Sprite2d {\r\n  constructor(scene, map, x, y, data={}) {\r\n    super();\r\n\r\n    this.game = scene.game;\r\n    this.scene = scene;\r\n    this.map = map;\r\n\r\n    Object.assign(this, {\r\n      score: 0,\r\n      active: false,\r\n      type: 'white',\r\n      activation: null,\r\n      playerDir: null,\r\n      checkpoint: false,\r\n      historyID: null,\r\n      showDelay: false\r\n    }, data);\r\n\r\n\r\n    this.activatedTexture = PIXI.Texture.fromFrame('block_fill.png');\r\n    this.deactivatedTexture = PIXI.Texture.fromFrame('block.png');\r\n    this.texture = data.active ? this.activatedTexture : this.deactivatedTexture;\r\n\r\n    this.tint = types[this.type] || 0xFFFFFF;\r\n    this.anchor.set(.5);\r\n    this.renderable = false;\r\n    this.width = map.tileSize-10;\r\n    this.height = map.tileSize-10;\r\n    this.x = x*map.tileSize+map.tileSize/2-5;\r\n    this.y = y*map.tileSize+map.tileSize/2-5;\r\n    this.index = 1000-y-2;\r\n  }\r\n}\r\n\r\nmodule.exports = Tile;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}